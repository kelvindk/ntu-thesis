%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: saliva_absorb.pdf
%%Creator: (Adobe Acrobat 11.0.18)
%%For: kelvindk
%%CreationDate: 2016/10/20, 下午6:38
%%BoundingBox: 0 0 449 406
%%HiResBoundingBox: 0 0 448.7120 405.0003
%%CropBox: 0 0 448.7120 405.0003
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1060 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GPL Ghostscript 9.16"
   xmp:ModifyDate="2016-10-20T17:48:23+08:00"
   xmp:CreateDate="2015-12-07T15:23:45+08:00"
   xmp:CreatorTool="(Adobe Acrobat 11.0.13)"
   xmp:MetadataDate="2016-10-20T17:48:23+08:00"
   xmpMM:DocumentID="uuid:ffdd428a-d4cf-11f0-0000-5a3612428b30"
   xmpMM:InstanceID="uuid:669f2d01-7cd9-8940-b043-7ef4821c9d62"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">fig-paper.pdf</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>cwyou</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 0 
/Lookup <~
!!!!!~>
>>
/CSD add_res
/1 
<<
/Name (Black)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
/2 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 15 
/Lookup <~
^TFR!z!<)ot^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -405 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 405 li
448.712 405 li
448.712 0 li
cp
clp
gsave
.6102 429.61 mo
666.412 429.61 li
666.412 .198212 li
.6102 .198212 li
cp
eclp
0 430 mo
829.836 430 li
829.836 -1.94601 li
0 -1.94601 li
cp
false sop
/1 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
grestore
gsave
.6 18.3 mo
332.7 18.3 li
332.7 9.5 li
.6 9.5 li
cp
clp
-1.31 18.31 mo
332.91 18.31 li
332.91 9.48996 li
-1.31 9.48996 li
cp
false sop
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 405 ]ct
[334.22 0 0 8.82002 -1.31 386.69 ]ct
snap_to_device
<<
/T 1
/W 696 
/H 19 
/M[696 0 0 -19 0 19 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcL`0J,~>

%%EndBinary
grestore
np
grestore
gsave
.6 27 mo
332.7 27 li
332.7 18.2 li
.6 18.2 li
cp
clp
-1.31 27.01 mo
332.91 27.01 li
332.91 18.19 li
-1.31 18.19 li
cp
false sop
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 405 ]ct
[334.22 0 0 8.82002 -1.31 377.99 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 696 
/H 19 
/M[696 0 0 -19 0 19 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 696 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 696 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 696 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 696 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcO'rJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'r
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&b5__I!X^eH6r*_P"\(sO84Z>J9_h<V8G>R`6pEao4?bba1c$mB2)R)e/d*aU,97X(
"TS].h>e>n)'g@S0etRA0eY.0.P!"u/1W%r1,h)i.OHYq-6j]`,pb#j-7(&l/1N(s-6aQM(`=52*?H:F
,9e*H*ZZ.?*W6ri*?H=D*[;pP+!MaJ+<VaH)]98/*ZZ1:(`OM;*?H:E*ZZ:F+<^Y*0d%S_,p=EX*#U"?
+!;I;)B9_9*?QCI+<DOH*uu:>*?QCE)AsD3)]BM3*$$(A*?6$t)CujM*ul1:(`OP:'c%c0*#fe6)B'P9
)&XD5()@i&'cS)6+rq=1$3UA0!!*2u!.k39!<3)t!!*6*r;Zm$!sJT,!X&Q*quH]sqZ-Qr!X&Z0rWDBb
^]4iF!#H@e*#KS5*?H7D*Zk+rnJV-<ruD"W#p1?>,U4KV+<Vg.+XR+4#U1B1((p]L!s7<Z-ijqn#R(G9
"pYD?#RUkD#R1P>"U5GL&d\jP$k!CI"pG,4#mgb?$P31I'FkKX%hB'U$4$h@#RUtI$P=$_#RC;4#6tM@
#7(\G#R1SB"U,)8#Q=o6#mq%I#mh%O"U=o/!sSo6#5\WC#R^qF$jHhD"pt_E"pbSE!sAf5#R:S=#RLD5
$jR%G$OR.G$O[7H$OZh?/d_sk#R:YD$OI%C"pbSC"9f)?$O[:J#mptJ#m^kG#6tPK'b1NT#R1>8#6b,.
JcLH(rr`3"!!A&X!<WH6!>Z1U'+YWg(Dn#-(DuZ^nJM]E%M'*`(*+PA+s8!+*WRPd,R>V<*#B7j!!<;Z
!"];O((:NX$OdOV&.]*Q!s8fO$4-nC&JZ#h%1j0c%1EXV%1Nm^%h90d'+tie%LWRF!WE0I"9eu6#R:J8
"U"o3"U"o0"9eu7"9o/>"pG85!WiH*!<<*#!Wi6"!!<-'rs&H+!<rf+"s4!R"U557!t,8=$3p_?#mh.T
&JGik%h0$W$3peA$4-e<!s8W(""sZW"9eu6"U"o3"U52<#m^_="U>>="9\u5"9S`-!s8Z0!WrQ-!!!-'
"9eo4#6al'!<E>?!.k3b!!!&u!pp!e!WW8\!.k3&!.k3&!.k3+!!G3mjQYt9n*TE%jQ#=akP=99jn\'7
j:gnEjPeqGb.b^*]Xk_g^V@"UXK2?##cW\=!!!$"!<V3['aIX)\&cb8bg=SUaN2KJbf.W@^VI`;`596n
Z+IWLWjT@BXfSS%X097IZEUX<VOX0DP`_/tT;/$UWMcSgT9u:DrLOFiTVA$MTqRpAS#WE_rh2NOV2g\(
Q^*\pNg5ceMMdCVQ&UidOGnj?G(>[EW2lJJNKK0`Tq.'jKoh4FIXd'3PcCOFLjF,]E--/DH@\,2L4t85
Knb>9KS,&3I=-NsKnbMAM2d:?IY3B/K7\Z+JqJAqJVoD@JqSDoGB%hUJ9l&Z!!!3*!<Kk6SH&Wjk5`^+
%KQV2!!<9&!!<<+"U"o/n,N[p!sAc1"9Sb`!6G3H*g=+D[_BGc[f3c9\bWQ,Y5,<tX9$&HrjE<AVkBl^
TqS-RTqn?PR[O/B!LIp/.Js/G!T=#["$h*jQBR;gPEV;tQC484OHP]aN00<eNIZS@NdlG3KRS2mH$F[e
P)Y3NLk^A&JUMZ\DK0cCFF/UjKSP2.GBS+PG'.tPG]e1SGAqJ?I!^'[FE`%[6"k+UG&qV?DeWin?XI8T
BjtUbARS_?:0(qHI=cQOAnu!rH[9=2A7].O<E<@8Bn1JF?r]us:/t7m=C>WL@prjF@kV;"@p`DB>[V#M
An5Ie@pE5G@q&kT?sd>M>$><IC1La^BP1OG:K:Ou;&]K8"9S>uJcLi3"T\Z)!!<<!!6tS\!!r].,(PT&
ItE<.re^c8M2D%hq2kE4q2Z#8I=R!,MiE^YP*D/oOc]d-SXYt3rfmPLF=R1g!!2$Y9aOF;LP15-Iu&r:
LP1/&H%1?nH[C<tKRe>qL4su"K8"f%H$FOYI>`c.IXllkDJ3Tj?X[J[Chdj,Df0E,ASZ$qBP;-qCM[a!
CM@C0A7o^mAn5C_B4k7K?!UZ;='&m=?!1<9?Xm;G?<p`7:.\/`A8ZC">[LlHAor!$>$l8dB454[C2JKG
D-g.78k;NE8kr8a<`N't<EE7%<)[(+<E*%'>[:`D?XR/@<a&R*;c?Rm;cHIc;H[4);cH[m:.RuR:J4(d
!!!'%!W`=U!.k4I!!<6'!Wh]h"9JT*!Wf+t%00+qJp<99PF7o2SXZ,ETD>&RRJE0XJpM`tQ'?oBL4t50
If=g!Ne;ImrbV[M)qY-#,YhN@85*>s?X6i7:ejZ4:J3u@:f^Od1,`!*1+kp]2D-R2-S./]90G@%4"D<m
)AE_o'H/#2+t4le.3]ZM)]BS3)B0Y;)AsP7'b_?,*uYq2)&s\'$kO$^$k!FR$jd.D#n.=M$4@1H"9AN)
#o"X7(C:EY$POg0$j?qN%0m%?#S%M,-l*'i!<E3"!<E6)rW`B+r<<f:"UPA9!sAf5#RUkF$jd%>rWW?+
r<*Z8!WiK2$3gV:"U"l-!<N<'\c@<^JcNdj%g32/dI$i/q=sXPn*]T3o(i+WqYC$arY,&(qXa"4d)!;t
XK/7rV5CAqW2KWl!i;/IgAjM\Gf&V:qY9p^p@e1Pq"ss`q=sUSp\4CPjlQ"$iSWqek2>4Uh;@;\ki:ag
lJpUWhV-Q4gYh/Mk3D3pkiCRZiVh[CiSrnTi8W\Mg>2&XjE]bEj5oLRfA,3:f@JL%dEK_SbgFqhe^rC#
bf%90bLPM0e],YS`llr``k9%7cc<o?ajJ])jkJ,"]XYJi_o0U@daQXkd*^:idEp7hccX>QcdL4ec-F\[
`5KaFdEp7dcd:%R^W"RIbfS&La25C!_S`s`;[WU,quD<Kg&M?Y!sT)E()e1g+7UBA+8HrV*<.&X*Yob7
(D@>i$ksHr*?c[S-S$Vf+"Sre+o`Y`+:921)a#_m%gN@K&c2qB%1N[R%1WgV$OWd3"<sGSaiFb2aiD<:
`50@2iR&=bc-42C\uVEpS!oe6R[KY7R?j*:P6-ns1YVmE#tU#W]YD"i]=GSd]YVV+^VR[q]"`^/^U^;B
\[\K1YH=[pU7e*PWO/k/XKo17U8alVPa%K&Ssc=NWN<5&Tq7gFS"#q=StDF>St)+2Q_pLKSt2FIW/Qn.
S=Gn2PaRbrN/Wd]R@'G5S!T.iJTup5TVRg,KoCbDR$`VWJ<Z.NKS,2JS?o;kP_Xa:I"$KmJr0\kO,f0Y
rJiLiN/`UGJV8i<Mi!4FMM-G+JrYhLMi*CMN-KStMiELFL4=SiBk_O/G]>>9!!0Y2S,``p":#>H',9jE
ljih#"UkhL$k<aG%jh_o$3p\8!X&]5$P![[&JZ#i%2Tfk%1E[U%hB-\%kAk>$3UM=%/U>1#5nW(!o*e!
!"T)2+F&WeGC+^dK7no4KRrrCl#m\aH$b'rL51VHQC!r.S=Z:>QBM3/!K_a11tr!q#!QpOH['^XH[U6f
H$!tCG^4OVG'\O`H?=@\IWos_IX?<_F`_ePIsQ<`H[BpWDf9H-CN"9:F*2\LFEDJ?F8L"WEsco.Ec5i6
EcH#6C]836@V'1cARo7[BOt^^?t<h^B4u!nAn#%MBl\KMK7%`bH?XgmL4+5iHZsRMDfKoCJphcWA7/YG
?X@)JAc??tAnPaiBP1siDJa*%CMdp,Chda%CLq'jBP1phAS#Ic>[1ZKB4PI]B4YRX?=mnb?mkmQrrW#s
JcOX-"p+o4$kX0hq$Z^"nI,.!":>GA$OZh?)[QcS"9JQ'#n%7V',MH%*#]G'*#o_.()@]'(^_&o'JC^J
$NpV>%/U;:#mgeA#71YA"pO5k^&SR<V1NrRP*_]2Tqe<Pq3:]9q2G-(%[N$0P+7_bCNOcCF*2\O"F592
@pT(=!E^o*!)#(YG&V)2FEVhLE+i]gE--&1B6JcQDcKteGZRaXD-g.=:.nJkFCeW^CMd<M9h%9)2a'W)
78R,g='8?g8k;H@77Tm@91;3?7m0L+5>Fg<5<V>&8LQ5M3A`EA/N#43-712r2)I6Q3&;s*)Bgq0@Veds
3C>eq@q.bW1eg:q0/#7P9RLMM2^]U`(EFJ9+Y#-!0.\aS0.JS*2D?R./28t=0J+q4/0Z5b0.ne+.Olr"
(De/D/ghnk,U"$:&K2c6'`A#`!.k3h!.Y~>

%%EndBinary
grestore
np
grestore
gsave
.6 35.7 mo
332.7 35.7 li
332.7 26.9 li
.6 26.9 li
cp
clp
-1.31 35.71 mo
332.91 35.71 li
332.91 26.89 li
-1.31 26.89 li
cp
false sop
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 405 ]ct
[334.22 0 0 8.82002 -1.31 369.29 ]ct
snap_to_device
<<
/T 1
/W 696 
/H 19 
/M[696 0 0 -19 0 19 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/DCTDecode fl]
/O 3
>>
%%BeginBinary: 1
img
s4IA>!"M;*Ddm8XA,lT0!!<2T!(-_f!WiE)!WiE)!WrN+!sAf2"9S`/#6b;7"pkPA#mgkC#RUqL$jm=N
$4$nG&.B!X%hB3^#n.CY&J#Ka%hB3NgAjSA!s8W.!sAi3":#GE#RV(Q%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]s1eUK#QPM>\-)gE!!3`5!tbP:&HMjL!$;1@!<iK)!<E3%
zz!<N?+"U52;#mq(?_uR1V!!30'!s/T-"U,#3!!!%J!<N?'";(eM+Yc7e'2`0C,&n;PJWZW3,=8ZO'iN
HK,VrnMJdDc"(Dn#.,pjuf.4R/32E*TU3^Z;(7Rp!@8lJ\h<``C+>%;)SAnPdkC3+K>G'A1VH@pm)L51
SAMNX0fQ'Rc(R@9kFUnsrdW2Zf&Za@-K\%&u[_Sa=2`lH0Bb0nbge^i@)g"PEEj5f=akNM0qnac;Dp%J
.Tq>1-0!$;4A!s&E'!<E3%!<E0#z!<N?+"U52;#mq(?_uR1W!!30&"9\f0#6b55!!*.F!!*-'&Hi7\0a
87V;$UNL'-]2_#S]UfTs;E?,;W6e'k242$5OmDi?e"1(`=5=-R^Dn2)[BQ3BBMq77Kd<8P2o\<E<1'=^
#<GAS,RgBkh^2F`qtRH$Y'pKS>/9Ll%"PPE_>uQ^F20U8+N\VPgAlWj8t<[C3QS\[oYq`5Ta:aN;TQe'
uq!f@\d1ioB+]k3(smlLOQ=p%J.Tq>1-F!"K,4!!3`7&Hi(6561Z[TF^5bM?#&t!f?t+TE9uN.%gX!!%
[m6rr@YPY'rBE-ThnM>CYl&MZ#VeV.dtr^X2b'iZIR9oO!aWZ24c?rr?s3>N8$%C]=D3C:3kQE7hD?5L
+':3(s4FqWr7>*qB(9*gLW/+K4KgX]+$4hQ;(JrK2=$-6GPL<*jh*N/Z>RG.>5R8*lQ;q^sAdoBl?S*9
?uA6i/VLmZ5MYp6"V;lKlXdAP_[I?gcNmnBscI2:;fOaYFe1Xs]BX>>)*DgasoHLm^Fgd`Lu#`6^d07[
sDX6*In4'"lT./0rDen"9(#iA<BD53a^hH_6[_/7>lWr-4sj0`M-Q+(kNQO*]B`Kh\ts9e1TLqmSZ/ri
NX/!-X5=SFtd-a`rj6i9D5-gj$3HJ#J19\?5/u!8#3PrrCA;rP&%-,]iktph93:j[Rrt(f*mWU43b3rY
0a&ilG]?nP>!LRVt)toa?FuJ%ich"TBa]NhE][M?#&t!f?t.q.T`:jHKQ]=5m?%e+U\1?aOcN9.Wg35;
gGJrMk)0I]<=i3^e:L_I!QaO3M0[II_]5nCP\O(\<OIr8PHIS<K^tlYqe_O/?:%&=m43E':tlX'6[qf/
L**=P!KPKOR_S9bHn_R.i8fBi`m+.W7=eNQ3**Qa:,eFYs*uY\cSSNQ2aj1_,L3V@J-C3X>C_X)<DjmH
-]FE51n$a8USeFF^U[:RM^6>H\H+3`>pUr@$_pq]o&=!/,BBmXDOWHhu1P%q^eSpd?5%RQSX2;jo=ob)
F[A7cO;?I_pQSRQ&!blUN]?<%n.n$0XT<rk09.fCbo,#:^8Z6kdprJ,O[h2G[1FiQDfti=_4NHj)[#Su
l+O7`RpN"gt#h:!*D-1#'c^p.K`2[9$jfHFc+p\X38GDuJYje,F@6rcE4Sd%tsFR$XMIrr?l!jr!-g'o
0,PLTs9TpdHAGQZ)_+[o&T4g19giEl<FK(]OKo&PqhUcB#D*[i,"?p1RdP-@bq;Z$iMlg#k2dn^j_5dm
3.E(L@i1EKU+J-+Io>-G(:Xh)'0t_Q]*sLRP[eb@A4s,`H;/'drLX*OB#o]OS62e`Yn*g.e/cV5;I9iW
bYJdpTZjplA4f^SsHM`:!SjrX?:763mLKHMe_<oZ_@tib.K.#+,[Drr=s+?$Q$cpufXil)NPMr/0%srH
QAgE`>j970"#u!CZu&:]Wub'Mng!!#/6170"#u!CZu&:]Wub'Mng!!#/6170"#u!C\+<r"f;4JsP\*S]
8A&\U<'oc"SbhZ=El:j!XZSg\>ckGA#V.Vor^:ojjK`^[0(=kh<H:ei0j%pLYBAJ?j[J<K8Jq=7ZX2./
s:SDRRPIaa!gcVNq&1p3%CakPf,;Epp!mB>m%W1Yr'2a05IE7K3A+dIumuq<]R.r+\I&Yi"!MbN:JU-=
/2%!1tcKqusJ-!9.bCHH">BL#mg]B[raK7N],&rao''DP]GP)!_t;!9k?.K`;&(Xfqa)'2AJTQmmI3r;
QcarrD_krr?S+mJ6b^R!UE%EMqe#]I*M92S"VBSYQ2bib?`=gj\]5DuKCeiE1S?iVS(RjpI=(;keob>4
DDi0.dG-]%[/anMM]f[EeS4dO"nn^PtbW7N],&raPS=aK,=@$-p<HgA_/Ig4/$4YQ"S7<[QC?#&'gCH"
=D`0P#+YeoYrF/5rkPrrC7eYB6A1?[.W8h`MZ)CDHjLr3IJW[/U+rrrC)T;bupAYAFW6YGP)@n,);:f:
S,Gn8ioZchu#LUnqtkY(;#$C,`,-5*]nJgJ<t3!$9_+lEgKWD5WEel\jEg)pN,3Y#Re/jS\&p^1*rC..
X=-DPMM'I71gV4rIPV??fsQn8pRS=#U2*Y8rHXUYgs6(Q('O%WCH<G@r2qlX!k5'qW@tEnMM#VgL;iQ0
9RH_A9A(T?,>+r`Sp]:-LSeYHQs0o#<U<O<:Vi$;W(fi@sZ>\+S7\@K#R`khcY.2`/ud?YK/>.=%3l/V
j+&kcU9256n*@1jR?,R<<N1]#j)/qp1Vk?(n=i*.DBqKk?\Ep`FpMiU92WN`t%qrZ^-BYJaK5C8F@ggd
LF9\,FD>%M%W.>]X2hrX\K[pjPq/FE7WV,JX)sO.5_?!526-^U.b=9h[bs,]Rul&NkOQUB[,.Lg?]g;E
Pei@(:Y?Q,)Or2Y\*J/Q.)P,N37(DlZPH]LccF7UM?lRQapRME#9B+I,F1_>.)Qegm/<1AoJ"IqTo/Bt
=b?NTZeKcpo?^d3?eCgE;lb?bH*X:Zl*6Q$uPY^4(E+5Qqi%;*Y:!!)Yub'ECuq"V^r65Qqi%=7bPR!!
QK@pt_SaJ)jnDjgorET"dhSG1)_\q&^uR8,]^h,PC[-$/6G:n@-HX:Ept9_u44Tq"8"B^G!N&rKk_an-
+69X&%JjEh)WNk.1=e"dQ@#(I)d(=C,83U:jlZB&&+WfrmQ;o&oZ[F41Uaq_dQE90//_.VVT&OF>rqmF
%4J\EQLJZ49Ncp2bN6n?5+PFTdkPcV0%#hSrt#<+Ujj5Pb_Uq9C,Wo&eDE9BH+XS_.U/X@7E%*tku.%h
8:IiYBJ0F_P@ZNB2E2B=[;>OaO[>mn_amcf@<Xh^iRAb5=/eZs!&:?)f0!8&*er*GtfV[-bTR&+?Z6rr
A[KF:Sj74R7:Ek5PFIJ,;2%2!Agi?XVG-]F1G3Mc8):rr>RLci4"!J+V=,DZ9]KWP%\N*t./e]Da*I1\
<$*-b0rj'RX]d*Y5T)6Lj0B9nk63oeq;D'=c#.SO$m+70"#u!CZu'r2K\K2oAPlU&H6@mH!P6$'4glEW
%E]*Xlmsf(2'1*t)PTr6O'RfeZ<-/)[=Ymk7UVWa+=aq>Qsp#QC"ZD8lb,>_5+g$N$91pE/".-q3_L8A
QSGGK/t82n%B=!2%U3.pl\f-e^@<*QQeKr;QcnkrcAOm20l3rrC`WrrCB$XT&8NhRstP=#$,M>(%kR+S
u)%q8[O<_bMJ!,*$FnEa3%W9=n(=Feb#ce%_8j'L/pfdZ:_qngXHc0Y$T<[AEab]hc'<p\&W*EW+U8o+
",Pq`-efj862jbW,e&3B\fF^YSj&o.kS"rrDEHV;qH[YNAn0U&CLQPn*CiEgbS*UNrW!//<56Y$Yk_A8
6U+0;/6Ao#IRHn$oH2rLJGKqU50Iku6u$iV%EnkNbX"^5)9SgG,.(fr=64;<0C(r2B>5"8ar=5>",b^@
Zba(1Viu;qL]D[)"W`b"S\#N&2rtaf?mH7PgZ/ag3mHpK#jWfNqk`!6:q>r-SNG;I[6GGHE:2hI]M!]o
O$#g]lclHY[QqG%4n0n*G(q+7-i5=<rIIBQ3mkd.1uJgPGk0jDB_Q!#%QN,Q@a_LX5R)jEHZQhoB%\Gn
H1n<kK^tWh2<H2>#.<a0K_b:]Wub'Mng!!#/6170"#u!CZu&:]Wub'Mng!!#/6170"#u!CZu&:]Wub'M
ng!9&5#!o<&#m"VB:e21H?cnguo_F;DHi]IgDZOufB!rWb=T?5nC8n)Sl!D67?rqBc"dpe(Pd9[R^i97
::lf_&N3=.7k&82mnQ`?hN?YP\YEr6F)F[-*>GMtV*RDVDFZ(V5aD]_!<6d((+[HT2K,$]S(_+(N+Prp
=Ta%VeL.McoTr9c`=Rl[L0T+nN-[o"<;\^E'B#rmnu.EaN,>f&(J>[!/p<S,O"*GjAF;*W$iJC[f>]-.
;2C\,/[W,hcl$1V[N^a/;'N<Z_M?LA+$,`7B6Nnp"Kl=RGO!LuEDjCHJ\".:q_'eIO[W`dZ%QhWVAZ9<
-@(2lg`jr/;ulp7\DM?eAP>1AI0o>"CK,9J(7,(RW7fMEL9J:lI`)cI7dS_^t^=GC+7JGm$h7G2#42G8
POYf5]NYF"cA)CR/,S)D9;#gKVEe%%UP(StGK^UJUHhMtGc+4&*DtOrLIj1]'70SKN[Hqe=jc!+\Q;hJ
>;OD;fn1:eS@#i-F_Vds]a>j31/0[tXE!Ac&OLr96j8_T(2N^>%uK%8L\3IpI`<n8F2+=_oX34'A[=[7
POUp:'Rn;I<\q<q7Amg\6kBP\8L,>3E&c-";RU]nuZ,rrC57ok@=$N@DnL-bn_MRuL).(H9qRF7u#B4I
_>Fkl1XZ?V%i#4uif%/n^$5b)#0=kP4A$)+pB1;q@i#3uou,22u?H'\bscD"0BcTaX,$ja=',DrBWFCo
1'pl47]\NI5N^7Bc%TO&@]jG!Aj!nAVf\V=nu"J1Z92fD\k_ett>=7Y0Z!g&3FTj!.`NMq%AB8h"S&S\
Kp;dBrBHVCd3$Dq;OGD19a.71>KG`BN76OVpab_&9GIjfe"kp=K/f,sajdrBJ6X%^h-t:sf,CUu'i1&=
Mp(,+^IN?`3`rJ9>Xu$V.dTiT2Ym4*)VoQh&bi)!O?;G<Vo0=4pJBrb/]h*a(qk%hQF_QPM2,XrY^'*1
gOn&itp%eU/76bAF:MET6?tA:mXf\FS[kgQbe'rqh"C2+haEG<700.']?YnHP+iXCr8Oph&r-cD>>KPm
#jrGWQULT4RIu%Xu]l<T=#,h[66CA4pFl4&`on"=s1jitC>-7DCM@IT'Q&=N(g>0?kT7T=2/jLNPa-i]
OX^><\_h0S:9d?f"/kk.dk+r4Mu-r-4rd$7GnKJ-m\)U4<S!!2=uN-iful$7GnXa<0/Wg>;#QSZg`iN^
<[F#lV4F-u\os2.J\RN06t(NjU9-Wbihkr!:i\D'S!tX`:0%f=!L8!5_([]X#)2'E8%RdJ$Nhk78JU?c
/1u2Q\"6LLPgO=bCu,=<5(B&WhJ\p9<2<Z&5p"M]57u)P]OU-cH#bM-@C,Y6E]r*tWfk/@+QLn\0-=Ka
aPdq+(nu4h=_WP[E^0I]ZQ/4B-et(B4C)n+bFmM>bit=$JgZN5+Gkrr>0FrqR:(?N1"/m&"<&>]osZb]
0LDir2r38]ppi(LVt;J#Z<AjB#"D8-\jaDAZn.bHr<Wr26B;Hqp%)^Wk<)@,LiL=.e]*H@FGsQZ;6#c'
3EN/Z7<4rQ;YYrj"0,q@<3Wfo+oUl8O.blg*-:#/g?IqIi*@r7RE@e@3YLo`"oPh4Nt2mf*92Vb_2q^S
#8OAbFhMGAZKGcbmAENH*#6Af/R90o=nn(O1^/'-0;6(<$#onmRN-P1St`m%JcK-bpgYb4=UFP^n.Vrd
2>$;Z7SFi8iH(>Pck/r]T"'BCWarjgDC1Jj0l_.]\_O51';:oT.]Qrr2u^.dVI$bjnqeSM0`P5t-EoKi
@k[a8GT."VqS['csQ$E>Fb:b7pd!96XrYi.L;D=<u^S^QOY63f]o6Gi&0ne?<Mre8?OGB"GKmnk/'jZS
CO(HBZU&Q,>iW-\'`HoB<7/rEDL`mg]%r_qH0"i/It5dOjjn0l3jHpt,7"ntU#HBB@.m:JR^So=7*H.,
X4_CZs^1_LGk:[Za4T4Ae\M'-q>5+2e3I=dU7qh07XDJ!1]Hnk]/D<("'8$(01aVN85;GLXkSj6kY"77
g;ZY:`'8k.d0[Y0m_n._sB,*IeDi"h(5+!rWf5<-^[7b9c_RrrAX+q$N:`K.<+.+'P7p$aY<neu,Glb+
aCn-j&KZW/DI#[s%7jTml,f5M6aK]eh!5[-p_h.(rJPhQs,jZ8GkST>Ik0rfufufLIjUIgVC\Mu18gXZ
a&gOj>ZCSGrS'hZ!T%7/m8%8cBF<9Og:?l=sU-pD5rI?#"SXdr:F*rr?;fr$uO3T-63W'9@$*H$-l^rr
B3W4_1We,S6RS9laZ<ZqGXka``Zio,ag/YN_\Y$.46JW.)oR%MuSb0X\F&L)oG=,8.6g4h3HFD\Y]226
1Z]6gJuBrrB@4k0M&Ng.KN=_rGZr/aVCd@.W<?@LN^lD\KDPQ=_N"fA2_`VnRCu'ECuq"V^r65Qqi%;*
Y:!!)Yub'ECuq"V^r65Qqi%;*Y:!!)Yub'ECuq"V^r<-fW=mX"=EZ\@%a!Sh"Lm,Ye[dFU-KtbEh:5)c
:bcraJ**.uCEF[HXTNaY]I((QnN*4("uPC[6@0D.=jk!3OZ>q3&?rL[GD_h($8-4rE!1)7<h,ElbKRD2
QSWUl`.&,a6Zj8X5[`*_ER"*'VEg`@J:T/Q+!WUNMsQnfG1r^YY1=;hucu6D^=NMa+-7fA1lk<L<D*pp
+I-k24.H;aal'at4XL@_RMG!QS"en17*-O6HFhN;"`M#,eL!RJ$lBjd+Nlp@r26[''m^?4t#5Fbu!4O^
cf\<P\LI4E7S1Tg_+0X1npGe+PEmTqbX42S@I?YAF03;4k!Nc_YQOJ&t2NqWN+a]&@E%^Jg9b=s`A!Z1
&>X&Qr+G!!!f85pM=u+3)O^;GVW%rr?\F,+%7am/jSjjo5=6CWtMNOhGYjg=YYPPCqUIHq1%hOjA[2Pl
C`dVROUZ6Lm@p+80!#.D3$snR\e!#h1MnP0\(/.)>_`\F(@I:2<f%AnDrOa10#//c6c;\MM-?GaN#c_#
TN`?;D,^!giT,GVAfHk]^CAQlkh1Iq>38kDjZ2^[1+T"-6-/?i/o1$M\(Koni\:oelX/&,k?KMtB2S^T
0P,pk/SH,n%]l!;72?rrCE7RihR8qAM(q^_>oQ!<3%]pI"r\YH)U(.mlu1gd2:fkH0+iBr)VUfqYX0ei
s=epKY9#IXE6skI#^ii6-?SQG#(@L0Jf/0fpd111j?R53%Ou^D!faeXj]9BcNc4Dl[W]IOOtWiL;u*mb
bqYQ*6!-gL162*-Zj<R-pPZ#Nsh@!&2];GoYH"es2olf/C`jEMcr538'-6N&)!_f>l,'Jj5c>r'@L?[.
]g>`T/q?(>T*lZ6Ocs*#e/"me/&<Jh9=V+^_i"gdi0/K/Lt"W\6`3;p"i:nPNEbNQp8C+eJDm6I7d&R6
.iYd,aimXjika)bO>#?oX8S<QK=!g,Q*53Ymijp+*1:#b\_]#EEIe`f7Z2N^<MBM\T8S9Ca=mP\$nVil
cOlcE29A$[&FRbd.oD/<[=G1".9<YL3r3\!NH=%(&%`Y:$lQI-]qMb0m^$KE8W?3!-R\jl+s9e]^TKqe
ud'L+CrW:4\X+!FPl[~>
%%EndBinary
grestore
np
grestore
gsave
.6 44.4 mo
332.7 44.4 li
332.7 35.6 li
.6 35.6 li
cp
clp
-1.31 44.41 mo
332.91 44.41 li
332.91 35.59 li
-1.31 35.59 li
cp
false sop
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 405 ]ct
[334.22 0 0 8.82002 -1.31 360.59 ]ct
snap_to_device
<<
/T 1
/W 696 
/H 19 
/M[696 0 0 -19 0 19 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/DCTDecode fl]
/O 3
>>
%%BeginBinary: 1
img
s4IA>!"M;*Ddm8XA,lT0!!<2T!(-_f!WiE)!WiE)!WrN+!sAf2"9S`/#6b;7"pkPA#mgkC#RUqL$jm=N
$4$nG&.B!X%hB3^#n.CY&J#Ka%hB3NgAjSA!s8W.!sAi3":#GE#RV(Q%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]s1eUK#QPM>\-)gE!!3`5!tbP:&HMjL!$;1@!<iK)!<E3%
zz!<N?+"U52;#mq(?_uR1V!!30'!s/T-"U,#3!!!%J!<N?'";(eM+Yc7e'2`0C,&n;PJWZW3,=8ZO'iN
HK,VrnMJdDc"(Dn#.,pjuf.4R/32E*TU3^Z;(7Rp!@8lJ\h<``C+>%;)SAnPdkC3+K>G'A1VH@pm)L51
SAMNX0fQ'Rc(R@9kFUnsrdW2Zf&Za@-K\%&u[_Sa=2`lH0Bb0nbge^i@)g"PEEj5f=akNM0qnac;Dp%J
.Tq>1-0!$;4A!s&E'!<E3%!<E0#z!<N?+"U52;#mq(?_uR1W!!30&"9\f0#6b55!!*.F!!*-'&Hi7\0a
87V;$UNL'-]2_#S]UfTs;E?,;W6e'k242$5OmDi?e"1(`=5=-R^Dn2)[BQ3BBMq77Kd<8P2o\<E<1'=^
#<GAS,RgBkh^2F`qtRH$Y'pKS>/9Ll%"PPE_>uQ^F20U8+N\VPgAlWj8t<[C3QS\[oYq`5Ta:aN;TQe'
uq!f@\d1ioB+]k3(smlLOQ=p%J.Tq>1-F!"K,4!!3`7&Hi(6561Z[TF^5bM?#/knK3\]D[SFklLIW`C>
\.K;*:9$oG'tWfM\/uiEYjL/Un'&hu<]7%%lKYaN=.\$Ch#1Q\Bq&IK':tZ@@Q\8I)Ug8,Oql$NC*Pqu
6WsAH)W:3@#Zn"Xj4"0+39YrrE$!8cBEE0_UV9M>f#M>!B3+TD/F7pef,Om:$h+rrDS]:@W7^5A4=5a1
`A;2(1RO@qTQ`e>7jrj,u?`[k)@M^P]P+Ph`BNT:5=k8(!nFnZRN15A,H_GV`43Fn)ljZu2usQ798cDU
C_F[")s0BX.Y!j69l=nS@+XNA[c[X%s3"@o7XeHVh%C/"q5o^9+uUbEoQ#g!<tW:?`M-%X>V%rXPO?`>
[U8*.B0^2&NJID2kp*W2[mK[7^,4(&?[2q^_ZmEb1#X00%&q4gPgJ6i58l`kP]N`#2921q2@FC&\0rZc
J$B45G?UlmdJ?5I9GN!,I>\j!alJbYsQ3l3H]@;<;fme2BOt+70(ASG4$"bp+L>>N?kprT-d%4N_G'a_
e-Pp!=f3(<c8$8,IK/cZUY_A,*AEmm$[%Ne)F=c1E&Q5HP7h0`KE*(_>O4k>pkY>B-;5I[magW_]$UQa
N@`!6@CY(JF_DO5$l3Fga\lr[Ys6Xo>Q5JU0-P!0AYQq^m2F%4f?ck>Ut_3tRGtjW:%CS'SCn-pgkF<r
W.8YJ.pQrk@j^1-aNkp2>oT[h4!_&`#6[J;kWFrpS>77;;O<p2]s&UhSFAAadO-=toEYj2*aB7Xjh8H=
["t4@,HF0m2M+1ApV30Z)b<YoN@=oJupO!WLSUZ42SHV"'M&4t=BkY!E)?_61.N5c(-$q7$L`q"%2/4p
:dZd-Y$:!*\k-VeKf`*c02W!;^<?Q^CBc<8fcc<dQfB]!a7(om/@*^.Y=!fmY<S>(5-(!3q7%Y/B6WNm
^JTBeQ4:`r!KIgiHXWrr<3d4)-\$hW[3*eug0XAK;mu2n8"\Ti2%2q`9bpp_W`Gf\Eo[8c&h7<V--V:K
7;!5@amgTTA(jLG0+t1*$khe]4p+it]n`n-AZR-iFk?c\PMD9sGhsq&9*7/itGTY;rfaRnpijAVPEkjk
0,W&q8?&Z=f"s:&b3QFGlbAm[KakkF_[)="M'$IaGYp\VF5\H`o\.R/Q$*^%E9*\FWm,DBbgS7\[<&5M
!kM+","YV!?Bh]CK<u)<&oq0D7:92qgAeTLX(bq0BL!DH%JKj!GhT?>kPt!45p9'/.9'!"uADj:`B4;p
&)Ni[ajrjB+FACVTQ):q$/Xq]6^=gYu!:-(]UE9l^*ZS#C]_puK7:DZb6@M#3uPYfG1r_;]E2Q+>=m1J
)!>\al]aFa)^`^LOa\]=#*;Q\@WFF8iT[D]mBTjfDZ^LAq5ihH?S>_]Bq$#:pc/Cjecg[i(("(oH#:f:
hL]LE>BM3,.\#r^_Z,priOK>>#*s`SM?=Pn%;hXIh$9ij5i&)LP,i\U1r,#3rB3Gl?gY(uhj;e>#?nV,
CL2QNr^`YVd1;UhqKfZ%%XJ*ht[]=o1*CE3!L=Do7^WK+Y<sJbiB%pikcC65>,Kn:mo*_YrPUg/"($JR
#R^e"]f>X"-^$c#J#P2Zle+XV@MBiqLo4g\_P]p\(ZdSUSCh,[VC90P$B3=1g7&qVZ?rH<8!K'\KLqpV
%WsA%<&7<juI@h"k)QB:6oDeEOXuhf$<A)'1^OLNVh"3bs4k/+@C?^n[S%d6FrlZ?pl20_fY9G57Ec.W
.<?k+)GO#s<;&JEOc&\u&6R2Jn3I.BMA\U[bP$Sn-HX>bl$+MZ'")\nIi5`SkrA:CM/N_>5'Npeg(K@*
@L\?Z+YKa.%2DktrGWP)YuuIG'7MXsF#IZmY4uBB/#*KlN/$r]d+@lUX2Pq#3e@(PFYr^=Hip!(s)WdH
.a2T?W;IY(^#nBV3u'.Is)Jr%Al`\$6jJ5Jgc`8GSUh3li[.04t.Yp?c/CgGGb=?[08D[P2gLNZYT=Kt
+M<IPCP'4(r\cf<I"*cFD+r57;jS^LDFp<\=:-ZSlRLF&/iDLn,bWIuV2C4J+``@.<--qnLi=BDL+prr
<PA?ELMO%Vg!upKlPEr2Zr4'][_.R4=OO>'sBG-%?GrBCTcT$O<HlG3XQU<SP;1,DJA0kW4e%`nAE)Vu
<]n06O=ArrBkoKcY;1+,N2bjou%bVr;?m4\i%rr\[kD#'b`Loib)UrrBY5TDb(Y=eoQBp%XPL=]=+\2i
[eN=T8B(pmL)3:U[<Br\Z+n08bP]^CO\DU^d;;IqqoInjbgA[Ui8)0B!q\:Pg,.5>>25r+\5S'B0di9Y
)hH39WJjrr<BAD$\//Bqa"PmbG2\NP6(^@cb<MpinL[rN0m#XZgY1l]ES+VHk\JZqS6_ZA)uu4,TUOg.
KcBf8%;Z%B_qCi:qr`fn]N[XhVl?GUle(3*e`4f@=>?:]#<7e]fROAP6'[mr^:;0[5NJLn5W?J(RfZrr
@qUJ)OXI@gDlhkT>%V23[$dZi7]A#*S70$f?X8>[.,#nEtem/I2:U'jVW.rY0-s..J@BTdi3q=*JZ=8U
WJ/N?,1m#584i%-R,T&]>6?5(CICr^D6@h"+<th\EjHHo1>rM#9gc]qT:$Fqt;Qd`Tm8L)/=DiI%#58_
U_s^aB-OCT#TE#^FNnf5C42*@g&m[%/>L\O=Y\L2DLokCq23b,`H;e9S7rIG9V;gZW/4^U0'<4U9s6L[
bIDf$Z(.?V-RKdn"bBh9.V\#dsjLZkacpn]c$%/FZ-&iQi0QRMDC6p8sU>gt&`FQEWEhGU%7'70I-*+C
dPj?U7=,8u+JLB;V98W[HH5^XrBDd/6$$S)M+"GUpZ1/Cl]G013;#D#W*GM/fO_/D>13-"A'+K"(i3?k
+-E_#D.$I$L2u3oeB=[s+-ar@qM=<>M1@/OZQpcA!D]GS8n?rl+m;KVqE=:YG[ADLU2SjSjG%a5Kf*'D
(ITBB^64!*Z[oB89YZrdX'Hk6KK+3`4o:!!E6$bKl1G4FccNC]62<rXg4bliJa[oE!Ld,j4g$l/js</p
ag0R[@'=D9EW7qYpQ6:B2>`ls2]mhB2^q7+XZWf%^e]QolnYQM\71g%npXrftq'S3Lr1Q'Oq>_N,'%(:
X;D?h$'?r,ld^r[Ocd%Io1%>nZtR>^`.@hc_7q@@tMU]CkM'b>[':^TdJG8N,H@1`-JO4H(nnCX`:ZXm
IdW4tYAsZI@m]mhYFhPm,(B_,tl?]fi@SF5/:(C0U?0OiHTWPb#3XqRPWBlCJ.R1T5*#p5e7)$X<+[dg
*Y8D)Ft-4!)uc@?5a-hhQY<rLgk<6`;(/hY;joLH\_afqA.bH8\`[q.t.l(tmcBTAEgam'VeRc0lJDA+
i+]Q[ParIPC:&L\36FqU=gCc8E%^B-5rnb)lq4#/(6$p:1($YH5IaF5j<MfL`^B+(\aX!:Jo:d]rfP=0
N9`YNu2E0C'IcDa2>7=MJLPfb(WQ[7PkC6Y5BTJ(\l;Tuug'!1po4QZbNu=ipP>rmWi>mf"p1(RBB8+^
>Q;rrAX4rrCUI"L`+9rr=d#HsWE=jB6DOT<[e]f!`"[V(D*0N#j47LL%[62m5)q-gae.:u""`,k8@"Sk
o1HjJW"X)m<'7#;97ppV6;IlWCdsJ!!%2!e/9`F6+>m,tI\K`3X+JoBT!J!,MT7g8u<d*dE5@pO&\7!6
4:gebluOr-uq+(QJE<p^gX.c<mmd^E?/U=8mOW'I`oBqNQH]hmJ\_)R#1oPdncY5EcTQ(Z4t0+4qG]rh
]U+M]7WT!2#mFk^R0Ig%aF]:A4C%>.SR2h)n..gWSg*k@BIZVLI6K[7u[X%Gmf<rD-8BNf.gt'iX8`Ki
P+E%qO*hMmrZhraL--B)^9M.-nXR5J^W$8hHdn7ANO$7Vf&QE]^-(#L#(_N%*f\V#@(He78#Ypm4inJF
2s67tQ*U?(]QXn+CT'rRCiI5P#u*`a8TC!0MCf!e/5bZX!9+en'J9=JC;S5,E?eA(Sn?m6?KYI;APgrM
9,NjM06XCT=bU;2q.dGcebNmJFEEWGpDtC&WVE<3[:^41Y>\>+`->m$,paDeWp!f2=D@h6#Hm/=fam-8
9n6KKj3ig(bim5PRtGTcAI]`uk*<DuQotrrB7tF!#1TrdW"SIqBeUH=i\MQ_t(<\=_O-(gm2i\pXhWg&
7j+93=$q0?77Q[tnKAA[I%pUXS@]eB<TN03A#M!1@U=Ne4WNU@^6aJ(\?*D2E.JRng>tJe,Tbpl7\(rr
BV<Yn^0sp?qm]j^hT/,$r<MU+:Rihu<\<ldK)lOagX9!9S(qV2T0gec#e&+7,'XY$5TmD*0m2_G@`b>n
?"G]sYjp]uTNpqcM/iOuL=+f]2rFNZ1e"r^3Qm?Qr/C!8IMR0`KJ>5P][%J!"cpp,Vnd,W:`;Kq<X`q/
%tBm_D$f,rknZ^U7:d$@fq3e4.d[BETEirrC(i5P8A.rji%/bg#2<TC_aT"]tY_rZ/s'niqlSfBEP6lK
6^`I-uJ&RQoPjp8&BY5Obn\rdU&8LjsXK!05J+X(7O0rrD\po-=-")f,=@p_\($aW:RZ2u?-j<p4t&4N
S^,g?*DScTG&XmBc[lBt(D%hu#ahg>^f.9,e.,rl\#Tc:'%(^&J)Orar2c`\i6[q1"Ll&(sb;O,<L54`
<U4RN4UjJB_db]'):=&6bJTmEtf3IB)^^DhpH=1!0/t`"E?jn"cj&(s&e^rrBP.!1@3J35tmt07P3Ech
9EpGm1pQCNH6Y];4S)e#fE]EW50)80<O:rrBNHm8G92Jj1:4a"1r0joQX]rrD)d/f2UXHN+!0J*&EO$t
ibYQh^f_ls\fT]$t'P9U\pnbVk<[+DZ*!!,1PaF<@uYm9LE)`dT&e8FMPA,W;RDa8N?Apg54^J+imBk!
/5ABDh`+^W<m*q\T#5bAB<(-7`bQq67i?LGp0`D'dIWoH1Ptm9L-t8+H9-Ld-J^X`=@@U?dg.c:6Cb!/
1@Pb[9(+n+lkV(G>^f@ZQ;M6f_HbD&p^t!1)#JJ\h6ldj=t*5AN`,PN!%g-Y3imrrDT#(C]A?X8`1Arr
C7YAW?]iT<I`;fRCeH$eZ.CNsoAg.fTLNPr5rMIY3&SQhJMqZ`_+QRe*B<VrbR8(Xb;#EZ:qGiAUDaMX
`G!3J?P.3BM?1rrAHB`7M$^QfKHRr"IPp)MY)<1k%9QhU5OOBIq7s%@XKX"h4F,]5HA1++-BEVRNa(m<
mSm`8O%d,^h31\6C>t@8coCJ*'`j96SXa[*OMV*Va\c/\cr^BQmZ"Ec/&nIc!FrSZE#k/HFSP_N0$A);
"i;i-D^XCU<U7<ROrEnL`f_^c'LHT/^uY&##u!ZFJ>j$gUHjZJsG*MGa,Y?5o_^eZ?#XFa]jVPe#eUeE
]4WDZaac"lG)jSskTm26d)\;=d<a62SNGf@.GUd/7M5#CK<]C:>eRJT2C5.(]Ut3]h/!cWiObj'RDtZV
2XNPucUQht_-AqAM21?W;#PVfV7?)6SUeIaB/?]KN4Mfg5/D>$Th9D"B8+&5LZ)"7tVl&p^baJ%f\7_`
f%0?2&l^;/L-U[[1KB\n$L+Wb+uAR-1^lr+inVRc*:p7]P2AID$(=d)C>9P5L:]Mjb]Di"(`q"IEAO::
Bqkig]LUV39t1GetT4&YTF08luLnor[`+e&O.e(WW*ed'#)9:V5*:>t36Z&_:'3`+-@KG)XE[51Ho4gB
Uq?VheNQDZ.6WE7?U=:<S,SPPq/%';P=Y?2-58:Ph7UdI$jEFfn.;NNFP(,Yo(?GO>8UaH8lS7%)-460
h5>5H";Uf%7mP(P_@TL>,VTV2%p.$YZF/D;/O*E_&H8pP5S\RV,_0[3IN3Dt/=>eUaWTVd#YgMa+U6Ks
X&F5Jo.2^D-$N=2`[9c*UY82="HA/H\,0iOk]L>cMBjJiMq^q3gCKr4dA?;dZq@B\n?MOn,$%2fmuN(M
Xb*GhZ0o=T8@oT(5J!k%Y/J/GSXQr9Fc5'JStSB"XS-d(UG(\af-DPR^F9rr>+P.m6&9Lf.aW:kAE/qU
af<b^,jbak_EDYCrfdF7oFHrZ#]<'-"T(kPkPK^KUO/p+29`]6mE(^Yrg4l1!p+g;eDO(8W173A0?U.,
"V#B5omp[IH6!Y#m2,m.R3sUq-1_"TJIRYireTK$3+R^Yt)&?1#f"3`YkHS<(*,k")feN1Hgbndc-?O)
"XK[+9'dGbMh!D^)csP!/&LCf3ZfrS%&B6^7EQ<`M%B#fnJfYT\S6#ISNc&c?uanF&]1`0Zp?[p(-KdL
0a;J'D6k.sj-pB+6Iue#[-1YANW7OsoCZ[YL9Z,592BKm`n#Vgd3C5,KK=*sKimk<tb3MmWAN[f6=7f1
m5V9'GC5a-"->GW/XlougNR0*n(<k&$0!cc`p?W9e<cS`q+9BT=L(5PaJD>j6PSSTL;OOi_#RQhLS;rj
C3FA"I+4os5qJ'ZLh`!CZu'j*qeOo;1sPro'7E!9c;A3gnN"YZIDdD&lcMJu8DVV/WY=ca0&m<e41tSj
,r6#V%L47nVbJPq=5MS5E<9kW8$o.j%ToNFNZ#MHU@Ek6gfTIe(ZR:GUpCTSWUJ*5B+gHq#HJ11e[bUi
.adN>\8Y<>d-_ko,8aU7Z,.RMk/b#pT?-;2<*<WVnP?ab5eu'=;eT,`BK>(aJONHD[ZUCEu)[nAkP/?"
Kes1r$)N\IAP1K"HFQagmJVO8"c.9C"G7!3;G-AgM>.E$RUjO].n.]krRb8rZCu<sZr'S34[$1\T^<Mt
V2]CM2alim'E2<qF:C>#f9'^FT&CFSl[!]HL7TEC-L#q.8IZ=g+K'95CYDQS<ojNb)Y74Ep,39\6%gc4
\6?n/pV+_*%_tA(pq_kS3&`N:@JNMLBgm2]kAP)i3fW9<7J!r/E>BXiffZpN&&Qjir.A_X_N$cKh*oWt
Sg)3c]#Z\a[n@5@Z^"IV)#tB)H3<Q2W[WT+WuA&SYScn+F@(4[og59<4?ll/+`%aJ-_Ao$q4.N2l-oL*
=DGhE!m5:X8.q#7C"p8V"oo:9GAXg:PJuFOfrjG$9(&VT#Cg=PR%FD`<dB*0==)VVmTb8K#FE39n1?/*
V0N3Uq:@AJX/FF]XY'H/2S,ao-"L26'D6lh(2W,N>K:R717NZuCqir)3Op0@8l'mb+9GN@s$4+7drg>b
AgB+/O<3J@mPpNt#gTf)@/hI(g_pGs'/c/n'bn.6kH8<ur\eX^+PWrk<$bAm(-5)ifnO)ROj,qP((>,_
ZYG,X<a\+_/%YnkUY(YKG1Jh@'+0U3O;j4sTQfNRV#N-Ljj-iJXTf1!QQ8Pep5q]mD`+j!RGOLW(X`p<
kSMpWCPKB*m]<<]:0j4u+VWMO(C4YN`N;['[Q!81bsV<^CY6B","_lD-;UCtOZ<?,u9q?FA_U[EjPV!'
W:89>f>i7p3@l:!SHi7he\8c*BL_fc10!dYjmLRbMu>WUj8oY^,qfKuM_cEo(!6Mri]74m%Lj>1'K1]<
=EQb(]7c1@?lqaZrAdD&=/R,ZX;d^(pEon1Wei_b6%(BGQn?*:Xf74?mg4N?_2]gr?/14T>C0q>%1>Zt
j-E;Nu"G;,5rr^%uhF#8:Tf^*(P&<+p&.DDG;.=X@XRe*h`plBdetQ'KfeHT\c/Eq_%9@T\.N+>TT"ff
QX4H3/M1&*$"BT+F1>bOMpVhA-pA#l&UhD/XgA-M'*CO8IKsqm-$Feg_DRrm%""_0`BJk57'kf7kg6Ed
WnE8VqVm<D)$C\+IAGn*AVTQYq_"(7=rPZnq"22S8crD=GIlOibgoLcO_jPp[^EqK(WoC=gBB/sWR'Z[
%iqYt$oSHD=OFHo.f\Rm.8)E,,c9S0b_fOAqKQ6N_oNC?REgPM&npI]A(%cq>ai'`F;'rrA/3(b$_3o/
bI2Of(<'"_,Sdqp)S9,$^ho.C!$mJ)ur6>#Igl\\]?g\aL;Jp>=N6LbXD&1L":XgH%$/V`<sn\3G`%A1
.,V`JX'&WBhSc4qsusU_W5LVo/i:Wq.A_2L+k*9taA"2#)t>h,A?W77pC8Fpd:mJ"kV&pjVe^>=`:Z6.
!P#VZN\D*LUFe<Gq"]=#KKf__sP]S?Z88jhk;4EI&P`k=Q>06!h(p;(2GE<%H1HDKEjn)KfB&;8/B4-i
C9-PH-((S5<0\UVS4)>]E/sbrUiJaF]6?CImLVj0X]TI^)`6?H]QSS+qn4[S:[+rRX5GqS2e/;T)P>Pe
EX=JR)_fkn27Hj,-(WqB^*^AU"(t=A&#:^PGk;>?XH;QYrG-qGtcQ=oSImm=dIM_>&^^F)>jpYh(hAWc
N4""W!9'_#FC)rr@RJp9f8H5bf)0I@S=UIf3sC30u[*TCg"/U&oT>!-]/inInDLn9!cr<fbqKG8;C!or
A#leUuPh_,ATl"i<pp7D=hb='^;!\l\)0aRn]1b7oD4.9c[n\+O6K=Bf1-9,M28/4\%7O07(5Xo:V"Fp
_mUAXn8@m2,`tX8;,LA^*qtOJ7.I_FORlZqnI9R3`q\?,k\Q_+jpMdkg,V@;GQ,P+T5%GPmBm/$MilSM
K1(!9:pLqt-,"Hq/\-?H#*Z:B&5]J*7sjrVK4MqUQn+jCR[Z@%p?t6BV9JH)0/Dhk[%5G`Me(OF%]<"[
W.g#gS4dH!f5_SmVGBV/,HEgj`D'r1R+(_EJpl0DnB5q*42AUjr;:*n"?3lLb)VPUaHG,!Ht;5Bigckq
E!]8,iS-eaptpVq%br-rn%W7D(Q$Q2^gs4[8rH!Fu-0ib7MAEW'(-nqB7l%![4cq1S#4!;Hnd*n"?<^9
:>:<'Tl2G^`H]RT?'X^\W(F4f#]FYbh8k;h)Y5iU?H3fQr&H!iQ%u'1]ErE;I74jU-qF&W[J&!72BTrr
Bi&rrD%lp64nd=/Yti6hjTtht#5`e,KF;(-hdFYkF:K+'5B<TgA1GL87C^U$;RWp^82D!#%l0QZ7F[Qh
#i3rr@^:__'s\ln(I%!!-U0!9.d<<i5UJqN`0eA18V:^)^YDal2VKrr<(0rrD%nJ$`t<g&D%ZE*@oYaB
.uNqeGmac4AVr`R%a9dd:sZ&KSBhB[Q=*\Vq'4?aOcJ'.@ED<S*MNf?!_,dk@"/'dX.M^\)[9O+SJRf6
g`j^IHg3>qR^%q^QBt4%"8oCF'+n1F.uCV)T_?F4RiSLqg8bhnse:[p8^;9ts--M?tC;a_`A20/qu*!P
!Wk7(CWV&X>CSEH]f8rrDGa2%2'*<@WnpHQVUVnM`i*\&=7Mdo#U(ZSG\:[JQLM2SW7P3<UM$<H[l^"o
u!jB,uf.3b4]Nl'HR:[rY&P+Wb/<;Q/b@(/_pGC\)l"_g>rB0?j<p/S`#Aa8D"NhhYIf_`\CH=q8+&c\
FQ1VrHHEASjY9Rnp>]mb;I$,*C3=3qfNEo^O6-?!5'g@^W]b-Aj7pXFiV>:^0Fpc$*VGiDb*u^BSD)X&
[9j?_QYLT,0[,Gb\Bg[=8a8/knuAd!pJ@?YUKrN:UcSk<J2$kP%Ih*i#Q6e'l7HIHAGESa0KMEh67%9]
\CU,<K!.aS%KFB]382g[flBmJU]bSQ])fDilE'IOtC@n]%8tNu<<t9n"Z,Dm`a'C0GbEj%aUqo-<iGNe
=7&oW8K/Ih?C]o*mcXHY7Klg.Q^K(02EY*PJMtX'5r_0=>`impS]u<g1;o1Jbu>&j?hR5_Db7n__4J2=
3<QB"PL(>LP.$(=F>f9M!r?cEH2n>H-V1921+nOtW(Xcpgm(Q2MkjAhJ<f2g;"IgZdpNIuTf#W@K@j+-
PM'n+><4,\hY.KAiA14YG^AiY@MM&k1F$2<fSrquu&MCZ7"#oWK%$7fNJ+pN,?Rhnkk#mq#hB1cZM]l4
;=U4tFmU6NK,A8%,uKpj2@NU7L[od=)9)L-/c%*t@JGkDK0Y[T[U*1j"H0\aa3-=k^d(Yf[B5&[VBY\B
TG5ipVPM"YMoIF(=.C)0h4Zd+[.->YMmFm+0rSd@I<PDZD)AF4E?pYJm8pW@SF8?e*K)ThZTaj*(%o!.
]K)nDj5ZrM;*4_qNtJn?^!H&Su@RD/C'CiI1T0haWY5Oj)0@,hlQPj)Bq]<X4XS?gR1LhHu('([SdPDl
uG:V8]OAgg=8/QP#qr+T^>`g_<g1H.rPTosqb<o<f7ZrrCuN*tk9WrLLSQj'>m)>4.+(6/m$ke$OT:`t
T$tGqt\Nj$mn5R*^@B%Tn0E\\AZ&'kQmh_&>OjFITfnT[TSXDXIQ1P`r`AgKul%b^Bp]*m%P,J:8s;(&
*X!8[!B:;iV.V%9i1(alBcqOe^":Ld`SNTUl?`'t:C1>%`Z`agA0s:5\>jJ%lu2KW4R68u7f@M&_[G,"
iTT8r"n[E)c[d?<BF)c\=/IUp[@_enJi;PIatgV:OP_QZqq#?5Y&ocg5,oX**D2DZ33R^XXrSV0+6$k!
kG_:/2,[T5+)'/j"=U]6LbPrrD>`f/@5(Fa=,L98*<FIrg(Hdmmo>@9[l\,m>"&'Mng!!#=RE'Rp%4op
bb/AolPZ"aRscd56Y[SSTFJi;WdX.T%TDbs@^o5Qs&,!<m#jrR4%@/)cQC^KB"X]f/MU$e\rk9Z?]I^%
.2\]ZeX1_W^X_\>e%O>9?rG`uY]Zc],Xll+0rR["u+13#J#K0jlg"T[1bNC6S@:^V%2Jet_r.LR2kub$
="gQ$QIJ#2F>Ya/'Z\NXti=dIbZsi\fPXP@YK2YE0^GLgXkBoD/gb^Y/e.HL7&ZX=S423T@DGNtEi#\T
<([NEE"%S=5s\:8=!)pTN7KiQ$O4?f2HPR_O],4`>hL=@<(I4O!VVjj+bd=52U<D_>pT#N>"5jY(fHW+
cMTDL:!=LXqnV]"]1J/+F@](4,thBl+\[G])W'1^?*A3<4M.laf=*iYa[rqki](Da3u@rr?=unG`Is5(
Au[?T\8BrrDV-?6T=KYKK0/)CmpGqiu*hri#d6_;G&<^[9^(kq(615NF8%rr?>+q:DPDbhqu0h[.'a$O
?:"&)se^a8Z-28'cF:rr=?G0Do2SC(j\K!0FXerr?C=J*9A8iP1HCWl+i:&K_ZViePb(VH7Ok$7"hOQ:
(m@r`P\2psGQ0+puZMXO6H4IsKgMo%>*Trr=[u<8)bkWsMq2j3O:.mf*8'YL\tbP(VkSd,N'sWCC-SG$
cAmL'VEHXO/8HIET-5%I-+A3LgmBG;40(..b>G'jfbFeSS@?D5%g:Dr2*k(&@8Y)V+if)"_SC!$D(('s
4@P'N$D9`/+i!b)2hmoG'?HM"7l*ih3>fhQ^]C$IH8X!D!'qTE;A_O7B-tStSdT<k9N^*C#73F1sC/!0
A7urr?:uDh[tHX9ZZY`I'QC!0;2-Sp.a1k8U(t>EA5SJPTm&1AF25POC0Q[>rI1^(qI/pp^5gGCN6B$h
56_IdAR(_&r470B6?+T'5Lc2[]!ah_jHDf^aL,;c9t*'d@anN<N*_i"bCG,l[k+[Y+S[?U+E6;DOj-.u
)VmmXecT\<h^>\")'2?P-5iDKaEk$F/N[7eZ[3oZMuUrVGNsE>9KgcBTaN$IAL,W8?4lo0'5!`r?%q?F
B'.855dJ;-Mi^n#l=J&,GtK).rINmg&s/0h)OZh6j2a!+l>+2<c^m!$>_:?#h8rNNRn,n+<]LKA7uMO6
6>prG-;'>+h\k!1n9T5stUiU%JYs$BOt]od?\8r)@eKTiE?;!*Eqh$IJ/T?o/T?nbt?N.K9D>d^NdAW;
cjTT2Kuh8H/[0Bg/@VQrJRQ:SBoQU/1HFdQeO1=^b$RPn.n;<(Hmlht>9G+K6Uc!8;PI_Oje(;h'P"Tc
F3*:]XCr9$)T[rr@&;@g`.`rLbu!(KgHTqb6=EY*WpLX_Ec(/?eJN=XLHZnNdaXIUpMFI&'iEP;][C[r
]F1<TdBY*r#Olplf(4IP#dGdn820/SqSt%kckm)43j3Nia8%Oo<l?N)YN7&4eobbeLN]S\;MMT7d"PYt
6eYONbs%e578$DC5F-(%"k8`i%#O5&-/J)=O3%SaH'a'RX0FqW8U(ZA#,j8XeGFqb2E1&aFW8YE6,'@2
.?>I)De+eNOZ1+F_O^H%m2a=eg8I,Q@b^\\@omhR6_F8KJ_0TrolWSTK$fS9Sqob&%Ymo5,Y"IuZ3sd?
8L5;:O-WeY%X/qj:5?rWN@sgtUTG4ah#FeU<=uq_lXr&g-oBrrAX"]S9!4F"9($4*e,Q/1B]Mqh&8&),
3*h<I-:$Z1'cu.'-(Hq0he5>F>=td6i2%'OF17,W??*5Lke:7=?Q\)=*`GQgq+L]s.Ab=&E]+9cTd9Ko
BYW<Q^gRV0H6b8h0pl54$Gp'ajJoh&ZaiFuCEQDIb[b9ZL#>"A*Yb.t"X4EgFP^D"OpAe&?XR`&g2Bf0
2&1I][[gpb)C0-+VKAG<k#4?S\jE*:qar+2k<e5)7hMAEmVG2fJ7H+,:Du-cZ/d$0Ta>Y:QTD`7fD1D!
n-RZ6V[P'jt$lGJah$\DZsc4+>5gg]#XX'hAk$Ns3D+a7=s+=lA;2)7a/rbpr_n]uSas5?L/.TN?>`a6
\65*CEl=QM1;B(Ybrph78h>#28)[1Lu#OpDX&3jgURp+%l@mmX5-29j.%:a/H/NJ5`K]!hS:#d%^$%h&
Hb/l4qt8rrDTJ&(SFcH5&7tq?:T)L::Y">$r*Ff`~>
%%EndBinary
grestore
np
grestore
gsave
.6 53.1 mo
332.7 53.1 li
332.7 44.3 li
.6 44.3 li
cp
clp
-1.31 53.11 mo
332.91 53.11 li
332.91 44.29 li
-1.31 44.29 li
cp
false sop
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 405 ]ct
[334.22 0 0 8.82002 -1.31 351.89 ]ct
snap_to_device
<<
/T 1
/W 696 
/H 19 
/M[696 0 0 -19 0 19 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/DCTDecode fl]
/O 3
>>
%%BeginBinary: 1
img
s4IA>!"M;*Ddm8XA,lT0!!<2T!(-_f!WiE)!WiE)!WrN+!sAf2"9S`/#6b;7"pkPA#mgkC#RUqL$jm=N
$4$nG&.B!X%hB3^#n.CY&J#Ka%hB3NgAjSA!s8W.!sAi3":#GE#RV(Q%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]s1eUK#QPM>\-)gE!!3`5!tbP:&HMjL!$;1@!<iK)!<E3%
zz!<N?+"U52;#mq(?_uR1V!!30'!s/T-"U,#3!!!%J!<N?'";(eM+Yc7e'2`0C,&n;PJWZW3,=8ZO'iN
HK,VrnMJdDc"(Dn#.,pjuf.4R/32E*TU3^Z;(7Rp!@8lJ\h<``C+>%;)SAnPdkC3+K>G'A1VH@pm)L51
SAMNX0fQ'Rc(R@9kFUnsrdW2Zf&Za@-K\%&u[_Sa=2`lH0Bb0nbge^i@)g"PEEj5f=akNM0qnac;Dp%J
.Tq>1-0!$;4A!s&E'!<E3%!<E0#z!<N?+"U52;#mq(?_uR1W!!30&"9\f0#6b55!!*.F!!*-'&Hi7\0a
87V;$UNL'-]2_#S]UfTs;E?,;W6e'k242$5OmDi?e"1(`=5=-R^Dn2)[BQ3BBMq77Kd<8P2o\<E<1'=^
#<GAS,RgBkh^2F`qtRH$Y'pKS>/9Ll%"PPE_>uQ^F20U8+N\VPgAlWj8t<[C3QS\[oYq`5Ta:aN;TQe'
uq!f@\d1ioB+]k3(smlLOQ=p%J.Tq>1-F!"K,4!!3`7&Hi(6561Z[TF^5bM?#0JIOP3rY422:Dre=-%-
mHlo>p=qH,&Z[R2-.YrT-R`'TpL:!E\SC0VX()NjUbPa1_KQ=%O%A^,l&^i\f/eFK76Qaj&U9Njk=r2j
fKfIT"=<\R.Rn/m;n:?&*HlLT,YRnEo)AW+m,LXf+^2oN=B*@5jEZB&&8:!XKZ,O0>[*rr<JA,3iJYnM
[R^H[TfggrVGFUiA.HZSQK_U'gC1\bet+F48.f,u#`_rr??MO5ceL8\?:BBKFbtDki>3OI7JZ-UPF/64
-9Y-NrI\;u!i?qNP;6T$kJ-1,30A,hEethDUPSCOYknpM6N`X))6<\*.gCO&g<_%Zb59)Jct:e4T!0<N
YWUj$fCnQiXcSbC%3doK8$)YCX:8`hT9!52p?fF/Ec^&6m*;jeAZr]B'dbOO_$[G$gr?@IY>`N%G/Nbh
$k5Trme,>bnh[XO?NHPEfXLF5JkIDMuNC^\,_7k\BETIpGhpioIS:b?'5ngTYVpS%N.cPM)T+QkWV,fN
QYj+7_X"n<.NK;O@,hrrAk$=$n6JqJdVKfmfQ=TBt^%++^$kc+h@Bp+<cQK3'=`<gWBtrr>V\cZk"b`)
sY?c2&WmUZR&>?[8P)q9QSIS]<VT8+44O;+G/E>qb-RkP:A.o=*_'mB<Sc:Z<CMJonb_g4d0IW'MH[eb
K8\TkF26W&@L84<mmt.7Ls_[I&FB?X"V]A0)HDF*t=[PHCso>d)bTfCdMSD)=5MY^>Ul4*;l!*FVii#$
bSAObG0l4P.<^m4[GA(3=o_D\LmFH1Oe!5!MH=;\tca:M7qHo)A]AI"iktIB.U;c"Zp#r5Mu&I.O:IP1
Tm:!'MrD6hrMFom[$j5ghh=>0V,a>Nufr)`R`,g.4F%pNMMc.nXpPY(t863Fq].98qu0T@WA41bSrqEe
V2:F`I5/7=JBCr(PZ?'Dt]*TQQ0`6["Zsh!2IgT*1\a!2mj&jY'+'!1qa*.eCR#;l_QkkoWljT0&[mo&
6T26'L5@daE,,bC,r1lFSjJJ$Rs9kn['(nB#FFe(d8K(59'<j8mnC^O#_qp0-(U5D:0\4tc1#.D5OPhh
Ul/R2Mg`c#n_0htuiP@8a2%$oTF'2!&rGYEA@fH\'(I\c*6KLQB&)D;VO$F=HJeVPAWK[MFc/h5"eI00
mL6O3[m6rr?QT)s`r*NO9i2pm]3!C'V`3Ed3c(8;)KVe!ui!4+=ooXsS:>lEYfc8P*cs23VApDW]e&AQ
W-g"cpLJ['9"an$JNTlMW=")O7s2AHh2/YE^(_[@<;NhD5#Fc?_2M"FmcH=[*\0NtM-tiq:X6D[q#r=a
4`A*UUPie&hmn++")6Vu:]pU;OugPjPR@f5#l(VEpGT1H^f^okD0V8P`!oH*4cUjfn&/MHb8<\[IN*YT
Q^ijE^X/['i$_4afQtNj\^XUZj\j7[KrcehV'M[Y5l_bffpBrU8%Bh+ErD;Z/h`d/57/Lr<dX30%i,f5
KuKJR&_*S:Ob:TE9s7ekcBLZ,btV&s-(RpP!N+LJQl;>c3R2jBpE4rrAoo<qoIHlG.9Pk'm`AI,Ec%?I
j6>%s'R6kZ>GHi0sIV.oYOS)p5um:*Uiah\3)NX(tN^Qgq3(fsEiO.e:)U\7N&%`3pE,p]C3WFu*U@*.
0bLlXT2V3GK;mbLG./?Xq<[mXg=,"\Cr_9[/SZf-FjI(rknmbe.D)5*>jF?T$:HCuMU"OEdu+5&8D%7D
5-lm9e*;!0:91LR$CRn!j4io@_D48Qb>Ve656"/</d?;HKKX"s8ucee`kDL%&`3%CCHSp#_``@$\DX/s
:-2j]SCB9RZ8W#PU6^0.a0jSZ[(FF#.<*e`,*kR->A%[k2RiR;AWQ!/4B'5lo[SG*3=o'#u9JIu+8$f5
J&+5?=*8+1'`%!27*=^-I]jq0r%kl-8`)X"u`=HW#QOe<X/j>fROVP[I0`7O1J(K8*=SEEuY^N@rC>^[
XIpNjWqTD07*7BcY46FG;c?1V&"J`ud7:)*NFQl<Uf/X]JD];ALgpFhP0P7dDkbL0q;L9(09h3*Z[q!e
;u"]mV@':UGVPYC,DC9j=uWm.,Fd$nGU/o,m^LTpSf_rr=UaZn\eYe)[/'UY5YI/LV?cNW/uA!#1neJ*
,)u6Dom@@)7OaoC)FH!i/P]l[M4$"Wr2DgaR`*nY<#d7%G`1M$6>_pO6BL\5edjNC)i,f`akD.!pf)#a
hB+81E)#"V^r8;l)h9PSEDF"ZQ3kq?K9aTD`%<@:,(FZu3)-]f00j[sMb`beFYT[JN%f:#q^kcZ_&DA+
L?TB.OSLDs:Q;8C"@^&PI:m=L^gWVV=;frLH%onE7e#TP3rl[V<H$l<5gHCLs<rl-kKr_MN7bq!L8l#q
m*bE?\e.4n*7Ylf,[<]FEmA:IMY\KE_lPbB:5ROX-(DC*cq34Ae?>Y3E:I2>X[8](pdcgXY!2h:ItU`)
<57WmaJfhm(Ilink1>PK+S3NNIichUjs!qsP;I]/MMYnB3@j)036K\2a:>0p4#9%II80aNe<<0B$9-Ah
NUDfWEQt(\-2cho6EC.ImU&Gs?$8jOVl.=(/XgDspaC'<11]k]qd8h!'""m'km9TC_GAk/+4sIe*L='e
`u?%83EiC?jNnm9fDJEW6"ke1AFsWtqJ_a=JpeCMRee!'^+KAZlEjn+<HFp*k)DDWEA'U_a1hchk-IDH
TGH&8G7nIU8qgk5P?CbF7178'G9jZ.G=G[[qDn<n\k/5"m1q1Loq3?DmZWBNfnB4tV"p8,iRC;ER:4E]
OXNmojKDk4qTbT5Vo5[Elh;;8Bfin04F$?89.dgM?`52#)jcX3V4L5K#Ur\*Y>[Df]\7YZZ(_&*E$4R8
+tlAPf/9i^ZW<X2Z1\nE5S>?/t_XC&9r+RPpLDiRmRmdI[lk>N'=#?(]gTjc2%0F35^KebLI9rhTai?e
95GqD^o5XAahcYIC-&c+GLq=2o:US)JbP$NC*>gKAo$W9TOL2i'SCU;Nl:BoI%b[?_O(<qr2irUYEKS7
JT%f,=Gr5a)%j[sbQ-p@^EL%$.p:"m>m]XDq&18KNk.EuK(+eq_mbn5Pe<[J1X/dcrpk)kZMI&B?BhqK
1k%B9b%*CIeBM-hR)8gF4NArrCI-q'H%=G_a"^'%N4BPKWif$n+]^H*R??-ifsi+$]\1:Z.lI]$2@QY_
;ngre,'uQbmgGK!f@/.%gX!!%=KA]Skd1hU$c0J)skOWLZe8??[BSA-G[IP^k7EEdmG<"[@LM6&8D$-`
E[>R.lpD5M*kX=PD_:\$n*fF+;Y"&ee\\TDnnumB+C+WH`_n#__onk9Ke6*MXnP3<&u%^13!=PpDMUCn
DE8;7=fSIq5_ppjYQY]QsIbXK@2pQ;Gb=k<+S@cB<4L=5!K&R!]^tofGs*(,E:ogeb?jq6E\`(,:GK3K
iu'Y,S#,AW0V<V0%$5m4%&p!"E`D!"%]7m5;Qik>8V;TJ.^b3LX)LbA=HW'ta!G7+Gl=Y-!1b,jf4m77
eVc49YZaAtqRhGi^@@A'N,q7Q4$_D=DJ`rY!]X"_jXpp6p*7Ksg!JOaR4Xb3Yn&j0a4um)^fi4hlfuZA
i\,9,fD<8s+ro;sRb^%*D2L\\G6Rc)2@@+%+;%5AE4pV;`L%oGdZXMg0&#QV.>;+^lVcQL!,9bg?"j4.
d';Q$Ee1\psBNV1#_9kp+6BBfLLd#-THRZ0f9Sq`&ib,PgETDt6Eu!+-%1mjQ\CmJ7p"pg6tQnQ^Jarf
GB1%?WN=.HGHH[h4eJd!W^B:YDI<1Z2'Gc2Re0'2"!;rr@S5>#4qIrr=U"oTX=iKTb=G<P,I5,r.&WU"
-P,+8W<`-Jt]\MYAmjk!.g-dFe5o?bqNDo/#\;<q,7(YK^\UcA-+]D<+83qbeu:;m5"gceYaJ?<!7B-`
<Zg7j!W+@Ju`H\j%LjH:]B/N,Hd?'g#/G%oMu$U85:b%(f%,<S:9tUWhip)>d$fV<qPoI0N]D.&3])\6
aOEZAOV[1A6ap_k'kB9C!5'[-@QU?QW#3Qf(Aoorf-EF)04ZlT.gtS&CZEO^1F_g?\O!PRmFO-$MhlC5
SNhY*6TcFg:e&*;;V<nFS)^G)W0T^)^5Of6KSF1N6XbekdsQg:VU\[]O5,8K0/((r1!jd#l=fpsu?trY
>>Spm9og&8?S4nQj_FiJgXO/ZdelNQT>*gkQ<b5Kj&(JauaALoH'/RuQ"&Fk?*ZN3`rA2p$+J<N=NTiu
9R[U2&MVIo3[V\rFDY9mLEV?,^WA,.nt$.YIh0*$*\J%G*_o7r.VCi<PCNIh$8n!4gR[ohPd,#L'^IbV
:GLr2g+s+*+q..]sB*eqNq.eTCFiB0<N5f.Eh'%uQ9aY*SI'SUB=#Ft$#V]6*W3TQ%6W,XFCu_8-Vq\]
8#G$*J;eKc^IUcO]qQP>h!Je1S-Jd3c'!>tZ!fFLd`l7=9RMb9(o.*FBO"d=R@Pn'up*R`@S9nC=I9VQ
ETPZFk&GdpJ[4>.;8Z[Caki,ILdm[)E+l'V&]c)0>BSj=p!W/*Y@b>/t(1?Oba:V(Se_G0(Y;ErPUsPA
f>noC5FqANjBX4rZ:XEEJ[bMUuXKP/K.4"UYR]dEkrtZ2XgeNH(P7Pq6pir:-E]M%WT?rCm8,K(GdV/Q
!Zg2!L/"g=eUl5D=f3r\hB?0+[>GR=F=_Q-k9[NiWHD?7YMP;Ys\T&RRhpa$])I-$ZYtUs6ba=3AooT.
_%a@&k>pH$me8?We7*H@]C&nV:;/9CORAG:_TXQP&Alnq^V_l")Q_,>g]W6@k:p!3R.3H1;.5k)":@rA
:]N3eDuSX.M[V!XL%m[Iea3K3pJf:RFqH,#l9kHIdXdV#*d5$\^I@j2GVmZrWl,F5n/9an1Yjq+B?he]
2($cX5Dl?dro"h[;`J?JeubQNBNg-Gq1i^YQ)Pc_sH5<d*9^Bdl-=mpF^[_*/V(StY[34AVaIG5LVaQ?
O,3i^cJ!6Gc7JGrXkm)Wq&"B>5%'K(m7\I[R6P>*])(B9?5!fi]PX4F,(@q>UH,pfE`HdX:o#[t!_HbH
\`/WN35gd'*=LpeSb1IBCN(i1CEl=rs!]p6Jda`FB#lIIO^e.F[!->hY-ahsH]0^E:*_Xm&%_F/8)FQD
."Xd?`'ZN:'_b:ZA.*UGttg\$=D8UDeuud@?!-D[6&I`?#$1Vq*]L12H1r?o$&SLfn5$O:ZUJqn.l[F'
\eGm&f8QB>e+>euUKHX6Ya/%6V_:h;#W%gXF]4?Ok')EkAnK?ABb,l>o01]FST44VP\6K2&YYeM$$RbS
Dn685VXm$E?.Ur?ee44e?#M?Y4Q'bk7YLSn+&o.o0gX!+T1MKfZ"q7;>q%=V)9D!CZu'-"I$QU44-/0V
S2YXhjE?,(8psKt)74NSiol)[^^YJtR5]o2H,JdWM=Xcr<d8UMt#t:YjA'.Soad+-9HKr5>70\58g0TF
b&%6kossrY8]=.T_!p\D%AiEPH@OM>f9Y^+fIjphO<tD+":7)sb"HT1p+Rp2_ofDtR5e?aaoD$rFq$@?
-k+jPTXFk^5:0MQ-9Jdu2UXnikh'-`qW+_V-BT0,=Ke_EVd_<MrK<Mn%_C/CD)@/$j(<Z5+TTj8m:npi
"(!0\5Wh+l&2,:\X@5^<_UK0C79ojnY[q_nK<4qX/c=n:Or2*uSg65M4p-`u2u$r=dD:qcD61*)^XO_r
D9"d_DAnrr<E*\t<COdJ)85qku+G,AFA>QeDi3nNluUXaA=G?+%_+fq*jTeFS#OZZ5]McHP3hbB*7+X6
a;'62e-b?!RC0cb67E5LO9&AF.soeD8I!Qa)>\^>G\hg\(G4hq<L"J*FXk-]"S-MUM2UPC;fL$tBQmeY
R`DP<m?]?V;X8lt=(lPb,q=r[bUn\G1oW>hrQY3^&a]5AV-Co(=[9!+*?#p3+p!([A^fNBT%@k?H<G16
=VTF/433)8Z+bUOOcPiid1&hme8VXnu4",b?GO9$=oNp,UG8pl",iT0(^'-MU$gc#Zt$\Q"_2boJG_&A
"(1;1]7R\0i$b#E&FjnG`JWnTTl`56ZM_Ih_<RZo,=t\SITKH]+Qm(@t,2J'ifBn^f.>OjE'L:[0W=X+
-`(e'X=Y,Kep:o0$I>YCaJQG`Me(_>7f$Ipk!^es8)VjQ[8SG^^$&TsF6`19s4m@^EYF!J#*V:jIF%?!
$AG-E41td$K((Tmq'1I1DN`4L8<co#WW^'G`&IfH_QU\T(uo8"hg>hbMnoq&Ni?'gG"R[t9*Bc\4Oqn>
CmqY7Kl1`<P<P/Jc2b>C/[gBCcj+C8mP6!uqeoP@(UL=LaMs,aZ`;lbu$a++k;HkDje^rR[G/$n>C=q2
m&^htPuX$9isqH(XL[:]Xj.MuNc"lYlP7re,'uT>GZOK!f@/.%gX!!%=KAW86^,IJJiZ=[R.,-%,=q[m
$5E7EKOFE2oQ"Np%SW"L7t,^i]SV$?oq#*l1WH#=ON6RRN[/f+9A0P[0%iHNcCm\jfWt-$GdurrB$*9R
9UHElYC^Y)B'S-$6aa8AW4pe+06laWA8p2hq5oit%kdYkN\ZoVZjb8G3DcC\EmB*>@Gi_CL$Y'XG2m-B
[;r;&['%>VT*l,Ll<ee01Y+.il'TD/UeS4DT!a]PV]u[R)uW!GKA-]7QWL3#TbA$Lkfd)U>C%CSkiCl4
^;lp'iRZD^D3/miPKseuFJ+kJT;pR=66b[_';/hW>sN2"@OMd$'T\pj:qI`Qs?8]dC:22=,nb*o]Xu%c
cG(lL>?&P/ZZ,LF-#-EM6phe?@V)_bBPAK"_@8K!]qb6X.5ahV`*K0\cEjZ7]L!NQ:@RqR]et[Xet*YD
Cp1>'NbRcJ<rqG-X)PH2\JK/&obOo_u5)lAnRY?DGBGg$i(\h\5=ELW,m@[MS[rF/MU3=tI*`&B?%0L6
Y+4@Ob8LJk+#oI')n`mdC)T^e90&FYq^)n^l'1-*bK.Y)XgG;MHd%Y2*GqAX?JsYjYr8+*[_6>'?+(Ia
ESs\h8c7C"b8fTp+gY)LN=iDuK.Lje;q)^,'*MiXHu)+1#n)Y7q6ZG_8dM!nR+iIJ2X&;-RZm).!i_'u
(1(VtHjf^&J'Z@@:,ckj&#Jbk^;X"j,;EC9N>_*RsJXm^*;(`,fYE(6H0F$IQC.=N]VuGoOT9jC$U%V5
M6B)d6N?EGOR)8f?1QM'ALUJGP:AokENT<s[Y'42:ALLt%ZrBC1$C/GN.lp8_ETK`21IfkrJeS&7:6W;
I&`Vquf"plVMq285dESSmTGPa73dp.5tYVGs'e@`kosTbe&ZgT1>S1H[QR]a;Gd.rWgbOi-EJ#sJqiXD
1NA_@HZ:nG/q>O2Ca6R)nND+l]R&!5d:]QXL"Teil4JD6;i7,ZaZf`i8S1J1H""<J-cgeF0;ZraB"I>(
76tq%IP9#sJpF.Ckr,#CrV[QJh4sr%Fs(5Lc'@C3r1(Ihfdk#K1NmH(WqSN5Y_rkZ+K1,0QVV\R1EnS0
$*Q]hVH9K\m&rg,&5J^aC-YiGCN7r.A43nZUsS0\Ptd`Clgt>2Xnse][oNJH#VA9CXb1oe!]Tpe1+7aU
S7M$A6,sa'\U1o^Dc8<_(2kNJ[Bn/U4sXRa&qR!86Y'97VN_jTi8or59u@hnd^4pp=?4rrBoVa8Z.!<f
O<M"7aYc]X[qoGe>3erNUA,rq1R3S=]lAcg6qrAucSGG*Ji&V5O5"paLO3/j9hk./s:XT\67BK,C\l45
u%6HTbk;eSREkY/@8S44<]j/*U)=[:RN4Xq"\XiJGfZHlWHI9:,Lcm7W<-8R];jX6uh^Yl+<7<f>nN_?
olAXQT@aiCRjf[)4.)dV0KA*%p$46n*g8N^smt:&)p%B>K%7Qf0TRrZ]b^fd&>d[[X5=!]-DU'iG6,j#
,#8bAalQ.Fj.+mb_q]CtCeik#ER/'2nC,;Msl>W?&1!IqS5$pU\!An)6KbVK,g4aehC,W/q0%[c[X0#@
YELSM0"^`LdLlgs+fMM#JUHV7VsSmAK5)_<3cORqWa(kF2$OQ/O5njJbo>h-9mZ1:'[K+.0o%EA]Ba[A
+T<0hIeET>7X^[sEJ0QQHN]*qCO,9#jB.)\=&*ISL]C^uD`!ps&>D+b!qrOlA';!ab?p-<#Dj0^*'C^1
6i\E`0^3kB/1*L2/rmcUh*nqm$/$,1Xa#n*h;)9RIlMGMSbf@+P:fIgpL6qb)CbG&?qg?]?*^NWaMo7F
ij'J^=pr\X$$BX%c?2Q0b,L^GD>kMlg"VdNH7%Qi@%uV:6M%i:hs@4S_IsYu!,8$ruor9`EDSYoan^B9
St`N8/pQ<J&?^5P+,g5N[!7DS;CNb3/J*rLU[#5N:%7B.'\U'(]!qqb;Odf+FCIps\7=N8s%!f:7?WeY
KKU!fLfVqqq4;XCZSAk0?1XrL/09a/iIJr$ma<8;(NLp7bPOK4J#,r%pXYJW+tcnW-q)aCaW8!/mgZ4q
%@<YK-R]ot'&)GOp1ap_Z&>)Xp#T[tj>M!;PA+rYcI1UGh90]Ah8lc;(K%3TL(<5I']BoBgtpr5S8,YO
N2rq`F][qaLh,cN\s]k6"2^lg+9pjM/&La#I#l?P`Q?^\8G3rr@qZ=rBd9^Z#/Fr5(G)bO#Jjm*khrgc
s-SGJ\.9r3FcqO8f2G!kGF#p4W5&IU:V"im3Ko[ZS#2;JL7f@H^0rg5\s[N#P`^hLF[+**m8]3>l"Em,
@FHhJ5BK#^e&9c[mLm,*sP'jp&.KO,cFAoZRb'ieNBX<&%3$of8*7oF5(@ZFh1DV+kfHf#LjTGF.6Ch1
!\b!rg;^_r1iQ_g1<\)E"`AH=pf3dJhSOZi\*DHt)VP2WL?';uLKl3=]=BXX3_Vo/WS%X+,rsSTFLCp_
+.4)FO#'5X[EdW`rk@di#:6ph7F'"=ARNGdEJ-MG<F9olC'4B&OHrVMu?DZt`l<RE,#8p_!4H[f6>]@A
@C[*KA,=4^%b1puCn&=46Lf2,B(C,eL@DY4sV,)-n2Qi1*hm9J%+@>#@^ro.3jV>u/4(r^TuIYM"il$>
CD*X8`/,Y=![!o1=4:B`T@Ho!9(kkujSoptbIm6\TCLIu/V"Z\/7&>O!uDr]oJTEO]a]>/_54c7uV*F[
$'/6lN8q`UF**m!7Ir1e#_t+uY3@pVR@,L[>uLk:?Q4(OO,npb\JlrT`mKK#>4tM"BYoihZ7:12O^:YM
&a0%0$;8oV-?T[,:deEpNTurm8X958a;tIVeVS8:RagJ(U,!q=XNto/`I%&cD!4p[#6`5=Z2^iJ*Yrm/
+(0DSEl7UAk4JRJiefrrC/MnR)8(V>gN65HumXrY#+cq2=RKO6:)8pgtUu?:ODY<SB?Pf5(BdnPsc$p6
trQ^<hCX@.?JaqmqE@jD,k(9EM,AAba%31W&1W*5<FJ]G:;sHih$>kh^\BdcN(,aO;,Yj7RKm)DgETZ#
6&j[tuA=a>.*aD*HY;??@rM(UTOsrr<l7B!ehNeCC@:Rc!J.q`Mo;iRX(KAs/-))01]lmlYW0r7C1'ls
laRIi7m^Lq94tCLcA+7nf)m=kr=@4R[)*H!lS+5WB_jr3J;g\W^6IRIp7]ds'=:F8#Cum[<r:r'g+1L-
>qPY6F,Nf7i4V;R4Y&-al`8rm<FDfR1fXN!@??ik7GIKD9ZKc\6fJeN?k$mm;ptnI0E)f)&6g&]0l3O1
g-/[I^XqP&c/\4\D!>4!u98O+Q*B^%$%$(W+K"Hqj,@YMsI+hs56WqIZq0:HWG4.bdO2TcfJ_+P0!X)e
bZ^`6X*Wpk.QAKr4X+?2iNfL\jG@Z\mm`/4Q"$m%j"d3#TN8Ikpcg&".oJ3H2AP,hm`?rrBGjK;SPrpt
aqj#^ea=N=WpG>M)RhNKr;R6aa!jc'$#.=HgklC<,^QU1iEi^(oN"Zf-@uC#NtC4j7lRTqXl^dPPO@<0
[P1,Gf%=`\GG"Q#FFoF65>+"IrbcQhrks7IaaFGJg$Vr'e01f=Wh\4i5<LI=!tZI@`q(88ubp-RqXB(&
;QVqap^1)?0\pWNZ'^EM)K&TZ8V#hr+E>q4BAm_\;t7qnpCfZTl8&%Gt[b/5^Qe\(?--G-rOmVLC]]R*
mY,9mb+U55tVS1\p%ATp=RU99\mqk$]g](&[Fh?";eW_L$bJ^7>dfeL^X#hGCnr`ddI>C0:K9Bto_K_X
9e]>@&ql_\p98l,>=B]I!Of`W#q+L\?`Yq:SC/i*X@2r'dDa-\YN'c1g8qA^AWrq3e>6rMVqo0=FKfn@
#ts[m,*(4F\i1fiUmp+,g.!0n3lr^ZXW<ftV17K?Kun>`T+4S[uSjDRocIaH`Y6m5OS1b:,Xj[Ia']+6
co-!+k+RPOX.bA,W0[rrA[MkB.ksrr<BLZaH)P$*(U[5Ae!prr=6A+T86'BG3QKijQEgTp81J<8L]0^V
T][o,m[d/,@k:;>:1]NX[OE7H"faIs^S7?i4rR;tcRQnf20!I^B%SIAd)F'3p[CYi!Rt^[j@<@uA%@rr
<.g]D*Q=^*n1QL+qK!D7TZHj-A0LIaYtO8f[b$eIU9T5Pm$9bHTmGpqQD]Tp]B)TCP+F;YXn_Mg74uU2
;"Fo/ZgNg$4(^BjZn77dp+T3i;@N7A%nC8+q*Fq*,\pAma7oYNPh@rrDPj]GLO?jF:Y<lheG2S,WJHW7
1I*pul;CIO+34I0bdmbAAp!lo4Ka0Dr`b9,7C)!0LaRiLb]HZSJD7M*6=:5Q:^">#sOfQcBje2oKQ(rD
k0C!4#V;^C6IFpqQDY=dCT6rr=_C3W%,&GY0.V]dFoqhI$73Y??>&*uir1-#\TcJPY]uKTF;f%kkgHUj
j3[@'_CcoDW+XARB[4__C?'cQ8L26/fK@:]AUE/,mm;)#X"*!#=>aqTo!#(]OII>X)*'gYr';q1n[0/,
B2F"o_"ESf?'N"jNCYjmLH^rI6k>\*XLlRAYseO0?m[,!YrN2h@\#^Pi*l1&h5f@_\Q+rr=6IY7,)a_^
hRD(`j3VrrD(XO4k!%-_Ff(n=AFt^@CdQkNh\?I'=H75BlXIk&nj&`IC,1^W=Ip_p\Ip`qqD<pO7;Gor
D-n!44,n?1S!q`Hcn3!.No,!9,LH?nh<LIi&)s2"N7rqgX4t!$RP>RUW?eD6QfCS\N1Jpj;&i`V\u2;X
_X"EhS]b]J/CG!'mWci+OG+r\+2fZRf&PItI\#,/1I[l.1t4\$t"5kO5\TB!;47_Ya,?rM-k$'5O_bh=
>!pjg)CoJt`+WMuNc3Iq`B,TC?4K7(QBLYS.t*hWO?GDt0um^,l0oa8CrRrrCt>+8eP7S9l%lcPM(ln6
b6eI?*4aH2a\;e\3p=;7HQ*;r[+srrBJ]TDaqQ0MNQ<1W:WQrrBlbOU[kg1:AH%r[+M+j&a2/rrDUJgj
cC)!1knE!:^fKaV)@qZ!YiP0Cg#5i?LEKM]GMsrr@c#nN1<Kr)Ih9h1'DT5@9S/#`njU(&\(3K)Yfp+!
s/"%D4>h9iSk%g[RiKjRIZ8r?6sr!/RNk0RKKED0P]g,%rReG/GXseC7P!!#rX$[=FOT?Z9QTnV.[+oE
s8JVqC9h1;1CTaB<AR>E]u&'@S;C)ZKeP/*jlYj2])47oQpEMqN!B0.WVupF5?6dC]i6\:1!]rr=s)SP
#'18N-FOlG!PX_Ztn0)&T+UA[Jt0cVe!7EX_-?6.3E@_f;@"i;aJ\aj?YI=n,ch/@"NkIV@cD-d26+<W
!,S)*T?"R1_aPU\j<en/kj2GJ`&TP2ETh[GlA86a&q[7g`S`mSk@8URYhFg:n$?&rpFa?,%WPPA^j-G<
IIq*\m1cWV_)<A)[E^iX>(E##1q`H$#J:B8T[ZAoYI)=G?g1,a")mV!r8g@=@W`iYK"ICpIfa(Uf0;El
@C"=LR/%`r`ek?cW/X)s+Y0rk-OCipGjZL;.OhfsefO'uZDe(\%]kZKf#39RNs/6Iu4M_#=$'(CYR+i/
64_AYSF8c[\25lC+9<ghIa%Jk9N8ZYm6^-4(MQT"2!rl$HrA(Z;dq\Y&alC>+`%4u`J]rYt@OgmW/:r(
hBKg;]Uto"h9n]8AKZVa^hmL,"^7<=aa$:7\RUnMTut7(R^S*N->$B/%CD%Ds4^Y,_=qJYj19H5424)s
csI]%?<H4:-9sMRp7(3aXJ/N!7odY^hl=ON7MXfR@.Q=2UU`ipTbiJg;fVT[-E1If706mdTjUOmin[l)
unhr)<L](3k-3IX!0p/&qLf^@/^)F77\j-j^I)!TT2)i)T4-+2aGCk\^>"02Y[,0f+2Te#/S"R,.cBXF
=BPmp5C;37ahEE.=.%=e7;?#Q8d.9IK@mqQ]P\8O)/e[e\\GT)R:4?c2h<<7*QDF'?sK>O=@O['UlCm[
nPH]Wpm@0FWUS&-*og+XQeAI*Z([<fN.MrO>6V^Q/<oB7C2&(05aBL,E7NhX=.fD.:&5AdYOJfbE@uG8
V7VNIOB($#_ISDhPh/e[7K<Y-g?n)V.LJB6*GsPi\:(V"Z7*puuV@CC.(@BCgc8X(X&s;;t51=I)$N0C
C$E2<]q'0E?M$(#&"TRaZ;0obHW@h!(hHf,Je2?RE1W_NWt.,l,q6JDXZ^bAsj>VN=l$;->&c:ga+<AC
gCsl%Ns;+7]fIrr@V"kXN5m?O;Vb6FLYqKbOMgs4I~>
%%EndBinary
grestore
np
grestore
gsave
.6 61.8 mo
332.7 61.8 li
332.7 53 li
.6 53 li
cp
clp
-1.31 61.81 mo
332.91 61.81 li
332.91 52.99 li
-1.31 52.99 li
cp
false sop
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 405 ]ct
[334.22 0 0 8.82002 -1.31 343.19 ]ct
snap_to_device
<<
/T 1
/W 696 
/H 19 
/M[696 0 0 -19 0 19 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/DCTDecode fl]
/O 3
>>
%%BeginBinary: 1
img
s4IA>!"M;*Ddm8XA,lT0!!<2T!(-_f!WiE)!WiE)!WrN+!sAf2"9S`/#6b;7"pkPA#mgkC#RUqL$jm=N
$4$nG&.B!X%hB3^#n.CY&J#Ka%hB3NgAjSA!s8W.!sAi3":#GE#RV(Q%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]s1eUK#QPM>\-)gE!!3`5!tbP:&HMjL!$;1@!<iK)!<E3%
zz!<N?+"U52;#mq(?_uR1V!!30'!s/T-"U,#3!!!%J!<N?'";(eM+Yc7e'2`0C,&n;PJWZW3,=8ZO'iN
HK,VrnMJdDc"(Dn#.,pjuf.4R/32E*TU3^Z;(7Rp!@8lJ\h<``C+>%;)SAnPdkC3+K>G'A1VH@pm)L51
SAMNX0fQ'Rc(R@9kFUnsrdW2Zf&Za@-K\%&u[_Sa=2`lH0Bb0nbge^i@)g"PEEj5f=akNM0qnac;Dp%J
.Tq>1-0!$;4A!s&E'!<E3%!<E0#z!<N?+"U52;#mq(?_uR1W!!30&"9\f0#6b55!!*.F!!*-'&Hi7\0a
87V;$UNL'-]2_#S]UfTs;E?,;W6e'k242$5OmDi?e"1(`=5=-R^Dn2)[BQ3BBMq77Kd<8P2o\<E<1'=^
#<GAS,RgBkh^2F`qtRH$Y'pKS>/9Ll%"PPE_>uQ^F20U8+N\VPgAlWj8t<[C3QS\[oYq`5Ta:aN;TQe'
uq!f@\d1ioB+]k3(smlLOQ=p%J.Tq>1-F!"K,4!!3`7&Hi(6561Z[TF^5bM?#&t!f?t+TE9uN.%gX!!%
[YVp>aaVZsOYt/\/Ha#e&Gn3r/>`=8CjW.V89m]$jl5?.$WJS1.EqOm]sir&q%SQc#F,2!m(je1XtLP.
B%YN:.<)DK%XYYE!)^eqpO;R5H'!C%f<Rq`GpAlH'u&<BQT[06`cZqonT<WE#jkr6CW.!9%">4=>-HgY
2QgnL`E!mFM>PQOu?aVgb-G][t6^$iV\j?3=JE2'"=/oe,s2HYL-pQm]VsSCcY1))YYmXk2\6B9Rkdc@
q_SrH)]<([WmQ3r#oPQ*L*]Wd&I$RVn$pU1p)C[am"t$!F&Hoc(6a$s0]K^U5`4dGSpUBb9KSN1014AL
3R[]WL:!mT^"QO.5?I?oUXi3@TBKlc`LdF&HqBhq-Y24/RJH584#<r*f)dUTF6K5TV#q[;.koXhn<LJk
WIX7C+K!FDM<TYD&SiZu6.n6M!^[dk<'!?KJ&Ak1PtK+kr-<GMAb0[`pd?eAQFK7I0sR"PXHT68\KX5H
hTnS+`9KQFq576i9iina;Cr/I'Bf9em):D)DUe(27)2+YU8`a>riQjB#@O$hg@D]OUI2!5ooq^9lETZu
1PHAhl.;:_;QK[r7orZJH1XE=o1F9@*V<[NcNEVcoOIO61_K_EZ\ji^^glN;`nKlM-]3\^<6lVea1f[i
TaVn]6^e\K`!7Oui-%pes_iRo%V_'jmN%YL0grra]*pR-[4[pi!e4C?H9Z\P2r2Mu=Pg;cgLH[BYJGH,
&a7qUa4pIa7eUTaXP^KF'$^+K94fa892nq8FC1=A"T,?!lpre%63BC)kFnr(iJ5^Y=+N(FEi$JMf.mOU
m_Hc_pXtV/Q5^l>s[([,@#DjCA2iZd_@\$EL)drrC+[FYFK;hq-_*qWI7nnA/N`C#C",@Xl(;8+a!ZrX
o/1_)/ejnQ3S2IuMjsH?PXNhg(q!HV#THlunGO,Qk'8fm&9VUbD=Hr/$AQX@6^F)_\_kc\Z#;DN1<6Mb
rp1O2@YS[\bpl]7!L[)47GFj3(Po+$2DCX47.LiR/Xbr=mL,rr<%2rrD)e?h"]tT?I%[nfn(LbWhMDaR
V"ZCl;Zs,uFUAi8st=psgVh!5Tq'b[Nen>$'`q2u`jtV>gN-%i>/YQi@%00C17-q3U"t5MI+,J(FNL8,
iS!duXI&;Z?a7VYj0g!(@u#rrBhp^\Ho2J$1i(jnumh&V$k6cfSSiq4/W*2`8AK&iBUg_<_+$nVUI6i0
3"H&P02)9%$J^\Pqj9Eo6W^O7hNFr4eTu!$WNMmO^Nl0>m_+[f*^XaDTT"?\;3I4"$4Brr?ss0,OA4e8
b/bc;3.%i:aSJ9B'9UnGC-?<qeY7UbL'Vg1OrRnV.0ZT(oLmiTtd?E*gq6Dt>q7)<'mBFV_%UO1P<$r,
8k8aeDs`ef>cQRoZ,-$]?C"c/_KK2+D6=+Jc'`#C>kBe'$QWpdmSs+'SO:j4&&!rjVMVkP)'(>%kOUo-
\!=rrC)g[<lkq*^I:q^U.'\g9\aFiVl7ec%e%jqair#SOJ08F!>K\,+XTZEu7,XpS?Llo.f&+qB**K7t
/r7`7jK&f@^]4IXfP;-I^Ic:Re+"_l*?JQV)EN7EdF>4mUcb%VT$!MEWE_2b!6GmB*7B/`OropQG>LaH
;)uLqiHJfruQ!YF`aT;T$XR=*FSXY9IU22?(@oeFSaT2o]%YK`2L,pKZ+JY-,/WA<npL+U6TDqkfdc5'
%9`iOT55?@sT6F([`)+f9L:;pt"iD-#%rBIu,<'u\:D%%^E.S:/t)&a<QCO#PVN9fA?sUXY4!U]#\X5'
OB_oZ^$#rJYlK%VSqtNg$9r9k)RHO)6h?nSL$VYE_p0Jjok`]2KI3T+Cj$i9?$`aI8F,V]3;k9@dM*E'
?o&mkSrrdsH!eT::cM9)5R.31amP7G5*CFZ,KOo)A]AEo.Hk%H:YShtG]."$tH9bB^&M2b%RbE7`Z0Um
C@4EUtM_>jTN=]^]$O+BeJ$=2"CPib12$#5?+>6IY9H:UMGU/bH9BC)8Rb]))gqI%T8lQVS8*AK*g;\,
JpjC73-;6XSGe]bC*cn8>^Jienn6,K6!qoPt<t\X@9"?o7aYX+CA=m4F(NrLc3'"aCi?21H.G_OlE<[M
kF/p>2!YWBK(EE=j`eg`o58*-9-dHWRmUGb;'<DE:DG]*k08f_SgiSe4VVN^'p.Q[1gBd5A$=apVKHjE
7r'=0oj0':6W!?2Jn,$ei9Hho)*&ZhU*g:L9p5VB%HrnFj$hQ,ndWG7qQN(mZ>*)"WbNCR^e+kYR1q\s
.PeLU:<cSmhX!#aO67^ouDd/po$oqNdW2.g3N6cLZ!l9Tr$8lanSb"SkUk!$4RV(Uok3)jj\j\B"GIiD
84s;fK:JOm,qe[^bdG[pr>\b*klf1IC[CHYbRI;.q[t1LHrMZG2G!&*\NKeC2Ee(%+1=icBUSCn]<qVt
4:.W8H`*V+8eBKBZa$EL.*n.TF&jVgGTG]rZRj4N93`gUGB*!V%Q)L%+-_+3*c,RT@2]5DQQ1Sfb>dm;
:ErBTsCP8`l"maQc.\)bA9mY@%(JnQXqZf>DMABj*11$ghk9CIS+IR+c]T;;=gXEX@jdN\Z(kq:pm^Ym
R5<FLpbPq'2dLS#PWgJ!9m4,KkN<Ia9)XrZ$<%pfZWa')X/M:!b`QB&;\<mWkqbD(WRN8Jm:>ThmNHH`
4)+p.k/0m,t9o(Xjsb,P^i]6h+:.Xr_h@)N2\!H(Q2`-1_'94J,gRShT-'os:PU7dA0&2>:1@.gqe4S^
cJfchrY"!,9c6T,kWmHsuPHM0pcAqbYg*-6fpV`d8OH\VnQ@Y'(j^/\L]H=)%P9HrBp424oEQp5SR6`q
Hl*,FVh5d*.r;ZJS+uj]'BS1u"2n!/4q">WZ8HG6uP1Z?OpBq3Y[`3d%g-^X)hZ@"-DY#Q?Q-55<+T^D
QaPiKh5eTiaJ)Re>YUWGWa^LpO<`G5Tu8%%`"3^E2gd9*.LV%VtdN'KI[(T/R[TQ-[h''^N9X,E$_#F7
eV/bkO9s+oG.2hr,0IGW/ET[+#2#bgN;$^H('?21.SDM4p8JZffosjldOt%=DB&.BD+s6fO0o(Z=`eg]
%8j)h4_khWrbI<Q%.`,tZl/\'+@Tg:_rbpa8#f!`R0W'$a%!ho4Y>>Q+k1/ht6kJ*ZY9lo`BSKCP#uSh
"aV:\[uIlg<'_qP6&3'f*CI02LW.+7S]*O8`b;pd]0"^MH^F.]`Mg_cs>;nfRQPAc/0ZJ'?CA!/@WF[b
]hKepPg?jU_@k'iL\!-QgD/!8[YT`B@k[rB<UK!6*@b\RE7VpgJY]Am`[Ta8F$Y!9'u+3W&gVpm::G!'
`c'rrD'C5N1C)ZkrZK[X\&i&,uVG8,D>%rkIEEq\(aa:W>W]0Dm\/Kn&;(X8Ycl!6*G`rr<2dq#1)kG[
:oQrgt@orr=.9rGfaLrk@=i`6>u[nW3L!?aWCYPC@?@/jAalL]7>j;#^O5]KSR#QQ?otrL``'J,$U)l\
6;Mrk@=i`6<^pnW3L'rrBGSKd;XeCJ@JIJ#rUqkPkN(Va:=_"QoZUk"M\.XMdp#Gn9oT(L+U2_Z'UCnA
G7EbauJ>N.9'lDq\"(+leqlC@*R#%b2Zu4U:rmZhm(M\`)j%+8-8$rr@tTrk)ZerrB6bJ(WGDq]CcHbd
p#Qrr<A?qTUrt:\QI$rrD)DNW/t]g\mh1I%D:_DrUcsOG#ibhkU-o_KGjm!<1!^hq7j:ra<LK#DM((g?
P[.H!_l1Is:nk;Z?a7[_HKOqA-1tn6lk-!#80*GJa@[?gtr3`m"G_POX_0M>mPb8)`A$pXOc_*^BWa:s
K"?"QfTYiqpG2Y]$D4#QFc==tVJNhg`S2P@KpN^D6`ZK`.qK55tWKm573%[u:7dMl%m"'<h+nF8l4aoo
MuGqh+nKMPL,eb5D8>&V"<ND>ZW;J!c#bXjIi$97:<rrp`tf!91$1r&`[,OT*L/0DJ&>p+==Qjo)UsOo
1j?<;us#H#Go)rr=eR!+G"+^U*i>q3bmhRIJn]T3=9fU%X5Iq_XWY(X8?9h3)u.<Bp8&?gSjNrrA0Val
NI%Y`'\%<F>UWQTqkVju8H85KW]@r67b1Wq:"#bj+^ckdL"'rLU()r"H^9OADMJ&DM:+!-&i?po:10q/
b#QrQLo#N5PHUoUk^p^U5/=R67Gj;[NI(??,uFnT>Nfn4sSK7VR7'n7AhIml$pB!WN.^.D@LZP.rgMTD
9#p,;=#X+,k]nZi:"7;;om,+#?e9=5?9OL&V/F/69gh4-0)trrA`:a8Z,Df"_-+\:<*-(\>DRrW)ruZ#
a:Jp\;f,boc^r0+<?VI9Z^O!94"Yii)kWLN3=@ra5S[(1(YPKrok"jWEf;$NC)JiVrlX5I!"Oq=j[)r5
Sa:_ch;7ci4!+SQkI[T4EjEq@uVPi1.QhaQqeH-i#Ls!$Q,Q^\@;[ot)aR=8;dqOMA&A:\jb[a8F*?p9
Lq%%<GF*pUgE1*o!Ukoi5Au$.8WH3Z%erKM'E:nuR>pG+AR4j@XpfG#eIDnc&S5Q;*eI!7.jg5NZ=]rN
.maG%;N:Z&,*sRW%QF10a"SZ1W&1-`?>`VEo?Q2hN[pdb[2CTDMO6cQ>_.k](KG..YWt\c2Yl0.P0plT
/tQO85=IrNH,<p:FP*e?tDo\-82;'I*DE9mh*R&&URcn4p#JOfmAcN`;+6KXs1)gXa*.,6#g,qs\fFr'
n?%54)Y%VE?O%OSJRd>)oMTC@Z+\VO[3OE@mtEbrZCBT"QZ#-/H;M7&R;[D.DPX4HCoNVG1@(5qGn]h>
%u!nS_>EZK.0tB[tIArm/<d\`/+r_JAOW)9:d.$heW1pP^0d+n2[loma9bVh@Pq4h>'uh2fFf$HTNC2-
ehmT1&SM^OOc0Ci#a;HtV@7cY1fj=5g4+g-<X3jfX5[ET6ElBt#"F]'%fo[l^`G,#9l7g2IkqiBF(9Bq
?*hr,JN]bPJE\USu:QiJhJS)J@^8Zn$=`#q'ro4$>)Vmjl:Qc+]jYd<FlZht8nF8lEIII5FHmC#9Oc/b
,b4chMKsF5^-3ebg_eDhD3ld[C7W`32:6Vj'":[<UHV]$t$fe%B%br!W:PnOlX-;W#B9(XQjI2P:K&ll
!FuN+]P=AlNLCAtE4Bp&!2;!&!>@S>Ai+[f"F_ig.@;rr@ki[Vrt-"o+"m5'FE0g-2KSW[7#+0OlnD,*
g1u,_:tqku[irkaj<0paP`3isq!G8J[_)Yuk`Q`W>ZTG2'7ae=:XYkfg$G=cFuC/`5aiG:O3M/2^@drM
]X&UjPQ.T`,@I*:X5g%)rRLe1Gf%]U=/*M3O5VNiK3t1,3,TC3!LdSS"0$b)quBeqAOnZ-W0ZMSEu*7T
%+\9BLVU,h5rWp\-dc6.T\3f>Q9EoG4dg260"YVSN33`5eMGkE"G#4X=\,H[Cn\lWs:BEjMc$rT2;mKe
r/eQ&XCr%-"lp$qN4R`r?%NO3@@Nk'TThj/P:Mlgd2$4]L-Jl<hEC&6hY5B5eC(bPlp*oY:)=pb1UpNA
LK!S&>urY*Wu?]F)*njV\qoo:#G:hQ9JWP[O60J![/,GY1i9mb.E*rr<3epouB"&UkGYhADOm^X9/2]9
;g)Y/Wqn!eRKZ_",V3hS3qj3M>%"F2RiML9ucFC"ck(>2,`7B9n[WeZXdOgs:-\B[KBrng=)(mo$j2e8
OMqn#iL4VOBl<P"$acM=i-X?3g?uGSf?MNBA_d=aW?[c2Gj&/nMF,.;eu).rLK'F&et"YB82m3Ga_ViV
]8`Mo?GBiu?*WF<(;VG\qoZatc3CSjmtNHML(Irr<3d46W7gn:%"h%h+h7QLIY\JmCZ]OXtu<Dq`aKn1
gaYVm#dUE7DhW<7N8'oK/*OlG!b84+11,n@[@2f.@?LRVg<]0::gN=]fQ<'Q\jqHWTJ0G4Qs\4+k6?I.
^?OX>q0O7P.QFh!mGRnG`Ffm#)B1rFX'qrUamQB,ifq>?$Lf-iful$7GnKJ-m\)U4<S!!2=uN-igHh5P
Qb8aL\"[B8s,)^7Z!4n&&M+G^&MZ0!^r5hotmir_=3el2%$GhlnH,GGSXD:7g"EmM]QD"8h]dr\aK0HS
*`jMW)VZB;"8!5f:sdb.EYJ1WtJD8KY*0Y%hmP,edkG1Q3t,r@=JLRdN@*j6/#FNZOFmB!ghJ,rJ?&ql
Ppp;VPF2>l`;2)qP1aeu!\\GW0<<5Hc6[MO;M-J`9mP,5d(c@F+3f(Wu?*8ao"gr4*Qs-n<_0Und^PF&
]!18!R9C?7PGnXE5CC,H4eE.g#bV6/Igl0\fBWS8LKAHW,nm6B<m/O-lL_Vt,PfML8?FX8S0n/D*/(qm
ilA^_+MV.FI.Dl!h(WU9hU"2ZqCd?8iGCN3JIZC]=A7hMrdWRPOQ>+*aKl&*!r^Ho$$nk=:mVXni'jVq
/UXm']>FJpV1f8,ba2YNH<p$-Nn6n,7AmbuRc<'Cq%D:m,Z6cg7*RnO!lf!)oNH=&Z!<*#$::OiE^Unh
9b&P[HPXM<F`@h-E<'BfttB8,LCm\R2>nZ>P0N6$Nr"<>S%&!%)9Siu@2C/N>);9B%03n[F>,of!$QK"
d5;eDf`&rr?^)VD+lc2)eg_]'^8N1gP;5Y2Na4Vu.86Eu442W$q&.fUpCtIbiuN&QQuO-iD3`SCX&(D,
6MZIZ"-FqX\Db#1Xnu`pIAM,Q?=\4Ulc@CO>s/J$8FHTZ#e@9uQVcFRFU6g3A-*jDt+[5F9ftH*u>ld-
`^e8G[h.b)\HAAqK"?UjYJRj]D5[!dW$4[SgN0eQe$#oO.OCE4Ae#,GbYc`4W`>IT0[u3QHQHqU(ltki
tBHTV's<!9en(i@>,g;X#O08pZ`'oeu\RF8Af1LH.S[H@F*GjU^`*c@=m>o=s$pV3fne_B6Ys]!8Djh0
rtbP#"EqO*djIp*T\k]M`)7Y94MVW56%\d=,L1-b*q.g@3*$N]I??nh,CbImHT5UMG@IT<sH=k%\7=h7
rI5[!eP/r..AHV>XX^U]fR>YPpStj%#D`Wij7,chg/-*`/W"MjRj9g97L.kipWCXrEdTQEDh=eSTSKF8
l4n*U3-J/mU]&k.ps70;XF>a689;dbNS^n`51pA,^s.-9IW4&+7^RcrZo%&B1htlF/I>n;uJi\aiKOlp
(@>3P)`2"+,MNn>qo_SfcoufA:-cQK'(+o4hA?5IWrX'jY]hL(S@6Q-Tih\g9f_MOrA#9e<+.B771p]3
Fs5Z8TgGbkF(%WR&7OY:[sB!cg*FZZMmrT<q6i-Yd\a)uZXP/O%8D2J5"bp!:$\h*nX7.*#-_[8($)fJ
u1^;js5i`m6.)rjLCddk=S1(&^aR`0%kXm()V15o;k/pFZC!H.$6Ti-\$9>h9OZo/#h0D5gnemB,:.cc
U`o(K+T7rrC&_Eh'eRS\nt7UWb\>JAD(5lC==5Y)dnmii'tnkUqIGRP'3U.*84I/qT%N/qW:8aeIuOJs
1\t:#[[rUOTrnLg:0'rTLm\kU>?W7H,+L9<_;92ipn@:`S=X7Rs9pX15<aN/pRk=)b_X>^s*VdcFcOa=
,++5HPp+\6/tQrr?j,WoZPS1]H"j7k+M7_"FU;4#!E3er)5g$;I;*WJj^Xj;%U>rrBl%_6`pQY$'Drjk
8DF1h3G[I`(.#.MGP&J!ojF`+#dScd<if-Kam:^`GO`=57\0mR&<k$9kle4Nm?Jm*q(#%mu,8j7brgeF
q#Tf,c?cUX\T$3WB)-pfGlC!"hG/rGU[K_QSaP$SQlhUZo>pKN'P)Q4#(01U[^T86GP$B8ZJ##6`@+c(
6XbpV0/I>PZ$$WidtV>"]A!=6sYr>kftiQX:=%EGM[l>*k*D=WPG%gY<O(&@,W_.`MP,I)cF;4Db0;!j
k'Yqb:hZfBiIorr@Qs_>6$TOeBn\Y,c<`p5>=oq'SB[c/p#E#>0m/%m3=%na`X8\$_RngO<`0%\>SSB`
26f9=KA]l`[!8_];CeT+=+0Ga%0.GahODf!QU,-,,]k,ut+0NS]&;2Cu+`:)+K@X3G8?59"N>i+AnV!O
Nja>2JQ1W^l&!Klrh:3DA@i*-(X.nbaAu2AqsId;A-Go)s+QP\E`Jhd2X&a5aig5M?=jj12hQ?Vn#4q`
L;NS#;Y%1_0ml4#Vmo0I97;4mOc<h]7)5i@fku2u#%A@pqTWr(Q?+e(b3"iap5=0*cEAXFCIEY%:6]:>
E;,e,J5&#>6bO$8[`ml`k4%>4A`6NuVij(:C83;ml/9LR'?^MU!X(b&p0sbcDrt^O:[S3?FIDb3L@^5>
(gQ[*kso[,WrrYeI`0ah^4?IX[Pq7)*.8\6s;_?=>?V`$mQGp&>#D'APg3X:K9cr`QA:-Pt?o#Ws).`T
E8,>0-#0'fLMkphs?DOsWEap^TNZHV_JMO1lh5/#ZX2-911qK2[D&o%fiRb7_,Jgq8;OEYqlCS+-1G`A
LQeG5f(J[Mab_=i^C:&"EP_Hk>dS`gc)@[1-/b)oV71c)/HBKd;6.o7O*.o##BK4N1;'('geAd4Yh+!5
V,'+D]]NQ)>]5ktC`^P`Gghnnr8nHG;P]nDpfnEc5m^\a@hkW`>=Q?e<BopVri0]t]8K.H8Yf61HuTaL
#569gD0)q%rEA+qbH_o\e?RbPP/l7.]0il1Zmf+E5%qaV00_?RoHdZ$'d,:n+VjHl3ubFYk:e=sl[uin
?kN\?8cM^U:8&4>GdmHc7mhC_pI3YU%L&MGS]tHZN2R.HWV"iKmT[Y(8X7Q-",/rr@g=%rOLZj3J*X)!
X\i:T`H27(Srr,S:YFP,^9aFKR.f?2_818,G^P7"`9RB[CI5c##Vag>NJ$q.lSh?ZViYD-VgKCW]^Qg\
THm220BAeAeRPQB,srd-1HVr#l">KlLo]5N+&ueC\$.Zbm6bd(EnE+HYjm5B_N;rC+2O_$!RsL-gb6Hh
D.L;s@2biq6c3KbOMa5Qqi%;*Y:!!)Yub'ECuq"V^r<id^k@fiRP_#+K;^j^3u,S7W]<(W67Qi`5dr-,
`$fLS=IGln%Q^O,1&r@2mqSmSJ.GB'Lo:Jj6gsoU<N4j25C"P=Y]RO&c&,4:ZV=P*&Z!=\a#go`"BU".
gnD(@oUhR9uldNE_JR]`iCS*SJ1iP'P^O)]r8)PRNR&f:nA0c>-:C:r<o):K(J($NC*gLIq6M5^iW??=
+;@ogp0'5DY3?1r%Za1]?Y>!6?A]plG@CYLR<gD;#8dUBS>&,hMWg-%>ghT3!]),OnAh:B!I53:9pZa4
sJkr2XF6BOeS%)JrhM,RV\ln^kk-7mCj;F#K9/1n3D"cCp<]7=M06a^=U(49tMjrrCK8X45(8IjB2Grr
@e74nsU.!$e+l^['hX!$P]>ecs/:70"#u!CZu'r8%AQ_,,XBjf\U`lk<t1!2.s14rf'^<W<%8k^J#Lrr
C-_\'+dO8O#OkAH)Z*-b>ZCL?JR:dWd;6e\C/45GA'Vp##?!rr?>#0n0Y)GME)gqB+fu]7)WfeDI4nq/
W<<6YFi7MAJ(pM]^hJrr@HcR\IlS51+BM!'TEC!5=F-Ql8rLeS&c1f33SfLX^IA/ABpibVbpb16I,PC9
:[('Mng(*CVt,1@:EHoBStI1HM[/r@94'/W/.#.dT;KSjkIb:YMPC/C:?\qN%<lr4>tN])EGb7)fG%a%
sRN19Pp1o]c9$6@'VpTetNYpTOSsI32X;rYeIr7!d^<.F$S27#G%$^6MafrFi7.Z)oU9RP4Sk#L]H$qA
OJ_W)92^^6Q/<h2hO2je_K'MPjC*n[JFBc2RcK5Jk16O4]Bi9lJu$rHM!8!2U=[i7pd$!$b,9!9.YT>W
Mfa,5?K!c(CA1&jPH*nTXq]c2Rd;)Z$bPA)0,E-iful$7GnKJ-m\)U4<S!!2=uN-iful$7GnKJ-m\)U4
<S!!2=uN-iful$7GnM4UhB+r6g)26j`knL!SaIrZCMV3:5//?L[Q#*ug`"]K_hYkNonar&jM6W\GX(QO
Z';R.me:T;f$G:RsrX*GLb\/cPgobsX&/9J1\?Ih`(L+7ef*J64A6Ot:SUrlmpd,>^==cVD4IjM%4`QM
$2DpV4f4i^5;pO"?I<dXQ)V*qkl@gW(2X9&f<Sje'u7)B0^HHCKcBm[=.%5ugj'[`[<'ZMg3+HMr?+C<
J+&#D(I=m!lf_S)ujai<6HI(>3.uqnr2g>d@@D,2AjhrPa/d8#%D)q_MKG=J<=sV0)_;7fF/I]?BLj=H
iJU.Y#(LGoZBn<_Q^[Zbi:WeuiWb!(k[OQ]LrW6[q/\]E"th'tbFj"<C+i*<$]5ir9#>8Q4%:!9m!C"9
%4CVdo8>Bk-Wk`ANZW:io@g6EqCL6J(LoM/NO+3qCGsDR%.W""65pSsB*3GEM`U:PBmJ(U?T9C!<k:/-
02d)*[`Srr<t*XhG;?T?(K5A\0J[5C@',&#c[!-3!t-VA&ktQ];"FFK>!1c[#JVTo/a-pOJRo"G(J!Y'
A[;3=$iM#Tt,=RK!9'0#-J]g4.`joD\f%YM+@mrr@1ki^^rKhsrh'lS&2\7ofFSrrC-D@K-=9@K->%T"
h#"r*91[q!s:B.%gXVs4I~>
%%EndBinary
grestore
np
grestore
gsave
.6 70.5 mo
332.7 70.5 li
332.7 61.7 li
.6 61.7 li
cp
clp
-1.31 70.51 mo
332.91 70.51 li
332.91 61.69 li
-1.31 61.69 li
cp
false sop
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 405 ]ct
[334.22 0 0 8.82002 -1.31 334.49 ]ct
snap_to_device
<<
/T 1
/W 696 
/H 19 
/M[696 0 0 -19 0 19 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/DCTDecode fl]
/O 3
>>
%%BeginBinary: 1
img
s4IA>!"M;*Ddm8XA,lT0!!<2T!(-_f!WiE)!WiE)!WrN+!sAf2"9S`/#6b;7"pkPA#mgkC#RUqL$jm=N
$4$nG&.B!X%hB3^#n.CY&J#Ka%hB3NgAjSA!s8W.!sAi3":#GE#RV(Q%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]%hB0]s1eUK#QPM>\-)gE!!3`5!tbP:&HMjL!$;1@!<iK)!<E3%
zz!<N?+"U52;#mq(?_uR1V!!30'!s/T-"U,#3!!!%J!<N?'";(eM+Yc7e'2`0C,&n;PJWZW3,=8ZO'iN
HK,VrnMJdDc"(Dn#.,pjuf.4R/32E*TU3^Z;(7Rp!@8lJ\h<``C+>%;)SAnPdkC3+K>G'A1VH@pm)L51
SAMNX0fQ'Rc(R@9kFUnsrdW2Zf&Za@-K\%&u[_Sa=2`lH0Bb0nbge^i@)g"PEEj5f=akNM0qnac;Dp%J
.Tq>1-0!$;4A!s&E'!<E3%!<E0#z!<N?+"U52;#mq(?_uR1W!!30&"9\f0#6b55!!*.F!!*-'&Hi7\0a
87V;$UNL'-]2_#S]UfTs;E?,;W6e'k242$5OmDi?e"1(`=5=-R^Dn2)[BQ3BBMq77Kd<8P2o\<E<1'=^
#<GAS,RgBkh^2F`qtRH$Y'pKS>/9Ll%"PPE_>uQ^F20U8+N\VPgAlWj8t<[C3QS\[oYq`5Ta:aN;TQe'
uq!f@\d1ioB+]k3(smlLOQ=p%J.Tq>1-F!"K,4!!3`7&Hi(6561Z[TF^5bM?#&t!f?t+TE9uN.%gX!!%
[X;rX(CL>K=JoiV7Em!!js--Inut9B;[(AOQ+`GrpKH%f*<+iN.,T30&<Fb<t=bM[tWG=qcM!\!MSClC
ZaVikL12(Z5#7podP\cJMU1[n*?Uea>3?aNQpXaPj2j52Z&WrM*i4GAi5FJ9E.!"9/A-fBV"[/\t&:O0
ng,q&WgF(p6<qIRhtXJ*gh:P1jPmnKl&OkXLajX"jUn^U2L_lM_`0TDN=&rrC`QcMmlHZ>\n'-2p=2?P
E?uqY?WDp<r_Qr*D.nDl0'brfn2TZ1mW9"M5rSF++XuOq7OEO7e8T\&J,8r.OS7O6$4o5OG<:dU_88!"
!N'Er(8u:];)g-gYRE849;MphP=CmAqE-?$`./?;^_&5<fI(O\VHcjCSDjY.beLjk%K'Lo8j"TDU07pg
Xig=8n%oVuHaH+TDH$kl1We16;8,pe1O;P/$QC5PT#DLAq8G2pM@&K":m]_R=9qA5Cnhhd+[<3IVh1rr
?Jbi>q%6K)dSIhY+-">Xs=FJ>l&2<hFm4*=<OEpe@l/p9jZc4?BQiGDe0H=j:jtSMoOWo-+Neg$1*[2c
'3qj#CnLZafL3M/pGgj,266FoC1ipe5_\:DG>99AfTqqHOJUZrO2VD!H?6Xj"(U6`Fds8<u6Q1>ENr+#
3cq=8_>&+,1ggQKo0.0>no9alUM@Lf;LQr*Oc`?=hpDfupX,n&,=pb)kmHAmKta30F-u3[ZBV!7n@&O4
j-BR[8]A&bo;BqRr]5\qR'9GMCo4Y,^)/ZL/dG8?=0+mWs,&\C4$>I_D_1ChhS5R8m:t@-eG4DSXO\Z^
UTfPB.q*!%=KAM?#0rYPnk>n2K?6O8_.ECYfWlV<4UbqH^B`YQVaa;Ep"nV1+KARFVTrTdX@rB7E.n+.
d+AY-HE=NRjZ4+'8@KpoEB"#'`?+6J"*GZ'"]hFs?K&O?@@oBZDO!qj$Z0^TuJ3<WNHCh+WscCj^`meb
-:/Rk%KCkPkP1^W?#s3lrbjI1`E,dN8uIdA+(0``\O9jVCbo!:^d7r%d`]0D[&bTB.0p!#80*B?NO&kP
gbG7.Sn-;b-g*BArjjr=7lf!!$R0!9,GjIa"E'U;r\kqbe:.gdhAE`DQW@AUj=Cn<`qYP.1"D0C9q@'>
%n;eH5aNWsr\h+8Fq`+7-u:W_!'VpfEohO4P!D!:a(:rj?<aHV_LcjAi8QM45m[!T84W&btY5V#L.pQQ
Q&-+T7],28"YunFKT$FoMGCrrC$err?6.^\R^#9DjCl^Q`J^d!c1R2j$4J)3S@>"e:u&puOa>)6;dfr=
f-:rqVWT!/dptop[N4!2#2L!%.^G+uq0'.C]<W%27Y1qB'O'n-38!2c64#_rE:tlT>3K&&LR1.\HR^Q@
I6,_I)@_$K&uurrBE%JKu>Lpk<+J>:E)Aa]-%6Rm&92J,CF8^-Cq?rr<u&rr?6,rrC?ZYE4*98+MppiH
fl/gZ8A7_I[;ff?8K"5A+nkluknWNEDhLid\t?qU:6!Fo?]?g=LgbY;aHsKp'3A2iDeODa9@\J&7!9_6
P?d!/)FlrrBf,r\]2[fff?8LqiM!nfG:88g!Q;Ho:VURud><mBYP3k;=4V"o,Gcp`EODmsaMN`gY5ZO8
8Rcno+(%jL9t`0A7L=O!7@;Bp3E6!*?ZQ`Dh>;IhIP7aP+-%qYpQ]f15\TK)YhCMt-fI,*c?f:rn)Hpd
BQ!)!PPr:&b3I%IkhFKWRoHrI=M(rr?0*?h<f:5NG%E=0WS>00][@!79D3q2b'H$1LaM+o_P12cBYU^O
Q3.a8:2grr>8"j8MP1WE6>=rr<p!)W1-G=WdDUrr<t'5Crh7&S.*K*Y$W)554LF!;c=Mrr<8<jl62faB
m;u6s#T45D18?b+:5l0#-\%I\3`3rr<3d,)h#j/ZA?qri?&!Y>bG)i'3c]5NGG?0BFL4it$eZ)n]1KrU
2iH@-dX:J&7QIL&V->[\<^$I_YaO^X`euo<644L$b`7UHd^TGZ4Tr]f5ri&+QS?i:"TtqY4PsrrBf,r\
\'K#$Llirr=DG!$V;M4c*YCZf.=drrA!7eb[G'j%1W8%u@L$N_^/M!<3&N-3!r`5I^40k?j;G$gSE(;'
Yk:iHZX=U@CF5YNTS*nYjLG+,E2%5N*U32kTqU[/U-5o&&V;Lq2d9Tl9oGpP3ru&,8`gYHsgQc<b3hiH
N49qA+2qqsl07eB:(IINYXX\)o^^N-YKiiuKh'gL[=uiDTS>`-Lk>rr>:UaFB0kg\GdZYK-R!qS[^oJ&
9\(ch_#H<E`2Crr>c[T@U)JHn"U&8cFk2m6H0U'E0gNq^m.hIQum]l`"]ZNE>+_ST,,jHrm,)qeL"4X_
d3n$p7p\`q"A(;."5fl8(!G$-gX2UR)Woa_Ytdr(5<Y8Y%6\1r.&"0:N/lfCYd6,\`TK5O@M$ZVA-@Q4
'X5p>6#1H#kNlT?b1^cKZmhlEZ>ZD#H#Ae=i2E2;e"<`SN;]MbrqVM/T&T-AHmCj@Nhu=&S+24c$;;X3
EffS>(N@-iful$7GnKJ-m\)U4<S!!2=uN-iful$7GnKJ-m\)U4<S!!2=uN-iful$7RP,/,AW5!.oq&4P
#kYL!8$1o/^46^"p?k7DI);g\ok)++WrYW`>4#:[?*sN[1f+("9U`,OB@%cWJY)n<]1eXu.V8\JFJ2(!
Xn<1/!m?=Fb\#L#:hOM*pbUa8=cmHMpY<E6H"cn:0MHg;I"#_>'ch*D00E!P%=$A,cPglF6[?rr<f6!7
/<-pX&p?)F)g>]D92Hr^D6EJ'7V^8,H=_q>%Q#!6AOF>tZQ]^D09=!%]<Yn0.cfJ$'Z5o6q5JKBj75a7
2TC[?d<]?EQN`(]OIO7"5F=>:[W:[tb4fRh,%_nV1;_fAQZ/a?Hjj5BlZ6?"PLY\J%b&%q"sR^\GCqKA
d&nY$UOCQsh%ChiNuHlWgWOZK5jd_>aLtK2iOV1&Om8lVt3tK#5gUint,-e\k.2r*<sjHmS;.?;Hi(,i
A#LrFrDdbMMgfrrC-J.aNA=.+biU*ac:"Zh[p/]O1SB:m9kYMdo%+p4)N0X8Xukp?#E5a7r=*K(AnJaL
rCI0;k;^2i#`Ph%0;1GFo>W@UdtHl"'cXh%fo2`gY4/YNPg0r^3R<AU[P>M;nuE>Mle>e\";&&+@^aa8
"4ur#rd$-91&70"f*mJ#P<err?`j5FHsGHYD_eI2Dn`$NadTkIC$tS+^lMrrDij[E5QCn99k6[/2l3j`
mTsh?+(cSn")2hja3\eV(LR(!hiGcP#%3^.inZDP8+F=/P-4=+B^(^fmkd`QnYpX%@Ef2Up[u96<KG85
Ju\aPpHJ(8bA8&=)(acFPkZ.^;XW&!+FOcCYM-Dl-h+2Hlp.\mrMsg-h([7[68O?GHu>fBn$\iU7"UC(
5+[V5-n.T.qu_fB)r'peDkocEh3_*T@a*U=o@J)H*@4gH#m,=,6e'g'4.@"#[];0+lmplSh^#r(HBOp5
A'?P.f)9W+ImL/X&XAZb?UA]h`/:T/A$=DiA!.eLnM2[C<YiP"UP^Oft)N!&G\3=+Yq<2gc@ABYPU\;S
KE)-s&jL!Tf5O:ADm&YL>K"(Pfuko]$6`WF)i=iUTRc=c=o?^Z9Kd(d(k@Z)(]>dG2V)rM'eu+h/0d[O
G9<#Q;74orlJ5e'FRuTE9uN.%gX!!%=KAM?#&t!f?t+TE9uN.>)C).5`9\YbgNj06ih,'^BlBU5OP#G5
K\2M@)9=dEI+hkHUhde=?Z),ZUXGOAkBV'Mng!!#/6170"#u!E>o#ZCSJLBa`&]kp$X8X\V8hVn*4Ddq
fQm\D.#`hkdFh]+no0-ouOArr@MffT19CVW_9cYY]H/3WAu:Yo`Ee(I?3U"Y]RmSc8[R<o<Z9J&8+SG8
Daq'dqZ#rrD6=&,Z(-q4]r=.DK8prrAZAJ,AlF>WGknVZ-X/C#AOBD>sTbQC[rmb.@g1fJML]o!eW!^M
Ef`I.QbZB"J3g@+0Vgb2<3sYP:u@52kk[@&3Z(Sc8[R0RqufW3CUsp'O$j[,:]KKDthO((Xst_+skBQi
-Zsrr@N!Vr-o,B-+ldrr?]r^[pQ(rr@M6Sa(D8ZB+R1+5-L?r:rYY!.L6#^YCu25EmUG_5De/S\P.#>(
=3Q04POS$=_Y%ajS2aJ(l:L!"+,(Ha8lCnqAID1s`l/)fMpEZsKqZ5"GOE:]ASeJ*7tkrr@LLr$c\dmR
OR<@&*TT:&b3dICK1N?gshZVf;?+lkFq[l$r=7[f6?B93(@opCCgGjU+5XoY:5,gOJ+WUY8`9a6]MP.6
k-qh!Y0f\'P"n>+TI&(UAheKceuO?i:)/^[K>F!/2EAmOr,^jU*3\lsX@3Z\9[tN>5/dWActC/qjN/'G
YXNnp1X[oK$/Q<^BY`Oq^^n70"#u!CZu&:]Wub'Mng!!#/6170"#u!CZu&:]Wub'Mng!!#/6170"#u!C
[CuX0cR#Oh:+_N3#^;.VU$)4K/8[kF2BLXtE9=$9Y9e!9]gM<*VF.fI8qMrrD5NJ)<(f3@!0)nmh\"Sn
\3)I*looO'nj\&:`"CrrDM=;p6qjagV3LSe:u&hZA_/cm\cR+7mH9n!Z8L`Q91;9B="j!'HJEq4djsm,
Q_I^.lB?nmD:VYF8b9ls\Np&DN5-./s9td<TpH@h-R/%D2fB=Jt7Y\Xne<1aubr+\``<jF>4_H2dkaC3
^G'c3``CWBSXHSG<c[rP;KOTqbXs9BF0Q\0_a\W,>L6\I+T_Dj`1DVP)EeTE9uN.%gX!!%=KAM?#&t!f
?t+TE9uN.%gX!!%=KAM?#&t!f?t+TE9uN.%gX!!%=KAM?#&t!f?t+TE9uN.%gX!!%=KAM?#&t!f?t+TE
9uN.%gX!!%=KAM?#&t!f?t+TE9uN.%gX!!%=KAM?#&t!f?t+TE9uN.%gX!!%=KAM?#&t!f?t+TE9uN.%
gX!!%=KAM?#&t!f?t+TE9uN.%gX!!%=KAM?#&t!f?t+TE9uN.%gX!!%=KAM?#&t!f?t+TE9uN.%gX!!%
=KAM?#&t!f?t+TE;n.f`~>
%%EndBinary
grestore
np
grestore
gsave
.6 77.8 mo
332.7 77.8 li
332.7 70.4 li
.6 70.4 li
cp
clp
-1.31 78.01 mo
332.91 78.01 li
332.91 70.39 li
-1.31 70.39 li
cp
false sop
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 405 ]ct
[334.22 0 0 7.62002 -1.31 326.99 ]ct
snap_to_device
<<
/T 1
/W 696 
/H 16 
/M[696 0 0 -16 0 16 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO'rJcLB&JcLB&JcN^hJ,~>

%%EndBinary
grestore
np
grestore
27.3859 47.974 mo
27.3859 46.954 li
27.291 44.721 27.725 42.93 28.1059 40.774 cv
28.4063 39.934 li
30.266 40.414 li
30.0262 41.314 li
30.0262 41.254 li
29.8461 42.214 li
29.8461 42.154 li
29.666 43.114 li
29.5461 44.074 li
29.5461 44.014 li
29.4262 45.034 li
29.4262 44.974 li
29.366 45.994 li
29.366 45.934 li
29.366 47.974 li
cp
30.9262 34.234 mo
31.2262 33.754 li
32.3391 32.001 34.4988 29.744 36.266 28.654 cv
36.6859 28.354 li
37.766 30.034 li
37.3461 30.274 li
37.4063 30.274 li
36.6859 30.754 li
36.7461 30.694 li
36.0859 31.234 li
36.1461 31.234 li
35.4859 31.774 li
35.5461 31.714 li
34.9461 32.314 li
34.9461 32.254 li
34.4063 32.914 li
34.4063 32.854 li
33.3262 34.174 li
33.3859 34.174 li
32.8461 34.894 li
32.9063 34.834 li
32.5461 35.314 li
cp
42.566 26.194 mo
42.7461 26.194 li
45.3629 25.924 48.1109 26.194 50.4859 27.394 cv
50.8461 27.574 li
50.0059 29.314 li
49.6461 29.134 li
49.7059 29.194 li
48.9262 28.894 li
48.9859 28.894 li
48.2059 28.594 li
48.266 28.654 li
47.4859 28.414 li
47.5461 28.414 li
46.766 28.234 li
46.8262 28.294 li
46.0461 28.114 li
46.1059 28.174 li
45.266 28.054 li
45.3262 28.054 li
44.4859 28.054 li
44.5461 28.054 li
43.7059 28.054 li
43.766 28.054 li
42.9859 28.174 li
43.0461 28.114 li
42.866 28.174 li
cp
55.8262 31.294 mo
56.1262 31.594 li
57.8309 33.425 59.0301 35.677 60.0262 37.954 cv
60.1461 38.314 li
58.2859 38.974 li
58.166 38.674 li
58.166 38.734 li
57.8059 37.834 li
57.866 37.894 li
57.4461 37.054 li
57.4461 37.114 li
57.0262 36.274 li
57.0859 36.334 li
56.6059 35.554 li
56.666 35.614 li
56.1859 34.834 li
56.1859 34.894 li
55.7059 34.174 li
55.166 33.514 li
55.2262 33.514 li
54.6262 32.854 li
54.6859 32.914 li
54.3859 32.614 li
cp
61.5262 44.314 mo
61.5859 44.854 li
61.7551 47.278 61.6359 49.728 61.166 52.114 cv
61.0461 52.474 li
59.1262 52.054 li
59.1859 51.694 li
59.1859 51.754 li
59.5461 49.834 li
59.4859 49.894 li
59.6059 48.874 li
59.6059 48.934 li
59.666 47.914 li
59.666 47.974 li
59.666 45.934 li
59.666 45.994 li
59.6059 44.974 li
59.6059 45.034 li
59.5461 44.494 li
cp
58.9461 58.234 mo
58.766 58.534 li
57.6199 60.676 56.1012 62.645 54.2059 64.174 cv
53.666 64.594 li
52.466 63.034 li
52.9461 62.674 li
52.8859 62.674 li
53.5461 62.134 li
53.4859 62.194 li
54.0859 61.594 li
54.0859 61.654 li
54.6859 60.994 li
54.6262 61.054 li
55.2262 60.394 li
55.166 60.394 li
55.7059 59.734 li
56.1859 59.014 li
56.1859 59.074 li
56.666 58.294 li
56.6059 58.354 li
57.0859 57.574 li
57.0262 57.634 li
57.2059 57.334 li
cp
48.0859 67.354 mo
48.0262 67.414 li
45.4492 68.005 42.6992 67.956 40.166 67.174 cv
39.6859 66.994 li
40.3461 65.134 li
40.8262 65.254 li
40.766 65.254 li
41.5461 65.494 li
41.4859 65.494 li
42.266 65.674 li
42.2059 65.614 li
43.0461 65.794 li
42.9859 65.734 li
43.766 65.854 li
43.7059 65.854 li
44.5461 65.854 li
44.4859 65.854 li
45.3262 65.854 li
45.266 65.854 li
46.1059 65.734 li
46.0461 65.794 li
46.8262 65.614 li
46.766 65.674 li
47.5461 65.494 li
47.4859 65.494 li
47.5461 65.494 li
cp
34.3461 63.754 mo
34.166 63.634 li
32.177 61.636 31.0891 60.264 29.8461 57.694 cv
29.5461 57.094 li
31.2859 56.254 li
31.5859 56.854 li
31.5859 56.794 li
32.0059 57.634 li
32.0059 57.574 li
32.4262 58.354 li
32.4262 58.294 li
32.9063 59.074 li
32.8461 59.014 li
33.3859 59.734 li
33.3262 59.734 li
34.4063 61.054 li
34.4063 60.994 li
34.9461 61.654 li
34.9461 61.594 li
35.5461 62.194 li
35.4859 62.134 li
35.666 62.254 li
cp
27.7461 51.214 mo
27.6859 51.154 li
27.566 50.074 li
27.4461 49.054 li
27.3859 48.034 li
29.366 47.914 li
29.4262 48.934 li
29.4262 48.874 li
29.5461 49.894 li
29.5461 49.834 li
29.666 50.794 li
29.666 50.854 li
false sop
0 .994 1 0 cmyk
f
gsave
32.2 20.8 mo
45.6 20.8 li
45.6 .100006 li
32.2 .100006 li
cp
clp
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: JCRAAA+TimesNewRomanPS-ItalicMT Initial
ct_T42Dict begin
-0.496 -0.305 1.332 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /JCRAAA+TimesNewRomanPS-ItalicMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
74200509a85700000124000007966670676d015abb92000008bc000005cd
676c79660000000000003f940000096868656164d6b30a0c00000e8c0000
0036686865610e310cc900000ec400000024686d74780000000000000ee8
000001606c6f63610000000000001048000013cc6d6178700f6903ff0000
2414000000206e616d65b4bc3c52000024340000106d707265705d6c7e16
000034a400000aed67646972000000000000000000000000000100000190
000500080000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff0000000000000000000000000001000000000000058e0000054c001f
054c001c037100180000ffe10000ffe80000ffe8fe4afffc056b0023fe68
ffe2033e00000095000000950000000000000000002500a8008e010b007d
00820045003200a400ca006b0070005100af003c00f001d7004700040025
00770029004000fd00160161004601370029008e0017ffca0025005bffe9
02e600020099008100f2007500d6006300c60006009a01330024003800cc
003dff67001305d8003600860095ffdb0007043400a500d8ffdcfffe0048
00a200d8013c01530380053e0057007a007c008c0117012a0138017c0026
003c007800bd00c0021009b5000c004d004e00540058006700b404010002
0005005000af01d5034300240058008b013501c0ffac002000250026002d
00410136022bffba001e002a0034003b003f00850094009800d7012e013d
033104b900170040006100b9010e0116012201bfff9c001f001f004d005c
0086008c009600aa00cb00cb011f0154022f036005a9fee8000e006f007c
007d008b00d500f1010a0157017802b803adfe3fff6affb3ffc4001f0037
003f0044004a0078007d009700a200a700b600c000c100c600d8011d0150
019701ee04740532fd81fed1fee0ff16fff1000f002d00550068006e007f
00890095009e00c200da00e400f801040108011101c2023002da030e049e
0517ff00ff8700000020002f00410057007800870088008800b900c200c5
012001280133017401d6020e020f026c027e02ab02ec038903b103e304e7
ff43ffa8ffc3ffdcffe9000700230023002600520077007d0081008f0099
00ac00ae00b500b800c800ea00f000f40135016a018b01b101b501f70214
02ad02d504fc05d805f0ff9dfffc000b00240025002c0030003000330040
004700490057006e009a00bd00c900cd00dc00fa00fa011b0139017e0187
018a018e0195019601df01f6028602cf02de039603a903b003c804010432
046a058b05e006510761fe96fe9aff4bff870013002500340038003e004a
0065006b0073007a009c00a200b200b700bf00f000f700fb010401130120
0124013b01520178017c0181018f01a001d90248026a026f02700301031d
032303270388041f04ab04d104da057a058bfe26fe59ff2e00010002000a
003b003b004700580058005f0066006b007a007a008b009900af00bc00c0
00c700cc00e900f200f500fb00fb0102010a010b01150121012701450145
015501570158015e01610168017d01a301ab01da01ee021002180222028f
029402a302d202e703710393039b03b303d303fe04ff050b05320532054b
0559058b05ab05f2065506890742076207a708ccfd2afdc8fddefe0cfe15
fe27fe53fe84febbff58ff76ff77ffa1ffa7ffadffafffc0000000000003
0094001d001f002000200027002e0048004b004c005e005f006b0071007c
008a00900091009100a700af00b300b400c400c600d100d200de00df00df
00e600e800ea00eb00f200f500f500fc010201180123013101330137015c
016201660170017a017a017a018201980199019b01b001bf01c001ca01d3
01d701d801e001e001f601f701f802120213022f023702440247024f0252
026302650270027f0298029b02a602b702ba02c502cf02d602d702e502fe
031c031d03450348035d035e03710379038103a103b703d403d503d803e1
03f803fe0404041f042104230425043a0467048304e00528054b0564056a
059f059f05c2060b066a06af06b306cb06e8070607280748075007a607b2
07ff009500af00920096000000000000000000000000017e01a80129025b
0212020301c302b4019301cd02b204ed020e0159017a0300022d042c00c8
004d00e602890325013e0378011b00f1018d00490203007c000e029d0247
0024000000000052004400330038005405d3041501a70000028601680050
00cf0002004b0024008800ba0025ffd800110091ff6b00b5011700260065
ff9900490080014b01c000f40167027102ea04fc0310017c01e103d90155
01e601ee0434019606cb005c022b0099003d009f00160039002700de0079
0120022e005a00990388009400210019002a046c05e8000001f203b200aa
0296028902b4ffc9020000ec0005005a0447010004e00000052a001f01eb
00ae016800ca02d3028901b5040601a1014f014b011c0308005e00c70024
029d006503750104028002f304d800d90239025a032c01f2043103030050
02e50283005901eb010800ac019602f8012100950180004400e501eb02e5
007400f301ff02fd038f026801c801c70116022b0142033000fe02e10162
0200002400ee05170108023700660006010201e602aa0366019b00d305c2
03dc044d03b6000401be013702fc03200244014d0338ffed002506f8030d
fed5ff43004402ffff92040bfdef0155017100d9ffc4032d0461044afbb5
fbcf02170192036d0558fff2fe7d0583023e006605e9073d007902430025
00cf00fd00af002a01ef021a0026001f0025003a000001170490fbfb0251
001d02f001f50078018f005f00240044005400bf00af006701a800260005
0006003f009800fa02ab00c2004d0375004a00b600c401bf017c006f0013
0263000c006801520002012e0104001f001f009a000000f1046900790080
005000bd056b00ab0080001e05a5fe4000ce006e0056004800db018b00b3
00480239045800530082008200220000404154403f3e3d3c3b3a39383735
34333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a191817
161514131211100f0e0d0c0b0a090807060504030201002c4523466020b0
2660b004262348482d2c452346236120b02661b004262348482d2c452346
60b0206120b04660b004262348482d2c4523462361b0206020b02661b020
61b004262348482d2c45234660b0406120b06660b004262348482d2c4523
462361b0406020b02661b04061b004262348482d2c0110203c003c2d2c20
452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44
235920b09051582320b00d44235921212d2c20204518684420b001602045
b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d
2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a
234445b01923442d2c2045b00325456164b050515845441b2121592d2cb0
0143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743
650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c
58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb0172344
2d2cb01243588745b0112bb0172344b0177ae41b038a45186920b0172344
8a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c
2d2cb0022546608a46b040618c482d2c01182f2d2c20b0032545b0192344
45b01a23444565234520b00325606a20b009234223688a6a606120b01a8a
b000527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb1
14008a5279b31940201945208a54582321b03f1b235961442d2cb1101143
23430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d43234365
0b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b21
21592d2c0120b003252349b04060b0206320b000525823b002253823b002
256538008a63381b212121212159012d2c4bb06451584569b00943608a10
3a1b212121592d2c01b005251023208af500b0016023edec2d2c01b00525
1023208af500b0016123edec2d2c01b0062510f500edec2d2c20b0016001
10203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b007
43b006430b2d2c3eb02a2a2d2c352d2c76b802ee23701020b802ee4520b0
005058b00161593a2f182d2c21210c6423648bb84000622d2c21b0805158
0c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c642364
8bb81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d
2cb4000100000015b00826b00826b00826b008260f10161345683ab00116
2d2cb4000100000015b00826b00826b00826b008260f1016134568653ab0
01162d2c4b53234b515a5820458a60441b2121592d2c4b545820458a6044
1b2121592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2c
b0134358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b
2121592d2cb012435c580cb00425b00425060c6423646164b807085158b0
0425b00425012046b01060482046b0106048590a21211b2121592d2cb012
435c580cb00425b00425060c6423646164b807085158b00425b004250120
46b8fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58
b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b51
5ab012435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab0
12435c5a58381b2121592d2c462346608a8a462320468a608a61b8ff8062
232010238ab903b003b08a70456020b0005058b00161b8ffba8b1bb0468c
59b0106068013a2d2cb1020042b123018851b1400188535a58b910000020
885458b202010243604259b12401885158b920000040885458b202020243
604259b12401885458b2022002436042004b014b5258b202080243604259
1bb940000080885458b202040243604259b94000008063b80100885458b2
02080243604259b94000010063b80200885458b202100243604259595959
2d0000000001000000050ccdb1b0afba5f0f3cf50819080000000000a31f
b8bd00000000c5b1f9c8fc05fd8c0aaa0830000200090001000000000000
000100000721fe4500570a3afc05fa500aaa001800070000000000000000
0000000000580639011c0639011c0639011c0639011c0639011c0639011c
0639011c0639011c0639011c0639011c0639011c0639011c0639011c0639
011c0639011c0639011c0639011c0639011c0639011c0639011c0400007d
040000200400004404000044040000440400004404000044040000440400
004404000044040000440400004404000044040000440400004404000044
040000440400004404000044040000440400004404000044040000440400
004404000044040000440400004404000044040000440400004404000044
040000440400004404e3ffd204e3ffd204e3ffd204e3ffd204e3010004e3
010004e3010004e3010004e3010004e3010004e3010004e3010004e30100
04e3010004e3010004e3010004e3010004e3010004e3010004e3010004e3
010004e3010004e3010004e3010004e3010004e3010004e3010004e30100
04e3010004e3010004e3010004e3010004e3010004e30100023900540000
003400340034003400340034003400340034003400340034003400340034
0034003400340034003400ca015602000200020002000200020002000200
020002000200020002000200020002000200020002000200020002000200
02000200020002000200020002000200031503150315031503fe03fe03fe
03fe03fe03fe03fe03fe03fe03fe03fe03fe03fe03fe03fe03fe03fe03fe
03fe03fe03fe03fe03fe03fe03fe03fe03fe03fe03fe03fe04b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b404b404b4
04b404b404b404b404b404b404b404b404b404b404b404b404b400010000
09e500f2003c0082000500020010002f0055000004d90258000400020000
005303ea0000000300000000006a00000000000300000001001e006a0000
000300000002000c00880000000300000003007000940000000300000004
002c00a60000000300000005001800d40000000300000006003001040000
00030000000700ce013400000003000000080030000e0000000300000009
00860202000000030000000d029a02880001000000000000003505220001
000000000001000f05570001000000000002000605660001000000000003
0038056c0001000000000004001605750001000000000005000c058c0001
000000000006001805a40001000000000007006705bc0001000000000008
00180529000100000000000900430623000100000000000d014d06660003
000104030002000e07b30003000104030004002e07c10003000104050002
000e07ef0003000104050004002e07fd0003000104060002000c082b0003
000104060004002c08370003000104070002000c08630003000104070004
002c086f0003000104080002000c089b0003000104080004002c08a70003
000104090000006a00000003000104090001001e006a0003000104090002
000c00880003000104090003007008d30003000104090004002c00a60003
000104090005001800d40003000104090006003001040003000104090007
00ce013400030001040900080030000e0003000104090009008602020003
00010409000d029a028800030001040a0002000e094300030001040a0004
002e095100030001040b00020014097f00030001040b0004003409930003
0001040c0002001009c700030001040c0004003009d700030001040e0002
00080a0700030001040e000400280a0f0003000104100002000e0a370003
000104100004002e0a450003000104130002000e0a730003000104130004
002e0a810003000104140002000c08630003000104140004002c086f0003
000104150002000e0aaf0003000104150004002e0abd0003000104160002
000e0aeb0003000104160004002e0af90003000104190002000c0b270003
000104190004002c0b3300030001041b0002000e0b5f00030001041b0004
002e0b6d00030001041d0002000c086300030001041d0004002c086f0003
0001041f0002000c0b9b00030001041f0004002c0ba70003000104240002
000e0bd30003000104240004002e0be100030001042a0002000e0c0f0003
0001042a0004002e0c1d00030001042d0002000c0c4b00030001042d0004
002c0c5700030001080a0002000e094300030001080a0004002e09510003
000108160002000e0aeb0003000108160004002e0af9000300010c0a0002
000e0943000300010c0a0004002e0951000300010c0c0002001009c70003
00010c0c0004003009d700a9002000320030003000380020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00540069
006d006500730020004e0065007700200052006f006d0061006e00490074
0061006c00690063004d006f006e006f0074007900700065003a00540069
006d006500730020004e0065007700200052006f006d0061006e00200049
00740061006c00690063003a00560065007200730069006f006e00200035
002e0030003500200028004d006900630072006f0073006f006600740029
00540069006d00650073004e006500770052006f006d0061006e00500053
002d004900740061006c00690063004d005400540069006d006500730020
004e0065007700200052006f006d0061006e002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e00200069006e00200074006800650020
0055006e0069007400650064002000530074006100740065007300200061
006e0064002f006f00720020006f007400680065007200200063006f0075
006e00740072006900650073002e004d006f006e006f0074007900700065
00200054007900700065002000440072006100770069006e00670020004f
006600660069006300650020002d0020005300740061006e006c00650079
0020004d006f007200690073006f006e002c00200056006900630074006f
00720020004c0061007200640065006e0074002000310039003300320059
006f00750020006d00610079002000750073006500200074006800690073
00200066006f006e00740020006100730020007000650072006d00690074
0074006500640020006200790020007400680065002000450055004c0041
00200066006f00720020007400680065002000700072006f006400750063
007400200069006e00200077006800690063006800200074006800690073
00200066006f006e007400200069007300200069006e0063006c00750064
0065006400200074006f00200064006900730070006c0061007900200061
006e00640020007000720069006e007400200063006f006e00740065006e
0074002e002000200059006f00750020006d006100790020006f006e006c
0079002000280069002900200065006d0062006500640020007400680069
007300200066006f006e007400200069006e00200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
002000620079002000740068006500200065006d00620065006400640069
006e00670020007200650073007400720069006300740069006f006e0073
00200069006e0063006c007500640065006400200069006e002000740068
0069007300200066006f006e0074003b00200061006e0064002000280069
00690029002000740065006d0070006f0072006100720069006c00790020
0064006f0077006e006c006f006100640020007400680069007300200066
006f006e007400200074006f002000610020007000720069006e00740065
00720020006f00720020006f00740068006500720020006f007500740070
00750074002000640065007600690063006500200074006f002000680065
006c00700020007000720069006e007400200063006f006e00740065006e
0074002ea9203230303820546865204d6f6e6f7479706520436f72706f72
6174696f6e2e20416c6c205269676874732052657365727665642e54696d
6573204e657720526f6d616e4974616c69634d6f6e6f747970653a54696d
6573204e657720526f6d616e204974616c69633a56657273696f6e20352e
303520284d6963726f736f66742954696d65734e6577526f6d616e50532d
4974616c69634d5454696d6573204e657720526f6d616e20697320612074
726164656d61726b206f6620546865204d6f6e6f7479706520436f72706f
726174696f6e20696e2074686520556e697465642053746174657320616e
642f6f72206f7468657220636f756e74726965732e4d6f6e6f7479706520
547970652044726177696e67204f6666696365202d205374616e6c657920
4d6f7269736f6e2c20566963746f72204c617264656e742031393332596f
75206d617920757365207468697320666f6e74206173207065726d697474
6564206279207468652045554c4120666f72207468652070726f64756374
20696e207768696368207468697320666f6e7420697320696e636c756465
6420746f20646973706c617920616e64207072696e7420636f6e74656e74
2e2020596f75206d6179206f6e6c792028692920656d6265642074686973
20666f6e7420696e20636f6e74656e74206173207065726d697474656420
62792074686520656d62656464696e67207265737472696374696f6e7320
696e636c7564656420696e207468697320666f6e743b20616e6420286969
292074656d706f726172696c7920646f776e6c6f6164207468697320666f
6e7420746f2061207072696e746572206f72206f74686572206f75747075
742064657669636520746f2068656c70207072696e7420636f6e74656e74
2e006300750072007300690076006100540069006d006500730020004e00
65007700200052006f006d0061006e002000630075007200730069007600
61006b00750072007a00ed0076006100540069006d006500730020004e00
65007700200052006f006d0061006e0020006b00750072007a00ed007600
61006b0075007200730069007600540069006d006500730020004e006500
7700200052006f006d0061006e0020006b00750072007300690076004b00
75007200730069007600540069006d006500730020004e00650077002000
52006f006d0061006e0020004b0075007200730069007603a003bb03ac03
b303b903b100540069006d006500730020004e0065007700200052006f00
6d0061006e002003a003bb03ac03b303b903b1004d006f006e006f007400
7900700065003a00540069006d006500730020004e006500770020005200
6f006d0061006e0020004900740061006c00690063003a00560065007200
730069006f006e00200033002e0031003300200028004d00690063007200
6f0073006f00660074002900430075007200730069007600610054006900
6d006500730020004e0065007700200052006f006d0061006e0020004300
7500720073006900760061004b00750072007300690076006f0069007400
7500540069006d006500730020004e0065007700200052006f006d006100
6e0020004b00750072007300690076006f00690074007500490074006100
6c006900710075006500540069006d006500730020004e00650077002000
52006f006d0061006e0020004900740061006c0069007100750065004401
51006c007400540069006d006500730020004e0065007700200052006f00
6d0061006e002000440151006c00740043006f0072007300690076006f00
540069006d006500730020004e0065007700200052006f006d0061006e00
200043006f0072007300690076006f004300750072007300690065006600
540069006d006500730020004e0065007700200052006f006d0061006e00
200043007500720073006900650066006b00750072007300790077006100
540069006d006500730020004e0065007700200052006f006d0061006e00
20006b0075007200730079007700610049007400e1006c00690063006f00
540069006d006500730020004e0065007700200052006f006d0061006e00
200049007400e1006c00690063006f041a04430440044104380432005400
69006d006500730020004e0065007700200052006f006d0061006e002004
1a04430440044104380432004b00750072007a00ed007600610054006900
6d006500730020004e0065007700200052006f006d0061006e0020004b00
750072007a00ed00760061013000740061006c0069006b00540069006d00
6500730020004e0065007700200052006f006d0061006e00200130007400
61006c0069006b0050006f016100650076006e006f00540069006d006500
730020004e0065007700200052006f006d0061006e00200050006f016100
650076006e006f006e00670068006900ea006e006700540069006d006500
730020004e0065007700200052006f006d0061006e0020006e0067006800
6900ea006e006700450074007a0061006e006100540069006d0065007300
20004e0065007700200052006f006d0061006e002000450074007a006100
6e0061000000b15400410c03bc003003bc004003bc00a003bc00b003bc00
05ffc003bbb345453240b803bbb32b2e3240b803bbb2282932b9ffc003bb
b31a263280411303bb009f03bb00af03bb00cf03bb0004000003bb001f03
bb000203bb02af0027001fffc003b9b2161b32b9ffc003b8b2424232b9ff
c003b8b2363832b9ffc003b8b32a2d32df410a03b800ef03b8000203b803
b90028001fffc003b9b3282e32f0410f03b90001000003b7000103b70003
0800001f03be03bf002b001fffc003bfb2242a32b903b60381b23a1f0f41
1703b3001003b2002003b2005003b2007003b200e003b2000600cf03b300
df03b300ef03b300ff03b30004001203a8b2e2891fbe039f016b019a001f
039800930801400c1f7f047f05027f027f03025fbb02b00001ffc00117b2
196632b8ffc0b3651a6632b9ff800173b2196632bd038401170800001fff
c002afb2313340b802afb22e3340b802afb328293240b802afb326273240
b802afb321253240b802afb31c203240b802afb2233340b802afb21933a0
bc02af00b002af00e002afb5034003212932b8fff2b33a263d32bc038203
820382003a0800b51f40255c331eb80381b25c6432b8ffeeb3252e3314b8
0381b32b2e3269be03810001008a03810001000e0381b32b2f3210b80381
b3515b320cb80381b34e513222b80381b3474d320eb80381b246330ab803
81400926473212254358320cb80381b2323310b80381b22a3312b80381b3
373d3212bb0381003d0033fff44015253d331825355b3210252634320625
2a330c252e33b8fffe4024252d330c3a2f33329925aa25ba25c925040525
36330c25323832193a293a383a03182517b80381b42825382504bc038103
8103810025080040101f0f1f2b2e32691f781f020b1f303332b8fff1b31f
263d32bc038003800380001f080040151f375f07af07025f06af060222ac
2b2e3209ac2f33b8ffdc400aac1f223222232b52320eb8037fb229330eb8
037fb2223314b8037fb21e2032b8ffe7b71e2b33321e2b2f32b9ffc0037f
b64c4f3232262c33410affee037f00390033fff8037f002b0033ffea037f
b23a3320b8037fb33f46321eb8037fb32f3a3212b8037fb22e331eb8037f
b32a2d320eb8037fb2263304b8037fb3494a3404b8037fb2463304b8037f
b2213318b8037f400c1d3322263032322226333832b8fff8400a262b2f32
09261b21328abe037f0001037f037f037f00260800402e1f371f062f063f
06039f02af02bf02cf02049f03af03bf03cf03046f037f038f03031f032f
033f034f035f03050f413502ed0001005f02ed009f02ed00df02ed000300
2f02ed003f02ed006f02ed000300af02af0001004f02af009f02af000200
2f02af003f02af0002003f02b00001004f02af005f02af0002002f02af00
3f02af0002007003b2000103b203b202ed02ed02b002b002af02af401a37
01003001400102010100090102000800171700000012110840410b027b02
230034000d013d0034000d01370034000d011b401a340d8f340d84340d68
340d59340d54340d48340d2c340d28340d411002350020000d021b002000
0d01fc0020000d01c30020000d01500020000d012c401a200df0200dbe20
0d94200d79200d6a200d61200d5f200d44200d410d013e0138000d003d01
38000d00300138000d001d0138000d01fdb40f4d0f0009bf01fd004d000d
03b1037f0015001f0215b226341fb80214b2263f1fb80208b21ebb1f4119
0206001e0801001f0205001f02ab001f0204001f02ab001f0203001f0401
001f02010031019a001f01fb00230156001f01aeb2262a1fb801adb2262a
1fb801abb226341f411501a8002602ab001f01a5001e0125001f01a400ab
02ab001f01a2003102ab001f01a1003102ab001f019db2236c1fb8019cb2
236c1f4109019b00230401001f019a0033019a001f0176b2262e1fb8016c
b231721f4111016b0023019a001f016800240401001f014500260801001f
013f00230401001f0123b21e9e1fbc0121001e0201001f0100b426791ffd
1fb80125b21ffa33b80801b21ff924b802abb21fe826b80101b21fe51fb8
019ab21fe431b80101400b1fe331e41fe231891fd226b80201b61fd026cd
1fcd25b80401b21fb731b8019ab21fae26b80801b21fac1eb80401400b1f
9e315e1f97269e1f9333b80801b21f8a24b8019ab21f831fb802ab40131f
82236c1f7523e41f7026cd1f6423721f5e25b80401b21f5d23b802abb21f
55e6b80401b21f5324b80201b21f4f33b802abb21f4e26b8040140131f47
31671f4626ab1f4331cd1f3e235e1f3a1fb80401b61f3924e41f3723b808
01b21f2e23b80401b21f2a1eb80125400b1f2923ab1f2731ab1f5537bc01
c60007018a0007012b402e077f077107690766074b074007380736072d07
220721071408120810080e080c080a080808060804080208000814b8ffe0
402b00000100140610000001000604000001000410000001001002000001
000200000001000002010802004a00b013034b024b5342b0372b4bb807ff
52b0382b4bb009505b58b101018e59014bb0c063004b6220b0f65323b801
0a515ab005234201b0124b004b544218b0382bb00288b801005458b801ff
b101018e851bb0124358b900010140858d1bb900010159858d5959001676
3f183f123e113946443e113946443e113946443e113946443e1139466044
3e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d594bb04753205c58
b9027d027b4544b9027c027b45445958b90146027d455258b9027d014644
59594bb04753205c58b9001e027c4544b90026027c45445958b9017f001e
455258b9001e017f4459594bb05e53205c58b9001f027d4544b90025027d
45445958b901a8001f455258b9001f01a84459594bb8010153205c58b1ab
1f4544b11f1f45445958b9047000ab455258b900ab04704459594bb80125
53205c58b1e61f4544b11f1f45445958b9051000e6455258b900e6051044
59594bb01753205c58b124244544b1312445445958b12224455258b12422
4459594bb05153205c58b124244544b1232445445958b17d24455258b124
7d4459594bb06e53205c58b124244544b1332445445958b1aa24455258b1
24aa4459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b45695342014b5058b1
08004259435c58b1080042591610703eb0124358b911b53d801bba011c03
d9000b2b59b00a2342b00b2342003f3f182b103c012f5d060cb0062342b0
072342b0124358b93b21187e1bba040001a8000b2b59b00c2342b00d2342
b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b01243
58b9187e3b211bba01a80400000b2b59b0102342b0112342002b4bb02e53
58b8016b45b02a60b8016b23445900184569444569441845694445694473
73737375757573737475757575752b4bb026534bb03d515a58b1262645b0
196044592b45186944742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b004bb02a534bb03f515a58b1070745b04060445973732b
2b451869442b2b752b2b4518694475752b2b752b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b74752b2b2b2b2b451869442b002b732b2b2b2b2b2b2b2b
2b012b2b2b007373732b2b2b01435c58b8ffdeb31e1c3318b8037fb52b33
18262b33b9fff00381b112332b2b2b2b590173742b2b2b002b73752b2b73
2b2b2b2b2b73752b2b2b2b732b00000000>
[2409 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 1024 53 <0002ffd1000004a2054c00260031018a407d081609273c2a48004c2a4a2b
5a006a007b00771f792d96069a2daa2ab917bf2abf2e11a606b40702061c
161c892d0303273131040c130d1d0c0b040a1d0b1a14191d1a2622251d26
3104041e1314141313142122221e0001140000012101292f2e1a292e0101
001a02260c0c0b0b000822210100042c1332281413102cba037f001effc0
b3282d341eb8ffc0b31c1e341eb8ffc0b31318341eb80117b67033013331
d404ba030100140213b51340120b3f13b8ff80b326173f13b8ff80400928
183f13400f193e13b8ffc0b30b123e13b8ff80b72d173f1341183913b8ff
c0b612391340113913b8ffc0b3282d3413b8ffc0b31c1e3413b8ffc0b613
183480130113b80173b63209131713320ab80173b1c4182b2b103c2b2b4e
10f45d2b2b2b2b2b2b2b2b2b2b2b2b014de4fde44e105df62b2b2b4de92b
103c2b10c001121739003f3c103c103c3f12392fed10ed111239870e2e2b
0e7d10c4870e2e182b057d10c4180010ed0110c00010ed0110c00010ed01
10c00010ed0110c087103c7dc43130005d015d5d21030627030615141716
170721373637363736371336353426073721321615140607131616170701
163332363534262322070353d94c5075171d166209fdf30b4a1a29132023
ed184b460c01badec4c9af8430606b0bfd584032acc87d7d202c02930110
fe6650372a1812082525030c111d2f770333522d2e400125a88983d91dfe
739258062502db09bf8e6f760800>JCRAAA+TimesNewRomanPS-ItalicMT AddT42Char 
1 0 0 <0002011c0000051c050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121011c04
00fc2003c0fc400500fb002004c0>JCRAAA+TimesNewRomanPS-ItalicMT AddT42Char 
JCRAAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g53 53 def
end
JCRAAA+TimesNewRomanPS-ItalicMT /Encoding get
dup 82 /g53 put
pop
end
%ADOEndSubsetFont
/LTSFAD+TimesNewRomanPS-ItalicMT /JCRAAA+TimesNewRomanPS-ItalicMT findfont ct_VMDictPut/LTSFAD+TimesNewRomanPS-ItalicMT*1 [82{/.notdef}rp /g53 173{/.notdef}rp]LTSFAD+TimesNewRomanPS-ItalicMT nfLTSFAD+TimesNewRomanPS-ItalicMT*1 [21.06 0 0 -21.06 0 0 ]msf32.726 16.2339 mo(R)shgrestore
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: JCRAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LTSFAD+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 104 20 <0001007d000003570568001b00ca401a071a015602670276027403bd0d05
080008101701170f04080f09b80138b308070106410b01380007001a01a3
0010020e002800190138001a01fd401300100f0103000828100f0fe60100
1401010019ba01f4001a030d40091b1b000508070c0001bb03280010001a
020bb31f0f010fb80327400b10011c2800100117011c0aba022801e30018
2b2b103c2b2b3c2b10c0012bf65de43cf53c003f3c3f3c10f4ed870e2e2b
7d10c42b11121739180010f5ed2bfc01f50010ed0110c00010ed0110c031
30015d5d0071010106151416170721373637363736371336373635342623
220727250357febe1c335e0afdfd0e521a2a152122e815020326211a370d
01510568fb9f632c2527072525020b121e2e770325490b141323280c245e
>LTSFAD+TimesNewRomanPS-ItalicMT AddT42Char 
LTSFAD+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g20 20 def
end
LTSFAD+TimesNewRomanPS-ItalicMT /Encoding get
dup 49 /g20 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LTSFAD+TimesNewRomanPS-ItalicMT*1 [49{/.notdef}rp /g20 32{/.notdef}rp /g53 173{/.notdef}rp]LTSFAD+TimesNewRomanPS-ItalicMT nfLTSFAD+TimesNewRomanPS-ItalicMT*1 [12.3 0 0 -12.3 0 0 ]msf45.566 16.2339 mo(1)shgsave
150 21.3 mo
163.5 21.3 li
163.5 .100006 li
150 .100006 li
cp
clp
LTSFAD+TimesNewRomanPS-ItalicMT*1 [21.06 0 0 -21.06 0 0 ]msf150.566 16.6539 mo(R)shgrestore
%ADOBeginSubsetFont: JCRAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LTSFAD+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 404 21 <00010020000003c00568001d00b540218f08860b9c08960aac08ab0cbf08
ba0cce08ce180aef03ea04eb16ef17040b0c1dbd01a3001900190177001c
013840151d031718041605021514130312060317041604010bb80202400c
09ab0f051918e60000010c0cbf0217000201f7001e00060121001d0202b2
121a1fba01f601ef00182b4e10f64de4ed10f6e4003f3c10fd3c3ffde412
173901111217391217392eedec0010fd0110c9b1060243545840090f030b
041f031b0404005d593130005d015d212135001336353426232207273636
33321615140706070601213236373302c3fd5d0204a64d80668d5b2333c4
7281b01f3081c4feb90154526a17282501c40101778368838710818fb17e
584b7591defedf443900>LTSFAD+TimesNewRomanPS-ItalicMT AddT42Char 
LTSFAD+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g21 21 def
end
LTSFAD+TimesNewRomanPS-ItalicMT /Encoding get
dup 50 /g21 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LTSFAD+TimesNewRomanPS-ItalicMT*1 [49{/.notdef}rp /g20 /g21 31{/.notdef}rp /g53 173{/.notdef}rp]LTSFAD+TimesNewRomanPS-ItalicMT nfLTSFAD+TimesNewRomanPS-ItalicMT*1 [12.3 0 0 -12.3 0 0 ]msf163.406 16.6539 mo(2)shgsave
9.7461 400.954 mo
437.066 400.954 li
437.066 150.634 li
9.7461 150.634 li
cp
clp
9.69 401.01 mo
437.11 401.01 li
437.11 150.59 li
9.69 150.59 li
cp
/2 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 405 ]ct
[427.42 0 0 250.42 9.69 3.99023 ]ct
snap_to_device
<<
/T 1
/W 1108 
/H 649 
/M[1108 0 0 -649 0 649 ]
/BC 4 
/D[0 15 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
Je<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SH]b,i.
Je<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe>[.Je<SH
Je<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SH]b,i.Je<SH
Je<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe>[.Je<SHJe<SH
Je<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe<SH]b,i.Je<SHJe<SH
Je<SHJe<kP!tYG4!W<U^&V:UH&V:VM&HEC@!!!&%&V:UH&V:Ut&c2R_&V:UH&V:UH&I/mZ!!*ZD!!%lg
Je<SHJe?ECrrE!0!<</2&V:UH&V:V.&a0f-!!3$1!<<.q&V:UH&V:V%&HMk4d1LsBJe<SHLCjY#!!*ZD
Je<SHJe<SHfFe,`XV$-sJe<SHX:bF3!!1gdJe<SHJe<SHr=T#/!!.rhJe<SHJe?<@r;a>>Je<SHJe>[.
it2G+!!*ZD&>fGZ!.k3&!8RY-&Hi(6&J5T(&]kUb!P8s(&HEB9&c<4@!M'f&&FC(6&HEBp&H`RE&J5!S
S.P`%kn1<8!"dHgc4L$W[Lq^8!"bY4!"dcp":tPF&J22Zlk'3uSIki5r=P\7!!2-m\e+oRaq<)7!"dcp
":tPF&J4XJ!>6RB&\\hW!QG`(&HEBD&b-G5!M'f&&GQj6&HEC"&HWOE!W<T5&-*:S&GHb<&gAKu&HDk(
&ZQEC&D@`6&HDjJ&`"$!&>p-6&HEC!&cVk0&Hi(7&J5TK&HWRh+it>T&HDj,&c3.?&=a=4!UgW(&HEBm
&]bOa&GHe#&IK'L!>,nT!!*ZD&GHb<&gAO+&bck;!M'f&&FpF6&HDjb&]G=^&AJh6&HEBu&c2S-&HEC:
&HWRh,2j-U&HDjD&`XH'&>9^6&HDj&&HEC0&[2iI&D[ou&H)S/!WEZ2&GHb<&gAO!&HDjr&[`2N&C1s6
&HDj?&a0f,&=a=4&DRj"&-)\2r=K#@pCRK?+sJ2F&aU)0!M'f&&H*36&HDjm&\8PS&BYU6&HEBl&HEC:
&H`Xi+sH=cJe?WI!"c4DJe=gk!"e$"p(799pCRB<rZ[jEJe<SHJe@\g!"dWl!"el:!tldj,0CLL&X<q.
!UgVP&]bOa&GHdn&HEC:&Hi^j&gAO-&bck;!K@\C&V:VO&HEBl&HEC:&HWRh&c*[O')NjS&L&Fi&V:UH
&XO(0&FC(6&HEBl&HEC:&HWRh&aLX<&[`2N&C1r?&V:Sp&C_9l&GHb=&g@o"k9ARkJe<SHJe?HD!"dWl
!"el:!>6UU&I/p\&Kqc2&J=g_![/a3p*,J.Je@Mb!!/8qV%E\=h\#Po!"el:!>6UF&HWRW'(7$j&HDk(
&V:UH&V:Vg&HEBl&HEC:&HNLgkn*n.i?GKM!$Ti(Je>0u!"dZma:SC`pCZ6o!"el:!>6U:&HEHk,/tf,
+jLZ"&FpEb&V:VO&HEBl&HEC:&HNLgi"6#&&JCNVlk+g]Je>4!!"dWl!"el:!>6U0&P3TZ+qZ"C&J?92
&L&D2+sJ0C+s@OB+qYG3+VGtC&L&A2+sIUC+VGtB&L&A2+s@OB&J?92&L%f"+s@RC&L&DB&g@o"+sIU3
(a9P9+qYG2&L&D2&g7i2+qZ"B&gAM3+sNKgc4L$W[Ln*'!"dWl!"el:!>6Ti&aU)0!R_P\&gGF0Je<SH
dh)Qke.DZlpCRE=,3oi$&HNLgpCVuhN"H%$p^s>7!"e$"p(799pCRE=,+9,$&HNLgc4L$fg(AoKJe@\g
!"dWl!"el:!>6Tt&[;oK&gGg;Je<SHa:SC`pCZ6o!"el:!>6T^&]YIa&gG%%Wt>=4fb&fJh@T`!e.DZl
pCRE=,2a'T&HDj[&HNLglk+g]Je>4!!"dWl!"el:!>6T;&aBr/&gEeWJe@2Y!"bY4!"dWl!"el:!>6Ti
&\J\V&gGU5!"f)@Je<SHdh)Qke.DZlpCRE=,3oi$&HNLgpCVuhJe=gk!"e$"p(799pCRE=,+9,$&HNLg
V@g]X!!0nJJe@\g!"dWl!"el:!>6Tt&`F<%!R_P\&gGg;Je<SHa:SC`pCZ6o!"el:!>6T^&]YIa&gG%%
Je>s6!"cmWh@T`!e.DZlpCRE=,2a'$&HNLglk/7i!"bh9Je>4!!"dWl!"el:!>6T;&aBr/&gEeWJe<SH
!"dWl!"el:!>6Ti&\J\V&gGF0TFh/)j:QtUdh)Qke.DZlpCRE=,3oiT&HDj[&HNLgpCVuhJe=gk!"e$"
p(799pCRE=,+9,$&HNLgV@eClh%9VuV\/V7!"dWl!"el:!>6Tt&[;oK&gGg;q[if>M%P=Oa:SC`pCZ6o
!"el:!>6T^&]YIa&gG%%Je<SHh@T`!e.DZlpCRE=,2a'$&HNLglk+g]r"/o0L_6j'!"dWl!"el:!>6TT
&HDjr&aBr/&gEeWJe<SH!"dWl!"el:!>6Ti&\J\V&gGF0Je>R+!"d9bdh)Qke.DZlpCRE=,3oi$&HNLg
pCZ$i!"c4DJe=gk!"e$"p(799pCRE=,+9,$&HNLgV@eClJe@\g!"dWl!"el:!>6Tt&[;oK&gGg;Pn<us
mh(-`a:SC`pCZ6o!"el:!>6T^&bck;!R_P\&gG%%Je<SHh@T`!e.DZlpCRE=,2a'$&HNLglk+g]QOs3/
m1HQ7!"dWl!"el:!>6T;&aBr/&gGU5!"dHgJe<SH!"dWl!"el:!>6Ti&\J\V&gGF0Je<SHdh)Qke.DZl
pCRE=,3oi$&HNLgpCVuhnIYa%P7aW'!"e$"p(799pCRE=,,c(R!V?u]&HNLgV@eClJe@\g!"dWl!"el:
!>6Tt&[;oK&gGg;Je>0u!"dZma:SC`pCZ6o!"el:!>6T^&]YIa&gGU5!"e]5Je<SHh@T`!e.DZlpCRE=
,2a'$&HNLglk+g]Je>4!!"dWl!"el:!>6T;&aBr/&gEeWc4L$W[Ln*'!"dWl!"el:!>6Ti&aU)0!R_P\
&gGF0Je<SHdh)Qke.DZlpCRE=,3oi$&HNLgpCVuhN"H%$p^s>7!"e$"p(799pCRE=,+9,$&HNLgc4L$f
g(AoKJe@\g!"dWl!"el:!>6Tt&[;oK&gGg;Je<SHa:SC`pCZ6o!"el:!>6T^&]YIa&gG%%Wt>=4fb&fJ
h@T`!e.DZlpCRE=,2a'T&HDj[&HNLglk+g]Je>4!!"dWl!"el:!>6T;&aBr/&gEeWJe@2Y!"bY4!"dWl
!"el:!>6Ti&\J\V&gGU5!"f)@Je<SHdh)Qke.DZlpCRE=,3oi$&HNLgpCVuhJe=gk!"e$"p(799pCRE=
,+9,$&HNLgV@g]X!!0nJJe@\g!"dWl!"el:!>6Tt&`F<%!R_P\&gGg;Je<SHa:SC`pCZ6o!"el:!>6T^
&]YIa&gG%%Je>s6!"cmWh@T`!e.DZlpCRE=,2a'$&HNLglk/7i!"bh9Je>4!!"dWl!"el:!>6T;&aBr/
&gEeWJe<SH!"dWl!"el:!>6Ti&\J\V&gGF0TFh/)j:QtUdh)Qke.DZlpCRE=,3oiT&HDj[&HNLgpCVuh
Je=gk!"e$"p(799pCRE=,+9,$&HNLgV@eClh%9VuV\/V7!"dWl!"el:!>6Tt&[;oK&gGg;q[if>M%P=O
a:SC`pCZ6o!"el:!>6T^&]YIa&gG%%Je<SHh@T`!e.DZlpCRE=,2a'$&HNLglk+g]r"/o0L_6j'!"dWl
!"el:!>6TT&HDjr&aBr/&gEeWJe<SH!"dWl!"el:!>6Ti&\J\V&gGF0Je>R+!"d9bdh)Qke.DZlpCRE=
,3oi$&HNLgpCZ$i!"c4DJe=gk!"e$"p(799pCRE=,+9,$&HNLgV@eClJe@\g!"dWl!"el:!>6Tt&[;oK
&gGg;Pn<usmh(-`a:SC`pCZ6o!"el:!>6T^&bck;!R_P\&gG%%Je<SHh@T`!e.DZlpCRE=,2a'$&HNLg
lk+g]QOs3/m1HQ7!"dWl!"el:!>6T;&aBr/&gGU5!"dHgJe<SH!"dWl!"el:!>6Ti&\J\V&gGF0Je<SH
dh)Qke.DZlpCRE=,3oi$&HNLgpCVuhnIYa%P7aW'!"e$"p(799pCRE=,,c(R!V?u]&HNLgV@eClJe@\g
!"dWl!"el:!>6Tt&[;oK&gGg;Je>0u!"dZma:SC`pCZ6o!"el:!>6T^&]YIa&gGU5!"e]5Je<SHh@T`!
e.DZlpCRE=,2a'$&HNLglk+g]Je>4!!"dWl!"el:!>6T;&aBr/&gEeWc4L$W[Ln*'!"dWl!"el:!>6Ti
&aU)0!R_P\&gGF0Je<SHdh)Qke.DZlpCRE=,3oi$&HNLgpCVuhN"H%$p^s>7!"e$"p(799pCRE=,+9,$
&HNLgc4L$fg(AoKJe@\g!"dWl!"el:!>6Tt&[;oK&gGg;Je<SHa:SC`pCZ6o!"el:!>6T^&]YIa&gG%%
Wt>=4fb&fJh@T`!e.DZlpCRE=,2a'T&HDj[&HNLglk+g]Je>4!!"dWl!"el:!>6T;&a9l.+sEHgJe@2Y
!"bY4!"dWl!"el:!>6Ti&\AVU+sG8E!"f)@Je<SHdh)Qke.DZlpCRE=,3oi#&HO(!p^r)iJe=gk!"e$"
p(799pCRE=,+9,#&HO(!V\-fY!!0nJJe@\g!"dWl!"el:!>6Tt&`F<%!RVJ[+sGJKJe<SHa:SC`pCZ6o
!"el:!>6T^&]PC`+sF]5Je>s6!"cmWh@T`!e.DZlpCRE=,2a'#&HO(!m1J@j!"bh9Je>4!!"dWl!"el:
!>6T;&a9l.+sEHgJe<SH!"dWl!"el:!>6Ti&\AVU+sG)@TFh/)j:QtUdh)Qke.DZlpCRE=,3oiT&HDjZ
&HO(!p^r)iJe=gk!"e$"p(799pCRE=,+9,#&HO(!V\+Lmh%9VuV\/V7!"dWl!"el:!>6Tt&[2iJ+sGJK
q[if>M%P=Oa:SC`pCZ6o!"el:!>6T^&]PC`+sF]5Je<SHh@T`!e.DZlpCRE=,2a'#&HO(!m1Fp^r"/o0
L_6j'!"dWl!"el:!>6TT&HDjr&a9l.+sEHgJe<SH!"dWl!"el:!>6Ti&\AVU+sG)@Je>R+!"d9bdh)Qk
e.DZlpCRE=,3oi#&HO(!p^u-j!"c4DJe=gk!"e$"p(799pCRE=,+9,#&HO(!V\+LmJe@\g!"dWl!"el:
!>6Tt&[2iJ+sGJKPn<usmh(-`a:SC`pCZ6o!"el:!>6T^&bck;!RVJ[+sF]5Je<SHh@T`!e.DZlpCRE=
,2a'#&HO(!m1Fp^QOs3/m1HQ7!"dWl!"el:!>6T;&a9l.+sG8E!"dHgJe<SH!"dWl!"el:!>6Ti&\AVU
+sG)@Je<SHdh)Qke.DZlpCRE=,3oi#&HO(!p^r)inIYa%P7aW'!"e$"p(799pCRE=,,c(R!V?u\&HO(!
V\+LmJe@\g!"dWl!"el:!>6Tt&[2iJ+sGJKJe>0u!"dZma:SC`pC['1r;Zfumh#O2pCRE=,-hg#&HO(!
cOg-gne$HcJe?iO!"eN0!"eu,n.>X3pCRE=,2a'#&HO(!m1Fp^Je>4!!"eQ1!"eo*nIYa4pCRE=,**?#
&HO(!S.X$Y!!0M?Je7tomh#O2rW)m/!"f,0ndtj5pCRE=,/"TT&HDjZ&HO(!aq94;Je?HD!"eT2rrDj,
!WW3$o+:s6pCRE=,3oi#&HO(!p^r)iN"H%$p^s>7!"eW3!>#8*&HNFCrXni9!"el:!>6TF&`+*#+sG8E
!"dirJe<SHp(799n.>X#oaq39!V?s(&GHb;&gGC/YRpm[+k70V&V:V9&HEC:&c*(>!V?s(!V?s(&GHb;
&gFUn`Xr4q+hnVi&HDjb&V:VO&HEBl&HEC:&HNLgi"='C!!1IZ!?r]S&V:UH&[2iI&F^83!9Ojn&GHb;
&gEAKkn*q?+e0-r&a0f,&=a=4&F^;3!9Xpo&GHe:,/"T#&HO(!cOg-gr=OVnJe?HD!"eW3rVup!kn*n,
pC[ELlOf*g!?r]^&V:UH&Z$'>&F^83&H)V%&bZe:&GHe:,+9,#&HO(!V\-fY!!0nJJe@\g!"eQ1r;c-q
!"el:s!#Mri=Q%jd1HC'+k70V&V:V9&HEC:&bck;&H2Y0!UUI!&GHe:,-hg#&HO(!^Cc&0`=W(]^Cf<7
!"eK/!"f)/mL]F1pC[ELi";=g!?r]S&`XH'&>9\f&[2iI&F'l+!!!&h&HEC:&cX&9&a9l.+sEHgJe<SH
!"eB,!"f,0!!2U%!"el:s!#,g]+G&f+j(Ci&HDjm&V:VD&HEC+&H`RE!!2U%!"el:s!$b@^(C>Gd1HC'
+nuY$&V:Uk&HEC)&HMk4r"8W7!"el:s!!mDh@Tc4+f>p(&`"$!&>p-6&HEC+&H`RE!!2U%!"el:s!#Mr
YRpm[+k72%&HEB!&V:V9&HEC:&b?S7&H2Y0!V$a%&GHe:,-hg#&HO(!^Cc&0Je?iO!"eE-r;Zfun.>X3
pC[ELi";=g!?r]S&V:Vm&HDif&[2iI&F9u/&H)Us&HEC:&cX&R&HDjr&a9l.+sEHgJe<SH!"eN0!"f,0
!!2I!!"el:s!#,g]+G&f+j(CK&\8PS&BYU6&HEC1&cD^q&HEC:&cX'@&WIA'+sH^nfF\)pX:^$rV%E\=
n.>X3r;cL&p(799pC[ELRM"Bg!?r\b&V:UH&bZe:&F^;2!!!&a&HEC:&cX&r&[2iJ+sGJKPn<usmh(-`
a:SC`pC[66rrD3o!"el:s!"`\pCRB+d1HC'+hnV@&V:VO&HEC3&HDgn&HEC:&cX'5&XX.2+sH=cJe==]
!"eN0YRpjHe.DZlpC[ELNtLUg!?r]5&HEBg&V:UH&HEC3&HDk(&HDk(&HEC:&cX&g&\AVU+sG)@Je<SH
dh)Qkn.>X#oaq39!V?s(&GHe:,3oi#&HO(!p^r)inIYa%P7aW'!"eW3!>#8*&HNFCrXni9!"el:s!"BR
!!2^(h@Tc4+f>p(&V:Vg&HEC2&cVk,&HVq4!V6m'&GHe:,01A#&HO(!eIdBFY7UaGeIfk7!"el:q%3T<
rW)m/!"f,0ndtj5pC[ELZ4Y(g!?r]5&HEC5&V:UH&`+*"&FL,1&GQ7q&HEC:&cX'5&XX.2+sH=cJe<SH
YRpjHm1B=0q>g:&rVup!r=K#@pC[ELNtLUg!?r\W&^Csg!O`Sl&HEC.&cD\0!Vd9)!!!'!&HEC:&cX&g
&aU)0!RVJ[+sG)@Je<SHdh)Qkh@T`!qZ-U-!"el:s!$b@N=c18+nuY$&W@;%&GQj6&HEC"&I/mZ!!*ZD
!!*!1!"el:s!!mDh@Tc4+jU`#&D@_J&V:Vg&HEC!&HMk4rXf;F!!*ZD&GHe:,01A#&HO(!eIdBFJe?'9
!"el:kRdgq!W<T5!!*ZD&GHe:,-hg#&HO(!^CdLY!!1abJe?iO!"dcp"98H7&J4[Ks!$A5aUnLRd1HC'
+mfkn&V:V!&HEBp&H`"6&J5!SpC[ELNtLUg!?r\W&V:VY&HEB4&HEBp&Hi(7&J5TK&cX&g&\AVU+sG8E
!"f)@Je<SHdh)Qkfb"5r!<*Q1&GHe:,3oi#&HO(!p^r)iJe=gk!"e$"q[ii?!<*Q1&GHe:,+9,#&HO(!
V\-fY!!0nJJe@\g!"dfq!<<0"&HEC:&cX&r&`F<%!RVJ[+sGJKJe<SHa:SC`pCZHu!>#80&HEC?!*'%3
&.oKu+qP=u!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT
&J,Nd!>,kT&HNIT&J5$U&.oKTIM!,'&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT
&HNIT&J5$U&.oKT&J,Nd+s@L0&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT
&J5$U&.oKT&J,Nd!>,kT&HNITIM!.m&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT
&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd
!>,kT&HNIT&J5$U&.oKT&J,NdIK:#l&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT
&J5$U&.oKT&J,Nd!>,kT&HECS&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U
&.oKT&J,Nd!>,kT&HNIT&J5$U*=rep!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNL@!88"c!!3$1!"el:
s!$A5Qk9?C+mfm%&HEB9&V:V!&HEBs&HNFCr"/o?pC[ELNtLUg!?r\W&V:UH&HEC.&HiXF!>,A,&HWLD
!W3N0&GHe:,/"T#&HO(!aq:9Y!!2-mJe?HD!"eK/"qUb7!>,;4p_!N+q[if>pC[ELlOgiC!!1IZ!?r]^
&V:UH&Z$'>&F:#.!!<66!!)m.!tc+V!;[9-&GHe:,+9,#&HO(!V\+Lmh%9VuV\/V7!"eN0#7pk9&-3@S
!;R3-!!2p.!"el:s!#MrYRpm[+k72%&HEB!&V:V9&HEC:&bckC&-*:R!>,kC!W*H0&-2M<!"el:s!"`\
`Xr4q+hnV@&V:VO&HEC0&I8@;&J+sT&HDk/&HEC>!!<66&J4[Ks!$A5Qk9?C+mfkn&c<4@!Jh>l&HEC0
&I8@;&J+sT&HDk/&c)J/!>,nD&GHe:,,c(R!U13\&HO(!S.U>bJe7tom1BU(!>,kD&J5!Dq[rZ)!s&uG
&GHe:,/"T#&HO(!aq94;\e+oRaq<)7!"eN0#QOl;&-3@T!!2U%!"el:s!$b@N=c18+nuZ%&HEBD&V:Uk
&HEC0&I8@;&J+sT&-)b/&bZe:&GHe:,+9,#&HO(!V\+LmJe@\g!"eN0#7pkI&-3@S!:UR#&GHe:,01A#
&HO(!eIe&Y!!2O#Je?'9!"el:pCRWA!!*W3&-)_"&HEC:&cX&\&bck;!RVJ[+sF]5Je<SHh@T`!lk0*p
!!2R$!"el:s!$A5Qk9?C+mfkn&XO(0&FC(6&HEC/&HEC?!:LL"&GHe:,**?#&HO(!cOg-gcOka@Je7to
lOa+.rW)?u!"el:s!#,g]+G&f+j(CK&V:VD&HEBl&HEC:&cX'@&WIA'+sH^nJe@Mb!!/8qV%E\=h\#Po
!"el:s!"BR!!2^(h@Tc4+f>p(&V:Vg&HEBl&HEC:&cX&r&[2iJ+sGJKJe>0u!"dZma:SC`pC[66p&G'n
nIYa4pC[ELZ4Y(g!?r]5&HEC5&V:UH&`+*"&F^;*!!!&i&HEC:&cX'5&XX.2+sH=cJe<SHYRpjHn.G?o
!!2U%!"el:s!!L9kn*q?+e0.i&HDj?&V:Sp&C_9l&GHe:,/"TT&HDjZ&HO(!aq94;Je?HD!"dWl!"el:
s!$b@N=c18+nuY$&W@;%&GQj6&HEC"&bZe:&GHe:,+9,#&HO(!cOg-gg(AoKJe@\g!"dWl!"el:s!#Mr
YRpm[+k70V&V:V9&HEC:&bQ_9&H2[t&HEC:&cX&\&]PC`+sF]5Wt>=4fb&fJh@T`!lk'4/quH0t!"el:
s!$A5aUnLRd1HC'+mfkn&V:V!&HEC/&c2P.!Up[$&GHe:,**?#&HO(!S.U>bkRde+S.P`4m1BC2!!3'2
rrDO#!"el:s!#,g]+G&f+jU`#&H*2m&V:VD&HEC0&cVk0&HWLD!V$a%&GHe:,3oi#&HO(!p^r)iJe=gk
!"eN0!<</u&HMk4r"8W7!"el:s!!mDh@Tc4+f>pi&HDjJ&V:Vg&HEC0&HMk4r"/r0!V$a%&GHe:,01AT
&HDjZ&HO(!eIdBFJe?'9!"el:pCRE+!W3N1!!2U%!"el:s!"`\`Xr4q+hnV@&]G=^&AJh6&HEC0&HMk4
r"/r0!V$a%&GHe:,2a'#&HO(!m1J@j!"bh9Je>4!!"eN0!>#80&HNFCn.>X3pC[ELNtLUg!?r\W&V:UH
&HEC/&cVk1&HMk4n.>X3pC[EL]b.jg!?r]0&YK^9!TXiE&^q<l&FC)'!!!&l&HEC:&cX'@&\\hW!RVJ[
+sH^nJe<SHV%E\=m1K$l!W`lFp(799pC[ELRM"Bg!?r\b&V:VN&HEB?&bZe:&FC)'!!!&l&HEC:&cX&r
&[2iJ+sGJKq[if>M%P=Oa:SC`pCZ6o!"el:s!"`\`Xr4q+hnV@&V:VO&HEBl&HEC:&cX'5&XX.2+sH=c
Je@nm!!.lfYRpjHe.DZlpC[ELW"B"1kn3.l!?r\W&V:UH&HEBl&HEC:&cX&g&\AVU+sG)@Je>R+!"d9b
dh)Qklk'4/qZ$TsnIYa4pC[ELlOf*g!?r]^&_IZq&?HIq&Z$'>&FC&0&GcA,!W3Q'&HEC:&cX&D&`+*#
+sEirJe<SHp(799m1B=0q>^KrnIYa4pC[ELa:YWg!?r];&X<q.!UgVP&]bOa&GHe2&cVjr&HEC:&cX&\
&bck;!RVJ[+sF]5Je<SHh@T`!m1B@!!U:6s&GHe:,2a'#&HO(!m1Fp^QOs3/m1HQ7!"eN0!<</c&HEC:
&cX&9&a9l.+sG8E!"dHgJe<SH!"eN0!<</c&HEC:&cX&g&\AVU+sG)@Je<SHdh)Qkm1B@!!U:6s&GHe:
,3oi#&HO(!p^r)inIYa%P7aW'!"eN0!>#8(&bZe:&GHe:,,c(R!V?u\&HO(!V\+LmJe@\g!"eK/!<</d
&HEC:&cX&r&[2iJ+sGJKJe>0u!"dZma:SC`pC[*2!"f#-!!2U%!"el:s!"`\`Xr4q+jU`#&FpEb&V:VO
&HEC0&HEC=!!!&i&HEC:&cX'5&XX.2+sH=cJe<SHYRpjHm1B=0q>^KrnIYa4pC[ELNtLUg!?r\W&^Csg
!O`Sl&HEC0&cVjr&HEC:&cX&g&aU)0!RVJ[+sG)@Je<SHdh)Qkm1B@!!U:6s&GHe:,3oi#&HO(!p^r)i
N"H%$p^s>7!"eN0!<</n&bZe:&GHe:,+9,#&HO(!cOg-gg(AoKJe@\g!"eN0!<</c&HEC:&cX&r&[2iJ
+sGJKJe<SHa:SC`pC[-3!>#:s&HEC:&cX&\&]PC`+sF]5Wt>=4fb&fJh@T`!m1B@1!9t-r&GHe:,2a'T
&HDjZ&HO(!m1Fp^Je>4!!"eK/!<</d&HEC:&cX&9&a9l.+sEHgJe@2Y!"bY4!"eN0q#CBqnIYa4pC[EL
]b.jg!?r]5&HEC@&V:UH&^q<l&FC)*!!!&i&HEC:&cX'@&WIA'+sH^nJe<SHV%E\=m1K-o!!3!0p(799
pC[ELRM"Bg!?r\b&]51\!PoA"&bZe:&C_9l&GHe:,01AT&HDjZ&HO(!eIdBFJe?'9!"el:h@T`!pC[EL
Z4Y(g!?r]%&V:V6&HEBW&`+*"&C_9l&GHe:,2a'#&HO(!m1J@j!"bh9Je>4!!"dWl!"el:s!!L9kn*q?
+e0-r&V:Sp&EOK(!V$a%&GHe:,/"T#&HO(!aq:9Y!!2-mJe?HD!"eK/!"f#-!!2U%!"el:s!$b@^(C>G
d1HC'+nuY$&V:Uk&HEC0&HEC=!!!&t&bZe:&GHe:,+9,#&HO(!V\+Lmh%9VuV\/V7!"eN0!"eu,n.>X3
pC[ELa:YWg!?r];&c3.?&;_!N&]bOa&GHe2&I/:9&HDhD!!2R$!"el:s!"`\`Xr4q+hnV@&V:VO&HEC0
&I/::&HDhD&-223!"el:s!$A5Qk9?C+mfkn&c<4@!Jh>l&HEC0&I8@;&J+pS&HDk%&HEC:&cX&R&HDjr
&a9l.&gEhXJe<SH!"eN0#QOl;&-*:S!!2U%!"el:s!#,g]+G&V,0CLL&\8PS&BYU6&HEC0&I8@;&J+pS
&HDk%&HEC:&cX'@&WIA'&gI)_fF\)pX:^$rV%E\=m1BU(!>,kC&J5!Dr"8W7!"el:s!!mDh@Tc$,,Z$)
&V:Vg&HEC0&I8@;&J+pS&HDk%&HEC:&cX&r&[2iJ&gGj<Pn<usmh(-`a:SC`pC[-3#S6tJ&HDhC!!2U%
!"el:s!"`\pCRB+d1HBl,/4_A&V:VO&HEC0&H`RE!>581n.>X3pC[ELi";=g!>6UD&V:U]&HEC0&[2iI
&F9u2!!*ZCrW)F"!"el:s!!L9kn*q/,0pi$&C1r?&V:Sp&F9u4&-3@T!!)I"!"el:s!#,g]+G&V,0CLL
&V:VD&HEBl&HEC:&cX'@&WIA'&gI)_Je@Mb!!/8qV%E\=h\#Po!"el:s!"BR!!2^(h@Tc$,,Z$)&V:Vg
&HEC+&cVk"&HEC:&cX&r&[2iJ&gGj<Je>0u!"dZma:SC`pC[*2"qUeI&-)\2n.>X3pC[ELZ4Y(g!>6U&
&HEC5&V:UH&`+*"&F9u1!!*]1!:UR#&GHb;+sGkVQk9?3,4,to&V:V!&HEC0&I/jI!>,;4&-223!"el:
!?r\J&a9l.&gEhXc4L$W[Ln*'!"eN0#S6tJ&-)_C!!2U%!"el:!?r]#&aU)0!RVJ[&gGI1Je<SHdh)Qk
m1BU(!>,kC&J5!DnIYa4pCREM+mT`"&HNLgp^r)iN"H%$p^s>7!"eN0#QOl;&-*:S!!3!0p(799pCREM
+ds#"&HNLgcOg-gg(AoKJe@\g!"eN0#QOl;!!!TC!!2U%!"el:!?r].&[2iJ&gGj<Je<SHa:SC`pC[-3
#QOl;!!!TC!!2U%!"el:!?r\m&]PC`&gG(&Wt>=4fb&fJh@T`!m1BU(!>,;4&J+pCnIYa4pCREM+lEsS
&HDjZ&HNLgm1Fp^Je>4!!"eN0#64`8!!*Z3!:UR#&GHb;+sE!Zkn*q/,+K6s&a0f,&=a=4&FC&0&H2Y3
!>#52n.>X3pCREM+h\K"&HNLgcOg-gr=OVnJe?HD!"eK/rW!$4&-)b#&HEC:&HO(!lOf*g!>6UO&V:UH
&Z$'>&F9u4&-)_C&-;V>p(799pCREM+ds#"&HNLgV\-fY!!0nJJe@\g!"dWl!"el:!?r].&`F<%!RVJ[
&gGj<Je<SHa:SC`pCZ6o!"el:!?r\m&]PC`&gG(&Je>s6!"cmWh@T`!e.DZlpCREM+lEs"&HNLgm1J@j
!"bh9Je>4!!"dWl!"el:!?r\J&a9l.&gEhXJe<SH!"dWl!"el:!?r]#&\AVU&gGI1TFh/)j:QtUdh)Qk
e.DZlpCREM+mT`S&HDjZ&HNLgp^r)iJe=gk!"e$"p(799pCREM+ds#"&HNLgV\+Lmh%9VuV\/V7!"dWl
!"el:!?r].&[2iJ&gGj<q[if>M%P=Oa:SC`pCZ6o!"el:!?r\m&]PC`&gG(&Je<SHh@T`!e.DZlpCREM
+lEs"&HNLgm1Fp^r"/o0L_6j'!"dWl!"el:!?r\c&HDjr&a9l.&gEhXJe<SH!"dWl!"el:!?r]#&\AVU
&gGI1Je>R+!"d9bdh)QklOa72!!*Z4mh#O2pCREM+mT`"&HNLgp^u-j!"c4DJe=gk!"eK/"qUb7!>,;4
q[rN6!"el:!?r\U&`+*#&gF4cJe<SHp(799lk03s!s&u6!:UR#&GHb;+sG#>YRpmK,1R9j&HDk#&V:V9
&HEC:&bckB&-)_B!>,kCn.>X3pCREM+gM^S&HDjZ&HNLg^Cc&0Je?iO!"eN0#S6tJ&-3@S!!2U%!"el:
!?r]F&XX.2&gH]TJe==]!"eN0YRpjHm1BU(!>,kD&J5!DnIYa4pCREM+cd6"&HNLgcOg-gcOka@Je7to
m1BU(!>,kD&J5!DnIYa4pCREM+h\K"&HNLgaq94;Je?HD!"eN0#QOl;&-3@T!!2U%!"el:!?r]Q&WIA'
&gI)_Je@Mb!!/8qV%E\=m1BU(!>,kD&J5!Dr"8W7!"el:!?r\c&HDk(&`+*#&gF4cJe<SHp(799m1BU(
!>,kD&J+pCnIYa4pCREM+ik8"&HNLgeIdBFY7UaGeIfk7!"el:pCRWA!"fbC&J+s3&HEC:&HO(!Z4Y(g
!>6U&&HEC5&V:UH&`+*"&FC&7&-)_B!>#52n.>X3pCREM+lEs"&HNLgm1Fp^Je>4!!"eK/qZ$Tsn.>X3
pCREM+cd6"&HNLgS.X$Y!!0M?Je7tolk'4/quH0t!"el:!?r]#&aU)0!RVJ[&gGI1Je<SHdh)QklOa+.
rW)?u!"el:!?r]Q&WIA'&gI)_Je<qR!"eo;V%E\=h\#Po!"el:!?r\U&`+*#&gGX6!"dirJe<SHp(799
e.DZlpCREM+ik8"&HNLgeIdBFJe?'9!"el:h@T`!pCREM+gM^"&HNLg^CdLY!!1abJe?iO!"dWl!"el:
!?r]F&]kUb!RVJ[&gH]TJe<SHYRpjHm1K*n!!2X&!"el:!?r\J&a9l.&gEhXJe@2Y!"bY4!"eN0pAb0o
o+:s6pCREM+h\K"&HNLgcOg-gr=OVnJe?HD!"eN0p&O[r!"el:!?r]Q&WIA'&gI)_Je<SHV%E\=m1BC2
!!*!1"98E6!!*!1p(799pCREM+ds#"&HNLgV\-fY!!0nJJe@\g!"eN0!>#80&Hr^G&J+pCoFV'7pCREM
+ik8S&HDjZ&HNLgeIdBFJe?'9!"el:pCRE+!W3N4!!*Z3!V?s(&GHb;+sF6(`Xr4a,/4_A&]G=^&AJh6
&HEC0&HMk4r"0&3!>,;4oFV'7pCREM+lEs"&HNLgm1J@j!"bh9Je>4!!"eN0!<</u&Hi(7&HDk(&HEC:
&HO(!NtLUg!>6TH&V:UH&HEC0&HMk4r"0&3!>,;4oFV'7pCREM+h\K"&HNLgaq:9Y!!2-mJe?HD!"eN0
rrE!0"V:Y7&HDk(&HEC:&HO(!lOgiC!!1IZ!>6UO&V:UH&Z$'>&FC&2&-)b1&I/:9&J+pC&J=^K!"el:
!?r\U&`+*#&gF4cJe?fN!"c%?p(799lk0*p!s&u6!:pd&&GHb;+sG#>YRpmK,1R;&&HEB!&V:V9&HEC:
&bZe:&GuP.&cVk&&HEC:&HO(!Z4Y(g!>6Tk&V:UH&`+*"&F0o.&H2\/&HDh%&HEC:&HO(!i";=g!>6UD
&V:Vm&HDif&[2iI&C_9l&GHb;+sEls!!2<rkn*q/,+K6s&V:Sp&C_9l&GHb;+sFW3]+G&V,0CLL&\8PS
&BYU6&HEBl&HEC:&HO(!lOf*g!>6UO&_IZq&?HIq&Z$'>&EOK(!W3Q'&HEC:&HO(!RM"Bg!>6TS&V:UH
&bZe:&F9u/&GlG-!V$a%&GHb;+sG#>YRpmK,1R9j&HDk#&V:V9&HEC:&bck;&GcA,!V$a%&GHb;+sF6(
pCRB+d1HBl,/4_A&V:VO&HEC0&HEC=!:UR#&GHb;+sGkVQk9<2r?;=U&gALk&V:U]&HEC0&[2iI&FC&7
!!!T2!>,;4n.>X3pCREM+cd6!&bR=M+X/*Rh@T`!cOka@Je7tom1BR'!>,;4&J+s3&HEC:&HO(!]b.gf
!#"WB!$U84Je<SHdh)Qkm1BU(!>,kC&J5!DnIYa4pCREM+mT_s&c*^=+oidQ&b-G5!L"+l&HEC0&I8@;
&J+pS&HDk0&bZe:&GHb;+sEls!!2^(d1HBl&aghC+ik7I&V:Vg&HEC0&I8@;&J+pS&HDk%&HEC:&HO(!
a:XjQmiqW@Je>0u!"dZma:SC`pC[-3#QOl;&-*:S!!2U%!"el:!?r\m&ZQEC'(dCJ+o)]M&FpEb&V:VO
&HEC0&I8@;&J+pS&HDk%&HEC:&HO(!i":PQob$j@!$RgDJe>4!!"eN0#S6tJ&HDhC!!2U%!"el:!?r\J
&]>:I+oie;&^Csg!O`Sl&HEC0&H`RE!>581p(7<:!W<T1&GHb;+sFW3lk'3uW"B"BnfmcO!$R@7Je?HD
!"eK/!rr?6&H2\'&HMk4r=K#@pCREM+mT_l&`42^+p/u#+qjhua:X@C!"eo;V%E\=lk'C4!>,nD!;[<+
&HWLD!W<T1&GHb;+sEBeXV(ITrt405rXj_oJe@\g!"dls!WW3$r=K#@pCREM+ik7I&b-Io,-MT1&]bOa
&GHe!&cMb1!W<T1&GHb;+sF6(JeA"plQQ<P`";tMfb&fJh@T`!m1B@!!W3N1!!2p.":tP6!!3$1!"el:
!?r]F&]kUb!P8rX&c3cq&V:V!&HEC0&HMk4r"/r0!W!B2!!!T2!W<T1&GHb;+sE!ZNtD@)r$(tLJe@2Y
!"bY4!"eN0!<</u&HMk4q@Ni1&J5!Dr=K#@pCREM+h\JC&HEC@&`+,t,,u6,&^q<l&F^;*!!!&o&HMk4
r=K#@pCREM+mT_l&Zu]G')j*.&V:Uk&HEC3&HEC:!!!&t&c<4A!!3$1!"el:!?r\U&V:Vo&H`Xi+sG)@
!!0nJJe@\g!"eT2pAjn!!<<0!&HEC:&HO(!a:[AC!!/i,cOp.#!$SiaJe?'9!"el:pCRE+!Up[%!!3$1
!"el:!?r\m&V:VU&cNsS+eoXg&HEBW&`+*"&FC&1!!2R$!<<0!&HEC?!%/<i&HNIf+V=_e&.oKT&J,Nd
!>,kT&HNIT&J5$U&.oKT&J,Nd!>0bl&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT
&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U
&.oKT&J,Nd!>,kT&HNIT&J5$U&.qPI!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J+sT&.oKT&J,Nd
!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oNQ+taH.&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd
!>,kT&HNIT&J5$U&.oKT&J,Nd!IbUl&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT
&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U
&.oKT&J,Nd!>,kT&HNIT&J5$U&5*TI!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&.oKT&J,Nd
!>,kT&HNIT&J5$U&.oKT&J,Nd!>,kT&HNIT&J5$U&/"d>g(=>c!W<T1&GHb;+sE!ZL(XD/!$Qq+Je7to
g(=>c!W<T1&GHb;+sFW3Je?QG!tle%+jU`#!TXiE&^q<l&F^;*!!!&o&HMk4r=K#@pCREM+mT`S&HDjO
&Z63@')j*5&V:Uk&HEC3&bZ2)!W3Q-&HMk4r=K#@pCREM+ds!p&bcn9,*3Dm&HEB?&bZe:&F^;*!!!&o
&HMk4r=K#@pCREM+ik7I&c3.?&C1sd+oie&&V:V9&HEC:&`aN)!!3$1!"el:!?r\m&V:VN&c*[O+g)E/
&`+*"&D@]s!!3$1!"el:!?r]F&V:Us&c*^-&c<4@!Jh>l&HEBr&HMk4r=K#@pCREM+fGtQ!U12J&c<4@
')Ef5&V:Sp&D@]s!!3$1!"el:!?r]#&V:V=&c!Wc&\8PS&BYU6&HEC.&HECA!;$j(!!3$1!"el:!?r]Q
&V:VI&HEB]&HEIA+oieT&V:Uk&HEC/&HEC?!;[<$&HEC:&HO(!RLt,`l4Nh9!$S'KJe@\g!"eK/qZ$Ts
n.>X3pCREM+ik7I&\8PS')*U5&HDk#&V:V9&HEC:&bckB&-)\B&J+pBn.>X3pCREM+gM^S&HDik&^D!Y
+oie+&V:VO&HEC0&HNFCr=K&A!:UR#&GHb;+sGkVJe=RdkTU'O&J:?A!"eN0YRpjHm1B@!!W3N1!!2U%
!"el:!?r\J&[`2N&C1sR&aCPA+VH!*&V:Sp&FC&1!!3!0!<</j&HEC:&HO(!]b,i.[1VdM!$UA7Je?HD
!"eN0!<</u&HMk4nIYa4pCREM+mT_l&V:Ss&J>ZgoHF8YPS'`(!"eN0!<</u&HMk4r"8W7!"el:!?r\c
&HDk(&V:V9&c!UN+iFtE&bZe:&FC&1!!3!0!<</j&HEC:&HO(!a:X"9Q4`g7p^s\A!"dZma:SC`pC[-3
!>#80&HNFCn.>X3pCREM+gM]C&HEC5&ZQH6,5VrQ&gI;es!%+JJe?iO!"eN0#7pk8&J5QS!:UR#&GHb;
+sGkVJe<SHq%3T>e0;C7YRpjHlk0*p!!2R$!"el:!?r\J&V:V?&HDk/&^;Nh&V:Sp&F9u/&GuOs&HEC:
&HO(!]b0TC!!/H!PS*@.j!"I9o-+/Xq@NfB+sJ2B&`F<%')j*L&HEs>&HECA!:CF!&GHb;+sH7aJe<SH
bn0pgp`]_^'#Gjb+oi8T+p&o"'([==&HEHp+oibC&bZe:&GHb;+sEBeWY#4Bg(B8UpEG25p*'JZn.>X#
jq.S)pCREM+ik7I&V:VJ&ZR%r+oib[&c*+>!9Xpo&GHb;+sF6(Je>$q!!1abbRsXp!>,t<+p&>g+oW&T
+V>@>,5r/U&J?8d&HEI?+oieR&HEC3&cMb1!U10r&GHb;+sGkVaUnLR]+KW,Je@5Z!##/QcOg-gn.>X3
r;c*p!"el:!?r\J&V:UH&a0f,&=a=4&FL//!:(3s&GHb;+sFW3LCjLtr=OVnJe?HD!"eN0!"f,0!!2I!
!"el:!?r]Q&V:UH&V:Uk&HEC/&HEC@!;R6#&HEC:&HO(!RLt,`_[ukL_%D82p(799l4Nsp!!2R$!"el:
!?r].&`F<%!M^6Y&V:V9&HEC:&b?S7&H2Y0!V$a%&GHb;+sF6(Je<SH`=W(]^Cf<7!"e?+!tYG4!V$a%
&GHb;+sGkVJe@#T!"bh9Je>4!!"e9)!<</j&HEC:&HO(!NtHsUJe<SH!"e?+!tYG4!V$a%&GHb;+sFW3
Je=Xf!!2-mJe?HD!"eB,!"f,0!!2U%!"el:!?r]Q&\\hW!QG_'&V:Uk&HEC-&cD\0!W*K&&HEC:&HO(!
RLt,`Je?fN!"c%?p(799lk'4/r;c6t!"el:!?r].&V:Vl&HEB!&V:V9&HEC:&bck;&H2Y0!UUI!&GHb;
+sF6(Je<SHJe?iO!"eQ1r;c-q!"el:!?r]F&V:UH&c<4@!Jh>l&HEC3&HEC@!9t-r&GHb;+sEls!!2<r
Je<SHJe7ton.GX"!!2<r!"el:!?r]#&V:UH&\8PS&BYU6&HEC3&cVjo&HEC:&HO(!lOe^\fF\)pX:^$r
V%E\=n.>X#nIbI,!"eo;!YQ\#RLt,`Je<SHp(799e.DZlp^mQ?+sG#>Je=7[!!2O#Je?'9!"el:h@T`!
p^mQ?+sF6(pCRB+N=gaSJe?iO!"dWl!"eo;!YQ\#i":PQJe==]!"eN0YRpjHe.DZlp^mQ?+sE!Z[1NBM
cOka@Je7toe.DZlp^mQ?+sFW3Je<SHJe?HD!"dWl!"eo;!YQ\#lOe^\Je@Mb!!/8qV%E\=h\#Po!"eo;
!YQ\#W"B"1oFZZeJe<SHp(799e.DZlp^mQ?+sG#>Je<SHY7UaGeIfk7!"el:h@T`!p^mQ?+sF6(Oq@[*
ne$HcJe?iO!"dWl!"eo;!YQ\#i":PQJe<SHYRpjHe.DZlp^mQ?+sE!ZJe?9?!!0M?Je7toe.DZlp^mQ?
+sFW3lk'3uQk=o^Je?HD!"dWl!"eo;!YQ\#lOe^\Je<qR!"eo;V%E\=h\#Po!"eo;!YQ\#RLuP3!"dir
Je<SHp(799e.DZlp^mQ?+sG#>Je<SHJe?'9!"el:h@T`!p^mQ?+sF6(Je>$q!!1abJe?iO!"dWl!"eo;
!YQ\#i"='C!!0\DJe<SHYRpjHe.DZlp^mQ?+sE!ZJe<SHkRde+S.P`4e.DZlp^mQ?+sFW3LCjLtr=OVn
Je?HD!"dWl!"eo;!YQ\#lOe^\Je<SHV%E\=h\#Po!"eo;!YQ\#RLt,`_[ukL_%D82p(799e.DZlp^mQ?
+sG#>i=Q%jUCi(iJe?'9!"el:h@T`!p^mQ?+sF6(Je<SH`=W(]^Cf<7!"dWl!"eo;!YQ\#i":PQit28&
Tb2kgYRpjHe.DZlp^mQ?+sE!ZJe<SHJe7toe.DZlp^mQ?+sFW3Je=Xf!!2-mJe?HD!"dWl!"eo;!YQ\#
lOgiC!!1(OJe<SHV%E\=h\#Po!"eo;!YQ\#RLt,`Je?fN!"c%?p(799e.DZlp^mQ?+sG#>Je@kl!"au!
Je?'9!"el:h@T`!p^mQ?+sF6(Je<SHJe?iO!"dWl!"eo;!YQ\#i":PQJe@nm!!.lfYRpjHe.DZlp^mQ?
+sEls!!2<rJe<SHJe7toe.DZlp^mQ?+sFW3Je<SH\e+oRaq<)7!"dWl!"eo;!YQ\#lOe^\fF\)pX:^$r
V%E\=h\#Po!"eo;!YQ\#RLt,`Je<SHp(799e.DZlp^mQ?+sG#>Je=7[!!2O#Je?'9!"el:h@T`!p^mQ?
+sF6(pCRB+N=gaSJe?iO!"dWl!"eo;!YQ\#i":PQJe==]!"eN0YRpjHe.DZlp^mQ?+sE!Z[1NBMcOka@
Je7toe.DZlp^mQ?+sFW3Je<SHJe?HD!"dWl!"eo;!YQ\#lOe^\Je@Mb!!/8qV%E\=h\#Po!"eo;!YQ\#
W"B"1oFZZeJe<SHp(799e.DZlp^mQ?+sG#>Je<SHY7UaGeIfk7!"el:h@T`!p^mQ?+sF6(Oq@[*ne$Hc
Je?iO!"dWl!"eo;!YQ\#i":PQJe<SHYRpjHe.DZlp^mQ?+sE!ZJe?9?!!0M?Je7toe.DZlp^mQ?+sFW3
lk'3uQk=o^Je?HD!"dWl!"eo;!YQ\#lOe^\Je<qR!"eo;V%E\=h\#Po!"eo;!YQ\#RLuP3!"dirJe<SH
p(799e.DZlp^mQ?+sG#>Je<SHJe?'9!"el:h@T`!p^mQ?+sF6(Je>$q!!1abJe?iO!"dWl!"eo;!YQ\#
i"='C!!0\DJe<SHYRpjHe.DZlp^mQ?+sE!ZJe<SHkRde+S.P`4e.DZlp^mQ?+sFW3LCjLtr=OVnJe?HD
!"dWl!"eo;!YQ\#lOe^\Je<SHV%E\=h\#Po!"eo;!YQ\#RLt,`_[ukL_%D82p(799e.DZlp^mQ?+sG#>
i=Q%jUCi(iJe?'9!"el:h@T`!p^mQ?+sF6(Je<SH`=W(]^Cf<7!"dWl!"eo;!YQ\#i":PQit28&Tb2kg
YRpjHe.DZlp^mQ?+sE!ZJe<SHJe7toe.DZlp^mQ?+sFW3Je=Xf!!2-mJe?HD!"dWl!"eo;!YQ\#lOgiC
!!1(OJe<SHV%E\=h\#Po!"eo;!YQ\#RLt,`Je?fN!"c%?p(799e.DZlp^mQ?+sG#>Je@kl!"au!Je?'9
!"el:h@T`!p^mQ?+sF6(Je<SHJe?iO!"dWl!"eo;!YQ\#i":PQJe@nm!!.lfYRpjHe.DZlp^mQ?+sEls
!!2<rJe<SHJe7toe.DZlp^mQ?+sFW3Je<SH\e+oRaq<)7!"dWl!"eo;!YQ\#lOe^\fF\)pX:^$rV%E\=
h\#Po!"eo;!YQ\#RLt,`Je<SHp(799e.DZlp^mQ?+sG#>Je=7[!!2O#Je?'9!"el:h@T`!p^mQ?+sF6(
pCRB+N=gaSJe?iO!"dWl!"eo;!YQ\#i":PQJe==]!"eN0YRpjHe.DZlp^mQ?+sE!Z[1NBMcOka@Je7to
e.DZlp^mQ?+sFW3Je<SHJe?HD!"dWl!"eo;!YQ\#lOe^\Je@Mb!!/8qV%E\=h\#Po!"eo;!YQ\#W"B"1
oFZZeJe<SHp(799e.DZlp^mQ?+sG#>Je<SHY7UaGeIfk7!"el:h@T`!p^mQ?+sF6(Oq@[*ne$HcJe?iO
!"dWl!"eo;!YQ\#i":PQJe<SHYRpjHe.DZlp^mQ?+sE!ZJe?9?!!0M?Je7toe.DZlp^mQ?+sFW3lk'3u
Qk=o^Je?HD!"dWl!"eo;!YQ\#lOe^\Je<qR!"eo;V%E\=h\#Po!"eo;!YQ\#RLuP3!"dirJe<SHp(799
e.DZlp^mQ?+sG#>Je<SHJe?'9!"el:h@T`!p^mQ?+sF6(Je>$q!!1abJe?iO!"dWl!"eo;!YQ\#i"='C
!!0\DJe<SHYRpjHe.DZlp^mQ?+sE!ZJe<SHkRde+S.P`4e.DZlp^mQ?+sFW3LCjLtr=OVnJe?HD!"dWl
!"eo;!YQ\#lOe^\Je<SHV%E\=h\#Po!"eo;!YQ\#RLt,`_[ukL_%D82p(799e.DZlp^mQ?+sG#>i=Q%j
UCi(iJe?'9!"el:h@T`!p^mQ?+sF6(Je<SH`=W(]^Cf<7!"dWl!"eo;!YQ\#i":PQit28&Tb2kgYRpjH
e.DZlp^mQ?+sE!ZJe<SHJe7toe.DZlp^mQ?+sFW3Je=Xf!!2-mJe?HD!"dWl!"eo;!YQ\#lOgiC!!1(O
Je<SHV%E\=h\#Po!"eo;!YQ\#RLt,`Je?fN!"c%?p(799e.DZlp^mQ?+sG#>Je@kl!"au!Je?'9!"el:
h@T`!p^mQ?+sF6(Je<SHJe?iO!"dWl!"eo;!YQ\#i":PQJe@nm!!.lfYRpjHe.DZlp^mQ?+sEls!!2<r
Je<SHJe7toe.DZlp^mQ?+sFW3Je<SH\e+oRaq<)7!"dWl!"eo;!YQ\#lOe^\fF\)pX:^$rV%E\=h\#Po
!"eo;!YQ\#RLt,`Je<SHp(799e.DZlp^mQ?+sG#>Je=7[!!2O#Je?'9!"el:h@T`!p^mQ?+sF6(pCRB+
N=gaSJe?iO!"dWl!"eo;!YQ\#i":PQJe==]!"eN0YRpjHe.DZlp^mQ?+sE!Z[1NBMcOka@Je7toe.DZl
p^mQ?+sFW3Je<SHJe?HD!"dWl!"eo;!YQ\#lOe^\Je@Mb!!/8qV%E\=h\#Po!"eo;!YQ\#W"B"1oFZZe
Je<SHp(799e.DZlq%3]Q&gAL?&V:UH&[)cH&ChB6&HEC:&`+*$&/$/a&Hj:%&gAL)&X!_+&FpEb&V:VO
&HEBl&HECA,5i,P+oieE&V:UH&V:V!&HEBl&HECA+p/H%+VFYs!$RC8Je?9?!!0M?Je7toe.DZlq]Z"P
r?;4b]b0TC!!/H!Je<SHdh)Qkg^sW"!!!&u&HNFUr#u+ar?;4blOe^\Je<qR!"eo;V%E\=h[oo%&J4m@
!!3'2!Y>tfr?;4br?;4bW"B"1oF\)8!"dir_[ukL_%GK8!"c%?p(799h%BMarXf5D&J5ZT+oieb+oie-
&`F<%!M^8(&HEB4&HDk#&[)cH&ChB6&HEC:&a0f2&-)\B&HDh1&Hr^X&J?9"q]Z"`Z4ZgC!!/W&!"e]5
Wt>=4fb)18!"cmWh@T`!h@Tc"!<!K4!!*ZD&H37B+VFSq!$U84aUnLR]+O'8!"bh9r"/o0SIki5m1HQ7
!"e!!!>#80&H`"6&J5!Sr"8oP!tle%+fGtQ!U13(&HEBg&^Csg!O`U(&HEB4&HEC!&HMk4r=K/D!"feS
r"8oP!tle%+h\KS&HDj&&HEC@&YK^9!TXj(&HEBb&^q<l&De!"!!3$1":tPF&J4jPrZVFW+sJ2r&\\hW
!QG`(&HEBD&b-G5!M'f&&GQj6&HEC"&HWOE!W<T5&-*:S&H!+E&gAM4+sJ2/&HDk(&ZQEC&D@`6&HDjJ
&`"$!&>p-6&HEC!&HMk4r=K/D!"feSr"0,G+sIXD+sG#>i=Q%jUCmA8!"bY4!!2O#Y7UaGeIfk7!"el:
kRdgq!W<T5&-*:S&H!+E&gAM3+sJ29&bck;!M'f&&FpF6&HDjb&]G=^&AJh6&HEC!&HMk4r=K/D!"feS
r"0,G+sIUC+sGkVaUnLR]+O'8!"bh9r"/o0SIki5m1HQ7!"e!!!<<0!&H`RE&J5!SK)gK'JcLB&!!(jf
!<<0!&HNFCXq?6tJe<SHY7Ud8!W<T2&-1JtJe<SHJe<SH!YGD5r=K&A!/hG@&V:UH&^h6l!!3$1!>#7A
&V:UH&V:V.&a0f-&-2Y@!<<.q&V:UH&V:V+&HNFCr=K&1!RVL2&V:UH&W@;.&-)\B&HDe3&J9U,Je<SH
Je?cMqZ*`1Je<SHJe>-t!"f)/!W`lFrW(jg^_-PG!!1+Pee%l^XqC4:rW&Q&rW)a+W=].B!W3N3&-)\2
jUqJ("V:Y6!>,qA!21#&!!!&n&ZH?C&-1Jt`=`"J_\(c<quE].q@N`.!W<T1&H)S/!T"Cg&GuM.!P]6.
&HEC>!2U;(&cVj)&HEC?!!!&j&[DuK&GuM.!SA"/&HWLD!W<W-!<*Sh&I&48!>,kC!N?\.&I&dH!>,nD
!1si)&-)_&&Zu]M!!!TC&-)ad&]bRa!<*Q2!!0qKit2=m!!3'2"qUb7&J5!Ch@Tbg!WEZ3&-1;obn0sV
!WEZ4&-)aF&`XH)&-)^*&H`UV!!3'2rrAf+!<<0"&HNFCn.E)@rVup!rXf/B!<!K1!!1sh!WW65!tc+V
!2C,,!!3$1!<</e&[`5M!7;D,&HNFCr=K&A!4`^-&HMk4rXf/B!2^>4&-)_2!>,nF&J+s@&HMk4i"5u$
!;mE0!!0J>l4F$s!ML)/&-*7A&J:fN!>#7i&\SbW!!3'2!>#7U&_[g"!!!T2!WEZ3!!3$1!>#7h&HNFC
r"/r0!TOd)&HMk4aV!2<!rr<4!3Qq,&HMk4SIkl&!WEZ3&-2S>X:YR8&J5!DrXf/2!W<T2&-1l*q@N`>
!;mE0!!/Z'!<</p&ZZKG!!*W2g_%R=!WW65rW'eIi"5u$!<*Q2!!0)3q@N`.!WEZ3!!3$1!>#7h&HNFC
r"/r0!Pf<*&HNFCV%NY<":tPF&-/F:!<<0!!!!&i&[;rG!7qh,&HMk4rXf/2!W<T4&-*:SiXl2&!;mE0
!!0)3p(7<:!20u-!!*ZC!;$l,&c)L^&]YI`&H2Y0!PoB-&HMk4rXf/2!W<T2&-1W#!>#8/&HMk4fFc1:
!<</6&`jT-!!*ZC!2C,+&cMb5&J5QS!M^5,&GuM.!Up].&HMk4rXf/2!W<T2&-1W#!tYGE&cN@C!!/`)
!>#7r&\&DV&-*:S&-1)idLlKZr=T&0\In->rrE$1rrAf+!rr?6&HWOE!W<T2&-1W#!>#8/&HMk4[1Va;
!<<.o&I/::&J5QS&J:fN!<<0!&HNFCk7PB>!<<0"&HNFCbn8P>!<<0"&HMk4r=K&A!8nFi&-2V?!<</\
&\enY&-0]^g^sPu!<*Q2&-/jFoaq3)!W<T2&-/L<!>#8/&HMk4r"5n?!<<0"&HMk4r=K&A!9Xsj&HNFC
r"/r0!MU/-&-)b'&Zu]G&GcA,!T"F/&HMk4r=K&A!5oK.&HNFCr"/r0!NQh/&HMk4rXf/2!W<T2&-1W#
!>#8/&HMk4^_,T=rrAc*!YH"Uq>^KrU_*V-!W<T2&-285ZOm3L!;mE0!!1abbRjjU!WEZ3!!3$1!tYGE
&`F<&!!3'2!>#71&c*(?&-/=7!"eu,!!2d*Y7UdH!<!K1&-1JtaUnOb!;mE0!!0tLiXl1k!WEZ3&-2Y@
!<</X&HMk4rXf/B!7qh,&HMk4\Img5!>#7+&HWOU!<!K1!!/l-!Y>>4rXf2C!!2U%Zk3<=!WEZ3&-2Y@
!<</X&HVq4!<WoF!!&c+!>#7n&[W,N&-1)id1HQ_!"feS!!0VBlOj-srXo/1UCdS.!>,nL&J+pB&J5!C
!T+Ih&GuM.!ONI.&HEC>!!!%l&H`RE&J:cMqZ,aj]b(5Uqu?]tbn8P>!<<0!&c2Ra&c;Xf&],.V!!!&A
&_@Tq&-/jFo+Cp$!!/c*quHR*W=].2!W<T1&H)S/!Tk!g&cMd(&c)J-!V[2*&HNFCg_%L;!tYG4!Q#H*
&cMd/&c*(?!!3!0!tYG4!L+1J&V:UH&\Sd.&V:UH&V:UH&V:UH&V:UH&V:UH&V:UH&V:UH&V:UH&V:UH
&V:UH&V:UH&V:UH&V:UH&V:UH&V:V.&V:UH&V:UH&V:UH&_@Tp&GQ5,&HDjk&HDh%&HMk4pCRB*oaucf
Je<SHW=]+Ap](@-!!26pr=K&A!V-g'!!2g+!>#:.&V:UH&V:Vk&HEC;!!3`4!TOal!:^X%!!2d*!!(I[
Je<SHJe?'9!>#7e&HNFCj:M@l!!.]aJe<SHRLoQ3!:(6g&HNFDj:MD(!O35g&V:UH&aL#0&-1Mu!<</]
&HNFCh[tGP]b,i.Je8"p!;mE<!!*ZC!"fbB!>,nD!!3!0!WW3$p^mK+rXfJK!"fbB!>,nD!!3'2"TSQ8
&-*=A!;mE/!6Gh)&V:UH&^q<m&-2V?"TSQ8&-*:@!!**3rVup!rXo)/!!2p.!>#81&HWLD&H2Y1!>,51
#QYML!!*ZC!"f)/r=K&1!Vd7Y&V:UH&Z$'?&-2V?!rr?6&GuM.!W<!#!>,nTquHX,!tc+V!<*Q1&GuM.
!W<!&!>,nD!>,n?!<!K1!!/u0Je<SHJe@\g!>#8/&I/::&J+pB&J>!B$kX'O!"feC!"feS!!2s/!>#81
&HiXF!"fhB!"]_S!!!TC!!*ZC!!!TC&-)b1&HMk4eIdBFJe<SHa:SFa!;mEA!!*ZC!!*ZD&-)_C&J+pS
&HDk2&HMk4q[ii/!WEZE&-)_C&J+pC&J5QS&J5!D&J+pCrXf/2!WEZ3&-.@qJe<SHRLoQ3!;mE3!!*ZC
!<*Q2&-2\A!tYGE&-)_/&HNFCq[ii/!WEZ3&-2\A!>#81&I8pJ&J5!D&J+s@&HMk4rXf/B!4!2g&V:UH
&aL#0&-2V?"98H7&-2\A!>#81&HiXF&J+s@&HNFCq[ii/!WEZ3&-2\A!>#81&I8pJ&J5!D&J+s@&HMk4
rXf/B!8nH@&\Sd.&V:Sq&-2V?"98H7&-2\A!>#81&H`RE&J4d=q[ii/!WEZ3&-2\A!>#81&I8pJ&J5!D
&J+s@&HMk4rXf/B!6Pn*&V:UH&^q<m&-2V?"98H7&-2\A!>#81&H`RE&J4d=q[ii/!WEZ3&-2\A!>#81
&I8pJ&J5!D&J+s@&HMk4rXf/B!;I.X&V:UH&Z$'?&-2V?"98H7&-2\A!>#81&HiXF&J+s:&H`UW!!3'2
!>#81&HNFCrXfDI!"feC!>,kCr=K&1!WEZ3&-/U?Je<SHJe@\g!>#8/&Hi(7&J+sA&HNFCrXf8E!"fbB
oaq3)!WEZ3&-2\A!>#81&I8pJ&J5!D&J+s@&HMk4rXf/B!7_[5&V:UH&]bOb&-2V?"98H7&-2\A!>#81
&Hr^G&J+pCp(7<*!WEZ3&-2\A!>#81&I8pJ&J5!D&J+s@&HMk4rXf/B!/(r9&V:U`&HNFCr"0&3!>,kC
rXf/B!<*Q4&-*:S!<<0"&HNFCq[ii/!WEZ3&-2\A!>#81&I8pJ&J5!D&J+s@&HMk4rXf/B!4!2g&V:UH
&aL#0&-2V?"98H7&-2\A!>#81&IK'L&J5!C!>,kC!W*H0&-2\A!>#81&HNFCrXfDI!"feC!>,kCr=K&1
!WEZ3!!2!iJe>[.Je<SH!>#8/&Hi(7&J+sA&HNFCrXf8E!"feSqu?]tq[ii?!<*Q2&-2\A!>#81&I8pJ
&J5!D&J+s@&HMk4rXf/2!Ql"+&V:UH&^q<m&-2V?"98H7&-2\A!>#81&HNFCrXo&.q@N`>!<*Q2&-2\A
!>#81&I8pJ&J5!D&J+s@&HMk4rXf/2!Vd7Y&V:UH&Z$'?&-2V?"98H7&-2\A!>#81&HNFCr=T#/q[rf>
"TSQ8&J+sA&HNFCrXfDI!"feC!>,kCr=K25!>,nT!2^?[&V:UH&^V*j!!2-m!>#7\&V:UH&V:Uh&HNFD
j:MA'!!.]aJe<SHJe@Sd!>#7l&HMk4Yn;R"Je<SH`";tLj:M@lh@Y>O]b,i.Je?]K!>#:o&HNFDa:X"9
Je<SHWt>=3jq.RnoaucfJe<SHJe<SHJe<SHJe<SHJe<SHJe<SHJe=F`J,~>

%%EndBinary
grestore
np
grestore
gsave
.6102 429.61 mo
666.412 429.61 li
666.412 .198212 li
.6102 .198212 li
cp
clp
45.0262 138.514 mo
45.0262 161.614 li
44.5461 161.614 li
44.5461 138.514 li
cp
49.166 160.774 mo
44.7859 169.534 li
40.4063 160.774 li
.75 .68 .67 .902 cmyk
f
156.206 138.214 mo
156.206 161.314 li
155.726 161.314 li
155.726 138.214 li
cp
160.346 160.474 mo
155.966 169.234 li
151.586 160.474 li
f
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PLBAAA+TimesNewRomanPSMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (PLBAAA+TimesNewRomanPSMT)%%Title: (PLBAAA+TimesNewRomanPSMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /PLBAAA+TimesNewRomanPSMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {0 0 0 0} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 4099 def/FontMatrix [0.000999999 0 0 0.000999999 0 0] def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [1 0 0 1 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 22 dict defct_GlyphDirProcs beginGlyphDirectory+54 <001C60D8A8C9B7EF32243DA21D5631D8766D74D715030BA7905332A0CFAC49387DB487F69FE973B04989A1F5B84226AC0574A3AC8A92A20A67AC6A93CF1F8D7D050DEAAE8CF31B4A5FB504F0A0814E8C9022E7C7EFFB00070B62EB780F5BFD7AC1407620155D4B738E953EA9E8519FCB3635DEED6C82D9AB968BE1131CEEB6B072A246B745E2E47F0890CD4A4DD5061C30741173A5782D0F5AE0E645337518CA765AC1ABF9ABB13F9D6F8666630C08F558B2481DB7C0FEA08930FF35DE904907DBC222EF06C7863FAB3917A57116C566327E1977A70091D7628A2440BE3AB444BD01341C54F829742469A9B1CF3048C0B204E355F432B93B12EA12C84F80CE13D22435E5FCC1B5A000DE> |83 <001C60D8A8C9B7A73DDE03BEEA75B31F61E78B8C94AAF630ACAE1A607BD40EB48302A40F17E763F71E8B5595B8EEEBB33C0827EEA0DE5370DD4C7A09244048D0DA814D6E79BAC2B8E456D2F119496FF35E5A13F4B8F71ECD895B10E20FBAC666023D0941B5A0FF139CBD18745BC2892DD91EE541EAD2B54AF0839C3327F75904A81A3805CFC7AF83735A7079B305271753A14327F3CB693ACCFE5C9D6A3B8431B357819DFFAD81BD2A60573E4CA4C48EC0A5E07291768D829E6A70067C076E94545FD4D8E2BB7431617263A47DB04F0B8630D6AB06FF2DD1B1F383A59D02DF1C7730E7CC0F462D79552DFA> |76 <001C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F98C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB8CA3E9F85837FAC6> |87 <001C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |3 <001C60D8A8C9B8707C25> |86 <001C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22ACE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A039A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FAAB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |68 <001C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550DEC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB333E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272EF1EF1464C3F0D45D7CBB8749AF571E09> |79 <001C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C4304B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B6828D244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE5527D6441CE02F5A28D63A618F> |89 <001C60D8A8C9B7A73DDA3AD4E30B5CCD7D3C12F7959C83D9C808662F1D29403E3640D88B6D61CC1EF17C120CDCE65E70C4FE9E153F8E52BB6A45EF1A33FF33B350E779BE70BFD66B1893DAD63FDF011F2039FF0D075853D9D0E3D26BA0EDAEDA247A4C2489AC431F6D923096DA608667B0FA6E60F963DA8A46029578956D98258ABD433E9E> |11 <001C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9AE12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA049D36B9B13B7F6C8AA7A4A5EB0> |71 <001C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D203065B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD3329A86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB857EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5CCB01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD104E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A618879362783A36815EA1CE5876FAC4F83CDFE1BD4A> |72 <001C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEAD3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984A59E1CFFFD06EA629758085868D3F5F7204292> |70 <001C60D8A8C9B77FE2C180CE42B4078449B9D767742AB4CF5971DFD438ECC54400989182964B065BACA704BA363536AC987FC433F59A23A3DC16CBD969F42A6041BB8327C43B9105FC5DF44A0437E9E26FE545542A602D007FC6A926264F9C2999730E7919239B324086FEA852156F456647AA0692084759C352D6998971799F4BEF3EFB7DE91C98C83C567200278FF2145E16D28EDE7556C59DB204> |85 <001C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C360275B503E4954E912CD342> |12 <001C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B540A016D558248DC4A3E8183F5F> |55 <001C60D8A8C9B7D8BE514ED6977CE9F9E5860FEBB6D8EBF5879FDED6C1E48F6AFEEE7B65DB6C9D492058CAA103CB13A7A80B0015E85F272BB9775991CD97556EC3CFB46A4E1606F006216EABEB711074247C72C159202F32CC7F5F403FAE58110685510DDB32C57700D5067C975D7063A496FE85C1E5> |75 <001C60D8A8C9B7A73DB904DA2C7A38531EB5E07DB80E9375E00037710435E027FD1F7B471BB2C47AEA703B8CB5C9C005CAA0B77F572194961F7C30413194A0134D3FF9BA81F629AD195D96BD3C1285904670FEB33C334E260F33EE9AB1A2D9C0C66E38CE4D3CA583879DAF16CE988CC2A14E39FED6599F4B0F3F8F061B585E2410824AE8C179E66BD3AD9F6E34CD8CBF79298E3E4553D0E9DCA292805DED8E36C58209B17E38B2DFAFEB881CA5FB9EC7A76A0CF0C4BFE83CE749EBD15B15E97FBEA4E90F2186A54E69C28F4083AB76DBE019E4C57B27760FED872C4483796F735A795EACD82F245D81FB43B5> |82 <001C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD4416250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF996A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA436702294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |81 <001C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B280026130687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0027198438FE663C2EACF82CEB86F7C727594> |93 <001C60D8A8C9B77FE2C18484DB453227C527C164B5A1471C4657A5A14A46A1D3A0BD899640627BE2A7B9DB921E26CD53975830B919737E4B957FDCE605D77DC327B798A39B69F36340D55162C5C44140DACBE16FE7873A74F99AB90B7497> |78 <001C60D8A8C9B7A73DB907772911B7C2CEAC1D2074B2642ADEDFBA1679ED254D30D2D9A5BDAE41A6A7C0D78C5D75E9522858A70EEA458FC30CFDA879F9C1CE85600A63BE4554ACA119AD822CC5727738E5E5FAC782F5B6F69100B3F9A42C95FB8AA53FD907276C4A477291A36A9FD6B1870ACEAFC297FB6D4CC1F0091BA09524439681D5D4A76F017EDD23AA69786F58BFB619D5D45A35621B583AF1C763E994CD0C086A44F5E2750B3F3193B4E6E5A27940B47B22FB55ED113A092C7013A98E096292640D2EA9CE95DF810761FDAF86F75648F6AFC27AA39909F96AF13446AC99> |0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /PLBAAA+TimesNewRomanPSMT-Identity-H /Identity-H 0 [/PLBAAA+TimesNewRomanPSMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/LTSFAE+TimesNewRomanPSMT /PLBAAA+TimesNewRomanPSMT-Identity-H findfont ct_VMDictPutLTSFAE+TimesNewRomanPSMT [17.52 0 0 -17.52 0 0 ]msf18.146 113.434 mo(\0006\000S\000L\000W\000\003\000V)sh57.5836 113.434 mo(\000D\000O\000L\000Y\000D\000\003)[7.77889 4.87055 4.87056 8.76 7.77888 0 ]xsh5.785 134.495 mo(\000\013)shLTSFAD+TimesNewRomanPS-ItalicMT*1 [17.52 0 0 -17.52 0 0 ]msf11.606 134.495 mo(R)shLTSFAD+TimesNewRomanPS-ItalicMT*1 [10.5 0 0 -10.5 0 0 ]msf22.286 134.494 mo(1)shLTSFAE+TimesNewRomanPSMT [17.52 0 0 -17.52 0 0 ]msf31.946 134.494 mo(\000G)sh40.7101 134.494 mo(\000H\000F\000U\000H\000D\000V\000H\000V\000\014)[7.77888 7.77888 5.83403 7.77888 7.77888 6.81541 7.77888 6.81541 0 ]xsh108.386 112.114 mo(\0007\000K\000H)sh135.63 112.114 mo(\000\003\000U\000H)sh153.622 112.114 mo(\000D\000F\000W\000L\000R\000Q\000\003\000]\000R\000Q\000H\000\003\000V\000R\000D\000N\000H\000G\000\003)[7.77888 7.77888 4.87056 4.87056 8.75999 8.76001 4.26077 7.77887 8.76001 8.76001 7.77887 4.38 6.8154 8.76001 7.7789 8.75998 7.7789 8.75998 0 ]xsh148.046 133.175 mo(\000\013)shLTSFAD+TimesNewRomanPS-ItalicMT*1 [17.52 0 0 -17.52 0 0 ]msf153.866 133.175 mo(R)shLTSFAD+TimesNewRomanPS-ItalicMT*1 [10.5 0 0 -10.5 0 0 ]msf164.546 133.174 mo(2)shLTSFAE+TimesNewRomanPSMT [17.52 0 0 -17.52 0 0 ]msf174.266 133.174 mo(\000G\000H\000F\000U\000H\000D\000V\000H\000V\000\014)[8.77043 7.78931 7.78931 5.84445 7.78932 7.78931 6.82611 7.78931 6.82611 0 ]xshgrestore
gsave
48.6262 371.614 mo
153.026 371.614 li
153.026 170.254 li
48.6262 170.254 li
cp
clp
47.787 169.414 mo
47.787 374.374 li
156.747 374.374 li
156.747 169.414 li
cp
.136 .104 .109 0 cmyk
gsave
clp
[1 0 0 -1 0 405 ]ct
[0 -204.96 108.96 0 47.787 235.586 ]ct
<<
/T 1
/W 855 
/H 455 
/M[855 0 0 -455 0 455 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
Qi@'bmJj6e!<1[O^]+<5`W+Ee!WMbt<U!Lq?iU-*]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(r_^Uq7m^]4<+RT0Drs8MZjV#LJpp#/o^<<HV.rqjsPcFX1ns8M]%<T7![?iU,$s7H<lrq2^["(2*-
s89X'^B4H7p#oD^<<?P-rmUndrrN,l^fB,h"(2*-qlIEu]*#hJrq2^[!FPj,rg3Wcrq5_[W`:EQs1?%X
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq6K]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tlouC(\<<-@2s5s=^rq2m`qGdQ&qj=tr
^@h2"UK%;#iW$Ce!WMc;<QeAC?N7UOhnK3+oqka\<<-?lrrN,lrDf@f!FGZf]<JmJ^@g#V`)QeD_#N'e
!WMbo<U<_"?N7XP]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>"BY^&[hn<<-@ms/Z/#
rq4uF^Jt;@qo67s])fY=Z;p'f!+)5rqu6]ropA_[?N9]5UqZrEp#/o\<<-@Ls31KDrq3g%i)Keaqk^ps
])fY=QrO,mqu<5e!WMcU<O#OV?N7XP]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(s@^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^@f9Afi8#YX8hSe!WMbZ<<6G'R(EC5p$Yn\<<-@Zs1\L6rq4<3dT$<Ss0KK&^B)(AT2k_f!+)#l!WMcc
<MNOp?Mi`o\%;[Tp!-R\<<-@9s53hWrq3-go2TU5s1?%X^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq5QrDf@f!++mhYl=b'p!m'\<<6G'_7S@3!P\6/<U<]c?C:`ns8E#kQrO/ns6dY&^B)(A
g/Ymf!+*YEe,KIJos.T\<<6G'T"Fm3!P\5o<<-@ts.oYqrq55M\5bCms1?%X^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^G`^=]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(tm]>(tm]>(tm]>(tm]>(tm]>(tlosn)\<<-@$s7H<lrq2XY!FG[$]:HP7^@g\iYuLd1e,RDe!WMc-
<S:@Q?N7+AmCr\9opA_Z?C1Zmrq5_[W`9(+qqJ`s])fY=a&UPf!+)u2k5PJ]oq,7\<GZ"A]>(tm]>(tm
]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>!t3<MNOo?K(pnrrN,lc;i%f!FGZ7]AL4$^@e@'
o2PcsQi@*cp&.m\<<6G+l+aI;!P\6W<Q%l;?GQTnrrN,lX]=^f!FGYk])fOX!;2^Z!+,'mX8`5"p"EE\
<BOUf]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(s2
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq5QZ;p'f!+)5rqu6]ropA_[
?MjE-Uq6ZAp#/o\<<-@Ls31KDrq3g%i)Keas/!L&^B)(AQrO,mqu<5e!WMcU<O#O)?Mi6a`Oc/botXS\
<<-@+s6]gerq2XYCgR.R^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^@gqpW`9%*
gAene!WMc4<ROkJ?Mh(@k.:Z.oq,7\<<-?lrrN,lp/Rkf!FGfc^ULrY^@fcOb>eOK\c:Re!WMbh<V'2k
?Mg,%!P\7*<Ld%h?KhEnrrN,leQ'Of6!jT'^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq61]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(tm]>!s?<U<]c?C:`ns8E#kQrO/nqsM(s])fY=g/Ymf!+*YEe,KIJos.T\<<6G+T"k0;!P\5o<<-@t
s.oYqrq55M\5`Q9qouas])fY=\Q.Qf!+)K$o`"skopA_`?N7XP]>(sh^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^@g\iYuLd1e,RDe!WMc-<S:@Q?Mgh9mCND5opA_Z?C1Zmrq5_[W`9(+s4b<&
^B)(Aa&UPf!+)u2k5PJ]oq,7\<<6G'R(EC5p%DC\<<-@as0r"/rq4Q:b>h)>s1?%X^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m,JUk*]>(tm
]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tloqka\<<-?lrrN,lrDf@f!FGZf]<JmJ^@g#V`)QeD_#N'e
!WMbo<U<]d?N6G.!Pc>KopA_Z?L@cnrrN,lg/Ymf!FGZC]@4@m^@ed3k>_LgScATe!WMbZ<=N:7]>(tm
]>(tm]>(tm?G!ta^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq5QiDmBf!+*nLbl7_Cosn)\<<6G'V7ZB3
!P\5o<<-A&s.0/jrq5JTYuLg2s4"g&^B)(A^fB&f!+)`+mJd4dopA_[?Mg,%!P\6q<N9%!?J>FnrrN,l
a&UPf:L=(5^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Dsl#]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>!s1<Vf\q?C1Zmrq5tb
UK%>$qr55s])fY=c;i%f!+*59hu<`Voqka\<<6G+R(i[9p&.m\<<-@hs02M(rq4fA`)QhEqn]ns])fY=
X]=^f!+)&m!WW-!opA_n?N7XP]>(tm]>(tm]>(tm]>(tm]2ubZ^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^@g2[
^Jt8?`W+Ee!WMbt<Td?_?Mg>+qmumCopA_Z?M+8nrrN,liDmBf!FGfN^WaFn^@f$:i)Kb`V#U)e!WMbZ
<<6G'r4AN3!P\6j<O#O(?ISqnrrN,l^fB&f<aPg<^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m'u.Aq]>(tm]>(tm
]>(tm]>(tm]>!s*<<-?lrrN,lmo?Af!FGZX]=tlX^@fNHdT$9RZN'(e!WMba<Vf\r?N6D-!P\7#<MNOo
?K(pnrrN,lc;i%f!FGZ7]AL4$^@e@'o2PcsQi@*cp&.m\<>f-C]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
;S0]U^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq5QeQ'Of!+*J@f`)!OorV6\<<6G'RC`L3^&[hn<<-@ms/Z/#rq4uF^Jt;@
s2Mh&^B)(AZ;p'f!+)5rqu6]ropA_[?MjE-Uq6ZAp#/o\<<-@Ls31KDrq3g%i)O&hs1?%X^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^CIlj]>(tm]>(tm]>(tlopA_Z?MjbnrrN,lkZ+lf!FGZQ]>_A_^@f9Afi8#Y
X8hSe!WMbZ<<6G+R(i[9p$Yn\<<-@Zs1\L6rq4<3dT$<Sqm3os])fY=T2k_f!+)#l!WMcc<MNP:?N7XP
]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]1]oN^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^@fcOb>eOK\c:Re!WMbh<V'2k?Mg,%
!P\7*<Ld%h?KhEnrrN,leQ'Of!FGfB^Y$:%^@eU.lr=$lR/[3erW)VY<<6G'm^oO3!P\6\<PMN6?H)rn
rrN,lZ;p'fA7#;J^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uj`c]>(tm]>!s*<<-@ts.oYq
rq55M\5`Q9qouas])fY=\Q.Qf!+)K$o`"skopA_[?N9r<S\G3>p#oD\<<-@Ss2G!=rq4',fi8&ZqlIEs
])fY=QrO,mQi@*cp$Yn\<@;,Q]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>$bG^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq5Q
a&UPf!+)u2k5PJ]oq,7\<<6G'R(EC5p%DC\<<-@as0r"/rq4Q:b>eRLs15u&^B)(AVH*4f!+)#l!WMcj
<Ld%i?Mj!!Ye'qMp!m'\<<-@@s4I>Prq3Bnlr@b+s1?%X^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^B(s\!;2^Z!+,'mX8`5"p"EE\<<6G'`k0^3!P\64<Td?^?Ch,nrrN,lQrO/ns7O.&^B)(A
iDmBf!+*nLbl7_Cosn)\<<6G'V7ZB3!P\5o<<-A&s.0/jrq5JTYuND_s1?%X^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^UlYD]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(tm]>(tm]>(tm]>(tm]>(tm]>(tlotXS\<<-@+s6]gerq2XY!FGYj])fY=mo?Af!++CZ^Ae65ouC(\
<<6G+ZbPY;!P\6!<Vf\q?C1Zmrq5tbUK%>$qr55s])fY=c;i%f!+*59hu<`Voqka\<GZ"A]>(tm]>(tm
]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>!t:<Ld%h?KhEnrrN,leQ'Of!FGZ>]@a^r^@eU.
lr=$lR/[3erW)VY<<6G+m_>g;!P\6\<PMN6?H)rnrrN,lZ;p'f!FGYp]DK2@^@djn!+,<tV#LJpp#/o\
<Ae+_]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm2S6`9^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq5Q\Q.Qf!+)K$o`"skopA_[
?MjZ4S\"p:p#oD\<<-@Ss2G!=rq4',fi8&Zs/a!&^B)(AQrO,mQi@*cp$Yn\<<6G'gUk23!P\6I<ROkI
?F'UnrrN,lT2k_fCgR.R^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^@h2"UK%;#
iW$Ce!WMc;<QeAC?Mh=Ghn&p'oqka\<<-?lrrN,lrDf@f!FGfj^TbHR^@g#V`)QeD_#N'e!WMbo<U<]d
?Mg/&!P?&GopA_Z?L@cnrrN,lg/Ymf4C8'"^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m
^Uq7m^Uq7m^Uq7m^Uq7m^Uq7m^Ul/6]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(tm]>!sD<Td?^?Ch,nrrN,lQrO/nqt7Rs])fY=iDmBf!+*nLbl7_Cosn)\<<6G+V8)Z;!P\5o<<-A&
s.0/jrq5JTYuLg2qp`6s])fY=^fB&f!+)`+mJd4dopA`q?N7XP]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm]>(tm
]>(tm]>(tm]>(tm]>(tlp$Yn\<<-@Zs1\L6rq4<3dT$<Sqm3os])fY=T2k_f!+)#l!WMcc<MNOp?N9$"
\%_sXp!-R\<<-@9s53hWrq3-go2Pftqj=tr^@hG)S5fPqkl7me!<1LJ`;]i:_#N'e!<0)"m/I(bJ,~>

%%EndBinary
grestore
np
f
grestore
gsave
152.1 371.7 mo
153.1 371.7 li
153.1 369.8 li
152.1 369.8 li
cp
clp
152.187 369.814 mo
156.027 369.814 li
156.027 373.654 li
152.187 373.654 li
cp
.136 .104 .109 0 cmyk
gsave
clp
[1 0 0 -1 0 405 ]ct
[3.84 0 0 -3.84 152.187 35.1863 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E6ZC<E9)!<E6fG<E9)!<E6ZC<E9)!<E6fK<E9)!~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
gsave
.6102 429.61 mo
666.412 429.61 li
666.412 .198212 li
.6102 .198212 li
cp
clp
45.0262 98.314 mo
45.0262 78.814 li
45.4461 78.814 li
45.4461 98.314 li
cp
40.8262 79.714 mo
45.2059 70.954 li
49.6461 79.714 li
.75 .68 .67 .902 cmyk
f
155.726 98.734 mo
155.726 79.234 li
156.206 79.234 li
156.206 98.734 li
cp
151.586 80.134 mo
155.966 71.374 li
160.346 80.134 li
f
148.526 45.994 mo
148.526 44.974 li
148.449 42.886 148.813 40.814 149.306 38.794 cv
149.546 37.894 li
151.406 38.434 li
151.166 39.334 li
151.226 39.274 li
150.986 40.234 li
150.986 40.174 li
150.806 41.134 li
150.806 41.074 li
150.686 42.094 li
150.686 42.034 li
150.566 43.054 li
150.566 42.994 li
150.506 44.014 li
150.506 43.954 li
150.506 45.994 li
cp
152.066 32.254 mo
152.366 31.774 li
153.74 29.754 155.338 28.003 157.406 26.674 cv
157.826 26.374 li
158.906 28.054 li
158.486 28.294 li
158.546 28.294 li
157.886 28.774 li
157.886 28.714 li
157.226 29.254 li
157.286 29.194 li
156.626 29.794 li
156.686 29.734 li
156.086 30.334 li
156.086 30.274 li
155.546 30.934 li
155.546 30.874 li
155.006 31.534 li
155.006 31.474 li
154.466 32.194 li
154.526 32.134 li
153.986 32.854 li
154.046 32.854 li
153.746 33.334 li
cp
163.706 24.214 mo
163.886 24.214 li
166.416 23.809 169.286 24.34 171.626 25.354 cv
171.986 25.534 li
171.146 27.334 li
170.786 27.154 li
170.846 27.214 li
170.066 26.854 li
170.126 26.914 li
169.406 26.614 li
169.466 26.674 li
168.626 26.434 li
168.686 26.434 li
167.906 26.254 li
167.966 26.254 li
167.186 26.134 li
167.246 26.134 li
166.406 26.074 li
166.466 26.074 li
165.626 26.074 li
165.686 26.074 li
164.846 26.074 li
164.906 26.074 li
164.126 26.134 li
164.186 26.134 li
164.066 26.194 li
cp
177.026 29.314 mo
177.266 29.554 li
178.857 31.383 180.285 33.719 181.166 35.974 cv
181.286 36.334 li
179.426 36.994 li
179.306 36.694 li
178.946 35.854 li
179.006 35.914 li
178.586 35.074 li
178.586 35.134 li
178.166 34.294 li
178.226 34.354 li
177.746 33.574 li
177.806 33.574 li
176.846 32.134 li
176.846 32.194 li
176.306 31.534 li
176.366 31.534 li
175.766 30.874 li
175.826 30.934 li
175.526 30.634 li
cp
182.666 42.334 mo
182.726 42.874 li
182.899 45.345 182.77 47.7 182.306 50.134 cv
182.186 50.494 li
180.266 50.014 li
180.386 49.714 li
180.326 49.774 li
180.686 47.854 li
180.686 47.914 li
180.746 46.894 li
180.746 46.954 li
180.806 45.934 li
180.806 45.994 li
180.866 44.914 li
180.866 44.974 li
180.806 43.954 li
180.806 44.014 li
180.746 42.994 li
180.746 43.054 li
180.686 42.514 li
cp
180.086 56.254 mo
179.906 56.554 li
178.919 58.558 177.076 60.765 175.346 62.194 cv
174.806 62.614 li
173.606 61.054 li
174.086 60.694 li
174.026 60.694 li
174.686 60.154 li
174.626 60.214 li
175.286 59.614 li
175.226 59.614 li
175.826 59.014 li
175.766 59.014 li
176.366 58.354 li
176.306 58.414 li
176.846 57.754 li
177.326 57.034 li
177.326 57.094 li
177.806 56.314 li
177.746 56.374 li
178.226 55.594 li
178.166 55.654 li
178.346 55.354 li
cp
169.226 65.374 mo
169.166 65.374 li
166.611 66.128 163.845 65.901 161.306 65.194 cv
160.886 65.014 li
161.486 63.154 li
161.966 63.274 li
161.906 63.274 li
162.686 63.514 li
162.626 63.454 li
163.406 63.634 li
163.346 63.634 li
164.186 63.754 li
164.126 63.754 li
164.906 63.814 li
164.846 63.814 li
165.686 63.874 li
165.626 63.874 li
166.466 63.814 li
166.406 63.814 li
167.246 63.754 li
167.186 63.754 li
167.966 63.634 li
167.906 63.634 li
168.686 63.454 li
168.626 63.514 li
168.686 63.514 li
cp
155.486 61.774 mo
155.306 61.594 li
153.52 59.924 152.022 57.933 150.986 55.714 cv
150.686 55.114 li
152.486 54.274 li
152.726 54.874 li
152.726 54.814 li
153.146 55.654 li
153.146 55.594 li
153.566 56.374 li
153.566 56.314 li
154.046 57.094 li
153.986 57.034 li
154.526 57.754 li
154.466 57.754 li
155.006 58.414 li
155.006 58.354 li
155.546 59.014 li
156.086 59.614 li
156.686 60.214 li
156.626 60.154 li
156.806 60.274 li
cp
148.886 49.234 mo
148.886 49.114 li
148.706 48.094 li
148.586 47.074 li
148.526 46.054 li
150.506 45.934 li
150.566 46.954 li
150.566 46.894 li
150.686 47.914 li
150.686 47.854 li
150.806 48.814 li
0 .994 1 0 cmyk
f
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PLBAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/PLBAAA+TimesNewRomanPSMT 1 GetGlyphDirectory69 <001C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7E8F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD9AF110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D399924398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D6603C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A83F23AED1F56FC130F21> |!endend end
%ADOEndSubsetFont
LTSFAE+TimesNewRomanPSMT [17.52 0 0 -17.52 0 0 ]msf82.406 276.514 mo(\0006\000D\000O\000L\000Y\000D\000\003)[9.74111 7.77888 4.87056 4.87056 8.76 7.77888 0 ]xsh67.346 297.575 mo(\000D)sh75.1273 297.575 mo(\000E\000V\000R\000U\000S\000W\000L\000R\000Q)[8.76 6.81541 8.76 5.83403 8.76 4.87056 4.87056 8.75999 0 ]xsh255.206 46.174 mo
255.206 45.154 li
255.132 43.117 255.491 41.004 255.986 39.034 cv
256.226 38.134 li
258.086 38.674 li
257.846 39.514 li
257.906 39.454 li
257.666 40.414 li
257.666 40.354 li
257.486 41.314 li
257.366 42.274 li
257.366 42.214 li
257.246 43.234 li
257.246 43.174 li
257.186 44.194 li
257.186 44.134 li
257.186 46.174 li
cp
258.746 32.494 mo
259.046 31.954 li
260.252 30.12 262.264 28.071 264.086 26.854 cv
264.506 26.554 li
265.586 28.234 li
265.166 28.534 li
265.226 28.474 li
263.906 29.434 li
263.966 29.434 li
263.306 29.974 li
263.366 29.914 li
262.766 30.514 li
262.226 31.114 li
262.226 31.054 li
261.146 32.374 li
261.206 32.374 li
260.666 33.094 li
260.726 33.034 li
260.426 33.514 li
cp
270.386 24.394 mo
270.566 24.394 li
273.183 24.121 275.931 24.395 278.306 25.594 cv
278.666 25.774 li
277.826 27.514 li
277.466 27.394 li
277.526 27.394 li
276.806 27.094 li
276.086 26.854 li
276.146 26.854 li
275.366 26.614 li
274.586 26.434 li
274.646 26.494 li
273.866 26.374 li
273.926 26.374 li
273.086 26.254 li
273.146 26.254 li
272.306 26.254 li
272.366 26.254 li
271.526 26.254 li
271.586 26.254 li
270.806 26.374 li
270.866 26.374 li
270.746 26.374 li
cp
283.706 29.494 mo
283.946 29.794 li
285.567 31.54 286.999 33.928 287.846 36.154 cv
287.966 36.514 li
286.106 37.174 li
285.986 36.874 li
285.986 36.934 li
285.626 36.034 li
285.686 36.094 li
285.266 35.254 li
285.326 35.314 li
284.906 34.474 li
284.906 34.534 li
284.426 33.754 li
284.486 33.814 li
284.006 33.034 li
284.006 33.094 li
283.526 32.374 li
282.986 31.714 li
283.046 31.714 li
282.446 31.054 li
282.506 31.114 li
282.266 30.814 li
cp
289.346 42.514 mo
289.406 43.054 li
289.644 45.426 289.425 47.975 288.986 50.314 cv
288.866 50.674 li
286.946 50.254 li
287.066 49.894 li
287.006 49.954 li
287.186 48.994 li
287.186 49.054 li
287.366 48.034 li
287.366 48.094 li
287.426 47.074 li
287.426 47.134 li
287.486 46.114 li
287.486 46.174 li
287.546 45.154 li
287.486 44.134 li
287.486 44.194 li
287.426 43.174 li
287.426 43.234 li
287.366 42.694 li
cp
286.766 56.434 mo
286.646 56.734 li
285.44 58.897 283.887 60.801 282.026 62.434 cv
281.486 62.794 li
280.286 61.234 li
280.766 60.874 li
280.766 60.934 li
281.366 60.334 li
281.366 60.394 li
281.966 59.794 li
281.906 59.854 li
282.506 59.194 li
282.446 59.254 li
283.046 58.594 li
282.986 58.594 li
283.526 57.934 li
284.006 57.214 li
284.006 57.274 li
284.486 56.554 li
284.426 56.554 li
284.906 55.774 li
284.906 55.834 li
285.026 55.534 li
cp
275.906 65.614 mo
275.846 65.614 li
273.136 66.254 270.711 66.189 268.046 65.374 cv
267.566 65.194 li
268.166 63.334 li
268.646 63.514 li
268.586 63.454 li
269.366 63.694 li
269.306 63.694 li
270.086 63.874 li
270.026 63.874 li
270.866 63.994 li
270.806 63.934 li
271.586 64.054 li
271.526 64.054 li
272.366 64.054 li
272.306 64.054 li
273.146 64.054 li
273.086 64.054 li
273.926 63.934 li
273.866 63.994 li
274.646 63.874 li
274.586 63.874 li
275.366 63.694 li
cp
262.166 61.954 mo
262.046 61.834 li
260.156 60.062 258.773 58.247 257.666 55.894 cv
257.366 55.294 li
259.166 54.454 li
259.406 55.054 li
259.406 54.994 li
259.826 55.834 li
259.826 55.774 li
260.246 56.554 li
260.726 57.274 li
260.666 57.214 li
261.206 57.934 li
261.686 58.594 li
262.226 59.254 li
262.226 59.194 li
262.766 59.854 li
262.766 59.794 li
263.366 60.394 li
263.306 60.334 li
263.486 60.454 li
cp
255.566 49.414 mo
255.566 49.354 li
255.386 48.334 li
255.266 47.254 li
255.206 46.234 li
257.186 46.114 li
257.246 47.134 li
257.246 47.074 li
257.366 48.094 li
257.366 48.034 li
257.486 49.054 li
257.486 48.994 li
257.486 49.054 li
0 .994 1 0 cmyk
f
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: JCRAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LTSFAD+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 684 22 <00010044ffe803a10568002e00cdb90014ffc04046111c3f5d2d6d2d7426
7d2d8e2d9a2da50aa918af2dbb02bb07b50ab918bf2d0e5e005f01026514
7514020502090f0c29030603160324149d2daa2dbe2df515070414141402
14ba038e000001f4b301010e22ba030e0028016cb21b0d0bbc0197000a02
020008016cb20e052bbc01210017030d00050121b64011012f110111bf01
9e0030000a01f4000b030f00010217b32f1f011fbc035d002f00c8035c00
182b10f65df4f4ed10f65d71edf4ed003ffdf4e43feded12392fede45d31
30005d717101715d2b013536373635342623220727363633321615140607
161615140606232227263534363332171e02333236353426260139f27756
644770572534a361769289a7686a90fb8a7e412b33251a1a107d46255a75
4faa02e51d256b4c694f678b0b74778d6c5caa432ba1717dfb892c1e2823
3208054617d17660965d>LTSFAD+TimesNewRomanPS-ItalicMT AddT42Char 
LTSFAD+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g22 22 def
end
LTSFAD+TimesNewRomanPS-ItalicMT /Encoding get
dup 51 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LTSFAD+TimesNewRomanPS-ItalicMT*1 [49{/.notdef}rp /g20 /g21 /g22 30{/.notdef}rp /g53 173{/.notdef}rp]LTSFAD+TimesNewRomanPS-ItalicMT nfLTSFAD+TimesNewRomanPS-ItalicMT*1 [21.06 0 0 -21.06 0 0 ]msf259.706 16.834 mo(R)shLTSFAD+TimesNewRomanPS-ItalicMT*1 [12.3 0 0 -12.3 0 0 ]msf272.546 16.834 mo(3)sh38.4859 243.814 mo
38.4859 241.834 li
46.3461 241.834 li
46.3461 243.814 li
cp
52.2859 243.814 mo
52.2859 241.894 li
60.2059 241.894 li
60.2059 243.814 li
cp
66.0859 243.814 mo
66.0859 241.894 li
74.0059 241.894 li
74.0059 243.814 li
cp
79.8859 241.894 mo
87.8059 241.894 li
87.8059 243.874 li
79.8859 243.814 li
cp
93.7461 243.874 mo
93.7461 241.894 li
101.606 241.894 li
101.606 243.874 li
cp
107.546 243.874 mo
107.546 241.894 li
115.406 241.894 li
115.406 243.874 li
cp
121.346 243.874 mo
121.346 241.894 li
129.266 241.894 li
129.266 243.874 li
cp
135.146 243.874 mo
135.146 241.894 li
143.066 241.894 li
143.066 243.874 li
cp
148.946 243.874 mo
148.946 241.894 li
156.866 241.894 li
156.866 243.874 li
cp
162.806 243.874 mo
162.806 241.894 li
170.666 241.894 li
170.666 243.874 li
cp
176.606 243.874 mo
176.606 241.894 li
184.466 241.894 li
184.466 243.874 li
cp
190.406 243.874 mo
190.406 241.894 li
198.326 241.894 li
198.326 243.874 li
cp
204.206 243.874 mo
204.206 241.894 li
212.126 241.894 li
212.126 243.874 li
cp
218.006 243.874 mo
218.006 241.894 li
225.926 241.894 li
225.926 243.874 li
cp
231.866 243.874 mo
231.866 241.894 li
239.726 241.894 li
239.726 243.874 li
cp
245.666 243.874 mo
245.666 241.894 li
253.526 241.894 li
253.526 243.874 li
cp
259.466 243.874 mo
259.466 241.894 li
267.386 241.894 li
267.386 243.874 li
cp
273.266 243.874 mo
273.266 241.894 li
281.186 241.894 li
281.186 243.874 li
cp
287.066 243.874 mo
287.066 241.894 li
294.986 241.894 li
294.986 243.874 li
cp
300.926 243.874 mo
300.926 241.894 li
308.786 241.894 li
308.786 243.874 li
cp
314.726 243.874 mo
314.726 241.894 li
322.586 241.894 li
322.586 243.874 li
cp
328.526 243.874 mo
328.526 241.894 li
336.446 241.894 li
336.446 243.874 li
cp
342.326 243.874 mo
342.326 241.894 li
350.246 241.894 li
350.246 243.874 li
cp
356.126 243.874 mo
356.126 241.954 li
364.046 241.954 li
364.046 243.874 li
cp
369.986 243.874 mo
369.986 241.954 li
377.846 241.954 li
377.846 243.874 li
cp
383.786 241.954 mo
391.646 241.954 li
391.646 243.934 li
383.786 243.874 li
cp
397.586 243.934 mo
397.586 241.954 li
405.506 241.954 li
405.506 243.934 li
cp
411.386 243.934 mo
411.386 241.954 li
419.306 241.954 li
419.306 243.934 li
cp
425.186 243.934 mo
425.186 241.954 li
428.726 241.954 li
428.726 243.934 li
.689 .128 0 0 cmyk
f
1 /1 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: JCRAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal LTSFAD+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 1578 57 <00010100ffe105c9054c0021015d40400009000a0a110814081b06210615
114010021238113d153b193920392148104c117d117c138e118f159d149c
15bd150e651f6420029c11ae11bc110320230123b8ffc0b320223423b8ff
c0b21d3523b8ffc0b31a1b3423b8ffc0b32e3a3423b8ffc0402c2a35090f
0a1d091a201b1d1a0801071d081911181d190f10101e0001140010110001
11101023212014212120b8ff764012100021201a1919090908022100092f
110111b8028ab2107e21ba033e00010142b5004028183f00b8ffc0401019
3a340f001900300080000400192209b80351b1c2182b2b4e10f45d2b2b01
4de4f6f4e45d003f3c3f3c103c103c2b87042e2b0e7d10c487082e182b0e
7d10c4180010ed0110c00010ed0110c00010ed0110c00010ed0110c0b106
02435458400963118211a211b21104005d593130012b2b2b2b2b5d5d5d5d
435c58b9001fffdeb2193920b8ffdeb219391eb8ffc0b114392b2b2b5900
5d015d051336353426232337210706060706070301363736353426273721
07060706060701013770084348240a02170b5741130a0b50021156160f2e
3f0c01980a311d376d76fd041f0469561e2d3c25250122291667fcd702d2
752e1f171b28042525040f1a6aa1fbf2>LTSFAD+TimesNewRomanPS-ItalicMT AddT42Char 
1 2044 87 <00010054ffe802630481001e0106b90005ffde40710f390f400f39a405ef
02fb0e03551b8a00f60103241d3a005b0e030f201d20027f20ef20021e00
0e0f0104050707001d1c1e1b011a1c1d1e18051904010800161a19190404
039300a0020106130b0007071f161914161619161f2819161002490f031f
0302ff0301036c2000af070f8a0eba010100070203400c121640363934c0
16d0160216b8013b400a1f091617161f0a774c182b2b103c2b2b10f65d2b
435c58400f164028143f16401c113f16401e123f2b2b2b5901fdf6ed10e4
10f45d71e42b103c2b10c0870e2e2b057d10c400183f3f3ce4fd3c103c10
3c011112173900111239113939870e7d10c4053c3c0110c910c93130015d
715d5d5d2b2b010333072303061514163332373637170607062322263534
3713233736363702144e9d119cac1c100b19291853215c5238392c3820a7
970a6e925a0481fef03ffdb25f1c111223146719863726372b366f024327
1e779300>LTSFAD+TimesNewRomanPS-ItalicMT AddT42Char 
LTSFAD+TimesNewRomanPS-ItalicMT /CharStrings get begin
/g57 57 def
/g87 87 def
end
LTSFAD+TimesNewRomanPS-ItalicMT /Encoding get
dup 86 /g57 put
dup 116 /g87 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/LTSFAD+TimesNewRomanPS-ItalicMT*1 [49{/.notdef}rp /g20 /g21 /g22 30{/.notdef}rp /g53 3{/.notdef}rp /g57 29{/.notdef}rp /g87 139{/.notdef}rp]LTSFAD+TimesNewRomanPS-ItalicMT nfLTSFAD+TimesNewRomanPS-ItalicMT*1 [21.06 0 0 -21.06 0 0 ]msf400.886 231.094 mo(V)shLTSFAD+TimesNewRomanPS-ItalicMT*1 [12.3 0 0 -12.3 0 0 ]msf413.726 231.094 mo(t)shgrestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 /2 ]]
] del_res
/LTSFAE+TimesNewRomanPSMT-Identity-H uf/LTSFAE+TimesNewRomanPSMT /CIDFont ur/LTSFAD+TimesNewRomanPS-ItalicMT*1 uf/LTSFAD+TimesNewRomanPS-ItalicMT uf/JCRAAA+TimesNewRomanPS-ItalicMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
