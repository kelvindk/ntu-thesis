%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: fig-paper.pdf
%%Creator: (Adobe Acrobat 11.0.13)
%%For: cwyou
%%CreationDate: 11/16/15, 11:13 AM
%%BoundingBox: -312 311 273 585
%%HiResBoundingBox: -311.2177 311.2177 272.9533 584.1710
%%CropBox: -311.2177 311.2177 272.9533 584.1710
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 -1 1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1052 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2015-11-16T11:12:59+08:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2015-11-16T11:12:59+08:00"
   pdf:Producer="Acrobat Distiller 10.1.1 (Windows)"
   xmpMM:DocumentID="uuid:2b40594d-5260-494d-95f2-9cb9767be5f3"
   xmpMM:InstanceID="uuid:aa771cdc-455c-45d2-a87b-7f2bb0227c92">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Microsoft PowerPoint - fig-paper.pptx</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>cwyou</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -584.171 translate
pgsv
[0 1 -1 0 272.953 0 ]ct
gsave
np
gsave
0 0 mo
0 584.171 li
272.953 584.171 li
272.953 0 li
cp
clp
gsave
353.241 732.867 mo
-120.339 732.867 li
-120.339 -108.993 li
353.241 -108.993 li
cp
eclp
-120.339 732.867 mo
353.241 732.867 li
353.241 -109.003 li
-120.339 -109.003 li
cp
false sop
0 0 0 0 cmyk
f
grestore
70.4615 358.166 mo
70.5215 363.806 li
72.4025 418.292 106.258 466.428 156.681 486.986 cv
159.861 488.186 li
160.281 486.926 li
157.161 485.726 li
157.161 485.786 li
152.061 483.566 li
147.081 481.166 li
142.221 478.586 li
137.481 475.826 li
132.861 472.886 li
132.921 472.886 li
128.421 469.826 li
124.101 466.526 li
119.901 463.106 li
115.881 459.506 li
115.881 459.566 li
111.981 455.786 li
111.981 455.846 li
108.261 451.946 li
104.661 447.926 li
104.721 447.926 li
101.241 443.786 li
101.301 443.786 li
98.0015 439.526 li
98.0615 439.526 li
94.9415 435.146 li
92.0615 430.646 li
89.3015 426.026 li
89.3615 426.026 li
86.7815 421.286 li
84.4415 416.486 li
82.2815 411.506 li
82.2815 411.566 li
80.3015 406.526 li
78.5015 401.426 li
76.9415 396.206 li
76.9415 396.266 li
75.5615 390.986 li
74.3615 385.646 li
73.4015 380.246 li
73.4015 380.306 li
72.6815 374.786 li
72.6815 374.846 li
72.1415 369.266 li
72.1415 369.326 li
71.8415 363.746 li
71.7815 358.106 li
cp
157.761 491.426 mo
167.541 490.226 li
160.701 483.146 li
false sop
.75021 .679683 .670222 .90164 cmyk
f
266.601 153.026 mo
141.441 153.026 li
141.441 30.3264 li
266.601 30.3264 li
cp
141.441 153.026 mo
cp
266.121 152.126 mo
265.701 152.607 li
265.701 30.7474 li
266.121 31.2274 li
141.861 31.2274 li
142.281 30.7474 li
142.281 152.607 li
141.861 152.126 li
f
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UJRAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /UJRAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9ddb6d7000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c79660b4ee91a0000b0a00000228668656164f05c337c00000f640000
0036686865610dad126500000f9c00000024686d747852efb9fb00000fc0
00003c966c6f636101e64c3800004c5800003ca06d617870214826250000
88f8000000206e616d65da7d9fcc0000891800000377707265706baf02fe
00008c9000002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
feff0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005deb8546f207a5f0f3cf500190800
00000000bbeb7ccc00000000cf588d38fbfafd8b09ec0836000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000f24040e0000000000000000000001cf000004a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a10023061bffcc061bffcc045a00ac044400610444
00610444006104440061044400610444006104ec00ac04ec009704ff001b
04ff001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8
005f03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b
050c005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a0204
00280204ff390204ff310204ff500204ff4f0204ff7b0204001e02040027
049200ac028d0007028dffa9042800ac042800ac035d00ac035d00810362
00ac035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac
052a00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054f0063054f006306ef0063
042200ac042200ac05620063045800ac045800ac04580053045800ac03ad
004703ad004703ad001503ad001803ad004703ad004703e6000f03e6000f
03e6000f03e6000f052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa048a0022071e003d
071e003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6
001e03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d
03cb006d03cb006d03cb006d03cb006d046500a10465006a047700320477
0032038000a103800030038000a103800020038000200380002c03800029
03800042038000a1038000a1035000a10482006c0482006c0482006c0482
006c0482006c047800a10478008c049d004001ec00a101ecff5801ec0019
01ecff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b
00a1023e0000023eff8c03c900a103c900a102e000a102e0008702e600a1
02e000a102f0003203d500a1060600a1049100a1049100a1049100990491
0078049100a1046600a104aa006604aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006604ba006604ba00660606006603c5
00a103c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049
034f0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359
001c0359001c048d009f048d009c048d009f048d0097048d0075048d009f
048d009f048d009f048d009f048d009f048d009f03fd0021063e0037063e
0037063e0037063e0037063e003703cc0036038300100383001003830010
03830010038300100369004403690044036900080369004403d5005c03d5
005c03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c062f005c062f005c043400990362005a0362005a0362
004e036200570362005a0362005a076f005a06dd005a0601005a0601005a
04340060048c0060046a00600434006103fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025
069a002508d5002504ab0025069b002508d50025043c0025043c0025043c
0025043c0025044f0025044f0025044f0025044f0025043c0025043c0025
067600250676002506760025067600250689002506890025068900250689
00250676002506760025043c0025043c0025067600250609002508430025
043c0025043c002504830025043c00250676002504ed002504ed00250513
00250728002503c4003503c4003503c4003503c4003503c4003504340060
04340060043400600434006004340060043400990434ffad0443fff901d6
008501d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff67
01d6001101d6009903c00085041e008801eaffd501eaffd501eaff6303a3
009903a3009903a3009901d6009901d6002a021c009901d6004b01fb001c
02fd0099066400990434009904340099043400990434004e0434009904a2
ff9d043400990438005a0438005a0438005a0438005a0438004f0438005a
0438005a0438005a0438005a043c005a043c005a06cc005a043400990434
00990434006002ca009902ca009902cafff902ca006e0321005103210051
0321fffe0321fffd032100510321005105ae005105ae00510438009901f1
009902ae002102c4002102ae002102bc002604e600210475002104750021
047500210475002104750021047500210475002104750021047500210475
002105130021074b002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002106d90021043400940434008e0434
0094043400860434004d0434008904340086043400940434009404340094
04340094039d002205b8003505b8003505b8003505b8003505b800350377
0029039f0022039f0022039f0022039f0022039f00220329005903290059
032900070329005903380072036100640378005d02ac004402e5006c024e
004402e5004802b8004701c100240297002a02e9006c01630061016dffd8
0297006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6
006c0230004201e3002302e9006c0285001f03ef002c027e00280286001f
023700420254000002750000029400000000fd080000fce8025600000275
0000029400000000fd080000fce803290000035f0000039400000000fc9f
0000fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a
000003a2000003a800000000fc650000fc600324000002f5000003460000
036700000000fca00000fc7e0327000003490000036a00000000fc9d0000
fc7d030c0000030f0000031100000000fcac0000fca90291000002980000
02a000000000fce90000fce202cf000002c2000002b5000003c1000003e1
0000040000000000fc520000fc3101ce000001d6000001ce000001ce0000
0000fd4d0000fd4d027500840000fd7a027f00840000fd7601f700840231
000004a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec7
03bf003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff520428
00ac0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac
042200ac03ab004603e6000f03e6001e03e6fe6e03e6001e061300000427
0030060000900550005e0550fef903f4001003f40010040400a102fb00a1
03c90023038000a1038000a103690044047800a1047800a104b4006601ec
00a101ec000001ecff5403c900a103e10011060600a1049100a10387005e
04aa006604aa0066047800a103c500a1035b004b0359001c038300100383
0010038300100552000003cc00360558008704b1006604b10066048a0061
048a00610440009904320064039200180430000003a5005903a5005902c8
004e044c0099044c00990441006004780006023200940232ffec0232ff7a
0232ff0f03a3009903b4000004660099039700220302004d0303004d0438
005a0438005a046c002804120076044100590349005c0319000304550090
045500900455007d0455001605360055053b00550369001205a900940592
006405920064028900000000fd0a03f400000000fc360205009702050097
020500970224004801ff006e01ff006e04a10023044d00ad045a00ac0370
00ac037000ac037600ac0527000303e800ac03e8004503e8006106680055
03ca004b052200ac052200ac052200ac020400ac0204ff50028d00070458
00ac045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063
054c006304f900ac042200ac0444006103ad004703e6000f0438000f0438
000f04b800220594000004270030051c00ac04f500ac0472007406f200ac
071e00ac04eb000f061800ac044000ac0462005d04610062070800ac0471
005304ff000f04f2000f0504000003f4001003ee00a2040400a1031400a1
031400a1032700a10480000e038000a1038000300380002c057800440380
0057048900a1048900960489009501ec00a101ecff55023e000003ca00a1
03ca00a104320001060600a1047800a104aa006604a90066046a00a103c5
00a103cb006d034f00490359001c039d001e039d001b042f0022050a0000
03cc0036048e00a1046900a103fa006d062300a1064500a1045f00170583
00a103e800a103e4006b03f00066063200a103ff005c045f001f0463001f
044d000006010001063200a103d5005c044300000430000003d5009902c4
009902c4009902d5009901d6ff58047700170434006003fb005d03fb005d
03fb005d0583003e0362004b04530099045300780453008801d6008501d6
ff7201eaffd503b6009903b6009904150016060200130569005f04470099
062800990438005a0431005a042a009904340086043400990362005a0321
00510319000a06640099039f0022039f001803d2002204fe005103770029
045500990433009903c0004205d4009905fe0099044a000a0554009903c2
0099038b004d038d005d05c6009903cb00380453fff90443fff904270018
036e0000036e0000036e00000000fca50000fca5029b010a029b00bf029b
00bf03b5008503b5005e03b5005e03de0064026000ed026000b10364007a
0361005f01ff002a02240048022400bb020500970586009601ff008c01ff
002a01ff008c01ff002a035900880359002b035900880359002b01ff002a
0359002b02b6007402b600c002b6007402b600c004190075041900ad0419
0075041900ad0317000102df001f03af018a03fc01ae0317000b02df002d
027300450273004503fcfff603fcfff6073e0095073e0095073e0095073e
009503fcfff903fc00c10205009702050097026d0085026d007a027400bf
0274005a0284005602840075024000840240007a024a00b0024a0067026d
0085026d007a027400bf0274005a028400560284007503fc009e03fc0077
03fc007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335
008b057500000556000007f7000007270000073c00000727000006ad00af
06ad00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e
002a03fc0057040e00600434005803fc00b903fc004a040e005303fc006d
0419002b040e003403f30035039f006103be005f039f0058039f00250621
0049083300ac03fc002406e300a10411001d0494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002302b1ff4b03130044055f004405690044051700440569
0044052e00440553004405c9004e05c9004e0567004705b7004705a20047
05cd0027057d004505a20045052a003505b80048084e0048057d005c07c9
005c03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc0059
03fc004503fc006503fc004c03fc005503fc005603fc003d05e9002c0405
003506d300690443006102ed000703fc00080484003a0550005e04660099
066500660454005b0416004a073e009a073e0096073e00c9073e00c9070e
00af070e013a070e00af070e013a0a4e009a0638009f04660028018a0000
01da00000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
0466000004660000046601d004a1002304a1002304a1002304a1001904a1
001504a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a10023
03e800ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e8
003702040015020400a0054c0063054c0063054c0063054c0063054c0063
054c0063054c006305940063059400630594006305940063059400630594
0063052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa
05c600aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5
ffb103d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb8
03d5005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fb
ffcb03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea
0438ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a0
004904a0005a043400940434009404d2009404d2009404d2008c04d20094
04d2004604d20094039f0022039f0002039f0022046a00530466003803f4
001003f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc8
03f4ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380
ffa70380ffa00380ffa20380ff8e0380001101ec000901ec009404aa0066
04aa006604aa002104aa002204aa002104aa002204aa006604ec006604ec
006604ec006604ec006604ec006604ec0066048d009f048d009f0515009f
0515009f0515009a0515009f051500750515009f038300100383fff10383
001001da0000046600000466000004660000046600000466000004660000
046600000466000004c10066052400ac052400ac050600ac049300a10493
00a1047c00a103e6000f02ae00210359001c01d60011043c0025043c0025
043c002506760025067600250676002502f5001c02e7008e0306005a034b
008e02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e
025b008e046d008e0375008d0375005a02d8008e0375005a029b00570280
0046025700040314005702e3001a0445002202b5001c028b001c02b80050
0000fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c1
0000030cffff030c0000030cffff030c0002023100000231000001ffffff
01ffffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa
009802aa009801ce008402aa008202aa008202aa008202aa0082027f008e
027f008e0324000002910084046601fd02aa001402aa0013032900000329
0000032900000329ffff039a00000327000003fcfff903fcfff9039a0000
039a00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000
fdc20000fdc201ce008402aa00140291008302aa001502aa009302aa0093
039a014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000
feb702aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000
039a0000039a0000039a0000039a000004010014040101470000000002aa
ffff02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c8
02aa00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b1
008402aaffff02aaffff075c003c075cffff075cffff075cffff075cffff
075c003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df
003001e7003201e7003200f8004400f8004402070030020700300209004c
0209004c019d0030019d003002070032020700320209004c0209004c0309
004c0309004c015f004c015f004c015200180152001801c3001601c30016
01bf001c01bf001c032700510327005103270051032700510000ffab03bd
ffff041a0000041a00000416000104160001041a0001041a0001041a0001
041a000104010002040100020401000204010002015f004c02aa00c801ce
00c803f100c804ec000f044d00ad0440001e0462005d049d006104ff001b
057e000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a
001c025000ac0226001b042800ac070900aa052affd6054c0063062f0061
04e4000f045800ac03ad004703ab0046043f000f03e6000f0550005e0522
00aa0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac
060300ac054700ac07b700ac071400ac04a100230204ff3a054c00630522
00aa052200aa052200aa052200aa052200aa04a1002304a10023061bffcc
050c005b050c005b04280073054c0063054c006303ca0008089500ac0815
00ac050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe1
03e8006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522
002f052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a10023
03e800ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444
ffe7035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e
02a10007050a00630469001a04a0001b04a10023045a00ac045a00ac045a
00990444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e80084
03e8008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc
00ac04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac
042800a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d7
00ac052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063
054c0063042200ac042200ac045800ac045800ac04580077045800ac03ad
004703ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f
03e6000f052200aa052200aa052200aa052200aa052200aa048a0022048a
0022071e003d071e003d042700300427003003e6001e03bf001503bf003b
03bf003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2
003b0444003803ad005903b500ac046a0027043400990434000403b3005a
043400600430005d0271ffee064300990434009903a300990241002703b4
0014044c0099053e0059043400990321005102e0002102ae002103fc001b
0329005903ca004b0366003a03680050075d006003c00099061e009903d5
005601d6ff570438005a0434007a04340088043400880434008804340088
03fb006203d5005803d50058062f005c044cffe203c4003503a3003a0438
005a0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf
03d5005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02ca
ff7302ca00100434ffff0434008703ca004b0434005104cd0060040e0052
034c005903d5005c03fb005d0438005a0438004f0438005a0438005a039f
00220289009804eb009902ae002106930060069200600362fff003210051
032900590394006403fb003c0240fff70240fff70434006002ff002703e2
002203720049040e00720321005101f300ad032900ad049700ac029b010a
03d5005c0434009904340099043400860362005a04340060043400600434
0060043400600434006003fb005d03fb005d03fb005d03fb003f03fb005d
0271002503c40035043400990434009904340067043400130434009401d6
ff1f01d6ff1f01d6ff5a03a3009903a3009903a3006b01d6008901d6ff58
01d6ff5801d6ff5906640099066400990664009904340099043400990434
0086043400860438004f0438004f0438005a0438005a0434009904340099
02ca009902ca008a02ca000a02caffff0321005103210051032100510321
00030321005102ae002102ae002102aeffd202aeffd20434008904340041
0434007b0434004d04340086039d0001039d002205b8003505b800350377
002903770029039f00220329000103290059032900000434008602aeffc6
05b80035039f002203d5005c01f100530241002703d5002902aeff960463
009903db00990344005903c200360362003b02ee003c03190099053b0055
0471000803ee00a203ee001403cb004803fc006d0477003204d3000803ee
00530380007204a40066038a00680350ffe80482006c03f300130232008e
01ecfffe03c900a1063200910491ffe804aa00660592006e0433000803ed
00a1034f0053035b004b038300080359001c04b10066048d009f03b70010
03690044039000570393006b0398005507ce00a1085500ac055a00a105cd
00ac06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f
048d009f048d009f048d009f03f4001003f40010055cffe20482006c0482
006c03c9005204aa006604aa00660390000007ce00a1085500ac0482006c
065500a1046200a0049100a103f4ffc503f400100380ffb10380004d01ec
fed001ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f
039000570478008c049300a103c50057038c004403f40010038000a104aa
006604aa006604aa006604aa00660383001003f4001003cb002402e00027
0359ffeb0339005004040027048d002703fd00210380ffff023e0000048b
006603ed00270383000c039000550339005001f300ac032900ac049700ac
026000ed03f40010040400a1040400a10404006e03cb006d046500a10465
00a104650081046500a1046500950380002a038000260380004103800000
0380004a035000a10482006c047800a1047800a10478009a047800200478
00a101ecff2a01ecff5503c900a103c900a103c9007e02e000a102e00000
02e0002802e00024060600a1060600a1060600a1049100a1049100a10491
00a1049100a104aa006604aa006604aa006604aa006603c500a103c500a1
03ed00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f
0000034f00490359001c0359001c0359001803590019048d009f048d0079
048d009f048d0075048d009f03fd002103fd0021063e0037063e003703cc
003603cc003603830010036900050369004403690020047800a10359000a
063e00370383001003f4001002e00027035effa703c5002703ed00a104b6
00a103ef00a10369004403cb004803500060039900a1043c0025043c0025
0447002504470025043c0025043c0025044f0025043c0025043c00250676
002506760025068200250682002506760025067600250689002506760025
067600250475002104750021047500210475002104750021047500210475
0021047500210475002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002103d5009604340060043400990434
00990362003b039b005a043400600434006003fb006203fb0062051b0065
0362005a0362004b0435004b043b005d0241fff704340060043400600451
005a039d001f03d0001e0433009404340099043400990241002701d6fff3
023200940267002102e7ffa702f9002701d6009904860099066300940663
0094066400990434ffc204340099045300990438005a05b3005a05920064
0536005502ca002302ca002302ca002302ca009902ca0099028e0094028e
002303980085039800850321005101eaffd50242fff801eaffd5028affc4
02ae004102ae002104a400270476004904550090039d002205b80035039f
00220351001f0329005903d3005903bc004b03bb0056039400640394005e
039400640362005a0507005f03d50099043b005a046b005a04470099028a
ffc403a300270319009904340060039400640394005e066f006006d40060
0719006004f3002103c40021057a0021060c002504ae00990469009903ef
002c03ef00700434ffd5044dffd503d60010050fffe3062f006204120027
03cb006a0444009904590030033f0099036f005501d60085022700000391
009802f000300569005f045300990474005a03cb006304a9006604a80066
0528001406cc00560368003a0438005a0438005a03a8009903cf005203cf
0052033f001b046a009a0465004b05c7004b0664014c03de0020060e0035
034f0042032f00380321005103d0001e02f2009903de00200450009903a8
0099052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e
02a8008e02a800500344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375008d0375005a02b2004802d8008e029b0057
02570004031400570445002202ac004402ac006c02e50048042b004402e5
006c02e5004802b8004702b8004702770046027700460297002a01630061
0297006c0456006c02e6006c02e60045024e003602e6004502e6004502e5
006c01e3002302e9006c02db00460456006c0285001f024a000d02be006c
024600230283002803650055025f00180163006101f6006c02e9006c0285
001f02be006c0246002302e5006c03650050025f00180694009404bbffa7
04bd0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d
0014030fffa70329ffc203c4003b0304006e03c400350688002102410027
026900270468002704db002704c40027043400990451006002710025054c
0060041e009901f0006b067f0099045100990434009902ca006a037b0051
02faffd5039d002203ed0029033c0059047c005c04d800600434006003fb
005d0362005a0362004b03fb006201d600850362003b0233001e04d80094
0376004b02e5006b024e0044026e004402b200440277004201c1002401c1
00070297002a02e9006c0192000001aa006c0163006d0192000001e50000
0194006c017b00530224006e0456006c0456006c031b0000031c006c0304
006e02e600450336004502300042016dffd801e4002302e9000002b8002c
02e6006e02e6006e0285001f023700420294004202a600420272003c02e6
004502e9006c02e9006c016dffd801f6006c01f6002502030025028b006c
03ef002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce
008401ce0084029900650299006c03fc004503fc0065044b0044044b0044
025100f20256000002540000025100f20327000002540000025600000239
00980239009801ce008401ce008402aa008202aa008202aa008202aa0082
02aa004b02aa009302610024015e006c02300042027e00280299006c0310
009603100096031000960310009603100096045700960457009604570096
045700960310004304570043045700430457004304570043045700430457
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310001a0457001a0457001a0457
001a0457001a0457001a0310004204570042045700420457004204570042
045700420457009604570096045700960457009603100042045700420457
0042045700420457004204570042045700420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f03100026045700260457002604570026045700260457002603100042
045700420457004204570042045700420457004204570096045700960457
009604570096031000420457004204570042045700420457004204570042
031000260457002604570026045700260457002604570026031000230457
0023045700230457002304570023045700230310002f0457002f0457002f
0457002f0457002f0457002f0310004b0457004b0457004b0457004b0457
004b0457004b045700960457009604570096045700960310004204570042
045700420457004204570042045700420310001a0457001a0457001a0457
001a0457001a0457001a0310002404570024045700240457002404570024
045700240310002f0457002f0457002f0457002f0457002f0457002f0310
004e0457004e0457004e0457004e0457004e0457004e0457009604570096
045700960457009602aa006202aa006203290000049a00000359002b02aa
008502aa008502aa00c802aa00c8029100840254000003c1ffff03c10000
039a0000022400bb02aa009802aa009802aa009802aa00980440fff60440
fff60302009803270000032700000324000002aa0000071200d4071200d4
02ac004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d9
000001d90000028900000289000002890000028900000000fc660000fc66
032900000329000003290000032900000324000003240000032900000329
00000329000003290000032400000324000003f4000003f4000003f40000
03f40000032400000324000003270000030c000001ffffff01d900000327
000003290000032900000329000004660000046600000466000004660000
03f4000003f4000003f4000003f40000023200b6023200b6054c00630444
006104440043044400610444004303e6000e0456fec803e6000e03ad00ac
054c0063045d001e059700ac04a2000f04440061042200ac043200640375
005a037500420478000604d700510684001404120076041200030362005a
0362003b0362005a0362003b053b0055037800940438005a0399001404c5
009904a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d
03cb004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1
005b03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a
04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1
ff5804a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff22
04a1ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665
fe620665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe82
04bdfe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1
fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea4
04fcfe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1
fe8205d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa
06c0fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261
feaa0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e
0204ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054c
fecf054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550
ff0605f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff06
05f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714
005e0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c
075dfeaa048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a005a048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a005a03a5005903a5005903a5004f03a50059
03a5005203a5005203a5005903a50059044c0099044c0092044c008f044c
0094044c0099044c0092044c0092044c0094044c0099044c0099044c0059
044c0099044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059023200010232ff860232ff83
0232ff62023200000232ff860232ff860232ff600232ff100232fecf0232
ff600232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a
0438005a0438005a0438005a0438005a0438005a0438005a041200760412
007604550090045500820455008204550084045500900455008204550082
045500840455001204550010045500800455009004550090045500410455
00710455007d059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006403f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001005b9001005b9001005b9001005b9001005b9001005b90010
05b9001005b9001005b90010038000a10380004903800049038000a10380
004903800049038000a10380007b047800a1047800a1047800a1047800a1
047800a1047800a1047800a1047800a1047800a1047800a10478006f0478
00a1047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c
00a1063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec0009
01ecff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ec
ff8c01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006603c500a103c500a1038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a038300100389001a038300100389001a0383
00100389001a038300100389001a0383fff50389fff5038300100389001a
038300100389001a04b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b100660675
006606750066067500660675006606750066067500660675006606750066
0675006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1
fe8b04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa
04fcfef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060d
fe780599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc5
0665fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c0
00ac06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a
06c0fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6
fe7b07d5fe7c0714fe6101d9ffff01d900000289000002890000039a0000
03290000032900000324000003290000032900000324000003f4000003f4
00000324000001d9000003270000030c0000023200b601c4007901c40079
01c40079054e00ac0440000a042200ac0366001b044100ac06b2005503ca
004b04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac
052b00630444006103e6000f03e6001e03e6001e0476003005d2000f049a
007404720074047200ad05f6002805f60028020400ac06680055045f00ac
050e000304fc00ac04fc00ac04720074070700ac04a1002304a10023061b
ffcc03e8005905250064052500640668005503ca001503ca004b052200ac
052200ac054c0063054c0063054c00630462004c0438000f0438000f0438
000f04720071035300ac061800ac0366001b048500300427003004400035
065d0037061d003d041a003d070f0003072800ac0515005b0521000f03ca
005a05090003045f009903df00270434009902f90027039f009905c0003e
0362004b03f4009903b6009903eb00270447000a0471009904d8009905f1
0099046f00590362005a0319000a039d0022039d002203b2002904c5000a
03ea004203c0004203c0009904c8001904c800190583003e03cf00990421
0016044700990454009903c0004205b6005f020400ac03d5002e03d50058
062f005c03fb005603fb006203fb00620583003e0362000803bc004b0453
0095045300970438005a0431005a0431005a038b0004039f0022039f0022
039f002203c0002902c400990554009902f9002703b10029037700290434
006006550060059b004b03ba004b061f001606500099044500500481000a
0362005a042b001604a800a103e8002703c500a10314002703ec00a105d0
004403800057041c00a103ca00a103ca002704530017049800a1050100a1
067700a104a2006503cb006d0359001c0383001003830010041300360545
001c041a006d03fa006d03fa00a1054f0020054f002001ec00a105780044
03ff00a1045a0001047800a104a100a103fa006d062f00a103f4001003f4
0010055cffe20380004204a2006504a20065057800440380000303900057
048900a0048900a004aa006604a9006604a9006603e4001e039d001e039d
001e039d001e03fa0044031400a1058300a1031400270417003603cc0036
03e8004a0588004a0559007203d8007205d20001061900a10488006c0444
001c03800068045c00010400000008000000040000000800000002af0000
02000000015500000450000001bc00000199000001000000000000000000
ffdc0000ff25040e0024040e00240329009003fcfff901ff008c03580088
01c400540334005404a400540476010a03fcfffb0273004404ee004f0444
00610444006103ad0027040e005306640099052a0020076000ac064800ac
071e002005f500ac0428001b03e6000f08a80032043afffe0482002104b2
005b0495002003ad0020044400610621004906210065057800e6059d00e6
03fc005e070100bc03fc0062045201d7045200be0400fff6040001bd0400
01bd0400fff6040001bd0400fff6070900aa045c005b047200ad04440071
04d0003a0562007403c9001006640094042f005f04180015035a0053040b
00300441006f03260010032700030327000303270003025400c0025400c0
025400c8025400c802aaff8c02aaff8c04e0005907f4000a07e200140798
0003076c0061064100ac050b002406a700ac05c80055073f00ac03ca0021
0600009004b8001c085c0063054c003b076c0061076c006104440061056a
0022053400990433001b05af00990480001b060b0099034e001605a90094
03d2ffc40745005a049c005a06420059056a00220362005a06b8006d05c3
00a10453001205c000a1050b0046066400a10380002205580087042e0022
07f10066050f006806b0006d06b8006d039c006d03c7009602aa00db040e
008d0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b
0aa000b404d5009202d5008302d5008304d500b202d500700aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0000fc48000000000000fd170000000000000000039a0000039a00000324
00000324000003240000039a000003240000032400000256000003290000
0329000003bdffff02aaff8c055001e5027f008403240000039a00000256
000000000027000000e1000000ed0000001b032400000324000003240000
032400000324000003240000032400000324000003240000032400000000
0000000000000000000000000000039a0000039a00000346000000000027
03c10000030f00000346000003460000039a0000034800000348000003a2
000003a2000002560000035f00000000009e00000067000000220000009e
0000009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6
fe4703e6fe4703e6000e03e6000e03f4001003f4001003f4001005b80010
05b8001005b80010047800a1047800a10478006f063c00a1063c00a1063c
006f0383ffc80383ffc80383001004b1006604b1006604b1006606750066
06750066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000
fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc00
0000fc000000fc000000fc000000fc000000fc000000fc000000fc000000
fdd00000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff
0000fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000
fd340000fd340000fd340000fd340000fd600000fd600000fd730000fd73
0000fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000
fca10000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae
0000fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000
fdd00000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc65
0000fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000
fc650000fc650000fc650000fc650000fc460000fd790000fcde0000fcde
0000fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000
fce30000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde
0000fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000
fc970000fc970000fc560000fc560000fc910000fd820000fd820000fd70
0000fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000
fd8f0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb
0000fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000
fd710000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc26
0000fc290000fc290000fc270000fc270000fc270000fc270000fc350000
fc350000fc350000fc350000fdb60000fda80000fda80000fce30000fd46
0000fd460000fd470000fd470000fd020000fd020000fd020000fd020000
fc650000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca1
0000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000
fc370000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd33
0000fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000
fbff0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd
0000fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000
fc6a0000fc6a03e6fe940389ffcb0389ffcb0389001a01d6008904340060
043400600434006004340060043c0025067600250aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4047d
00a3040e00230054001b002e000000>
<00000000000001420000014200000142000001420000025e0000025e0000
025e0000025e0000025e0000025e0000025e0000025e0000025e0000025e
0000025e0000025e0000025e000003ca000004c4000004c4000004c40000
04c4000004c4000004c40000059e0000059e0000059e0000059e0000059e
0000059e0000059e0000059e0000059e0000059e0000059e0000059e0000
059e0000059e0000059e0000059e0000059e0000059e0000059e0000059e
0000059e0000059e0000059e0000059e0000059e0000059e0000059e0000
059e0000059e0000059e0000059e0000059e0000059e0000059e0000059e
0000059e0000059e0000059e0000059e0000059e0000059e0000059e0000
059e0000059e000006f8000006f8000006f8000006f8000006f8000006f8
000006f8000006f8000006f8000006f8000006f8000006f8000006f80000
06f8000006f8000006f8000006f8000006f8000006f8000007ea000007ea
000007ea000007ea000007ea000007ea000007ea0000098e0000098e0000
098e0000098e0000098e0000098e0000098e0000098e0000098e0000098e
0000098e0000098e0000098e0000098e0000098e0000098e0000098e0000
098e0000098e0000098e0000098e0000098e0000098e0000098e0000098e
0000098e0000098e0000098e0000098e0000098e0000098e0000098e0000
098e0000098e0000098e0000098e0000098e0000098e0000098e0000098e
0000098e0000098e0000098e0000098e0000098e0000098e0000098e0000
098e0000098e0000098e0000098e0000098e0000098e0000098e0000098e
0000098e0000098e0000098e0000098e0000098e0000098e0000098e0000
098e0000098e0000098e0000098e0000098e0000098e0000098e0000098e
0000098e0000098e0000098e0000098e0000098e0000098e0000098e0000
098e0000098e0000098e0000098e0000098e0000098e0000098e0000098e
0000098e0000098e0000098e0000098e0000098e0000098e0000098e0000
098e0000098e0000098e0000098e0000098e0000098e0000098e0000098e
0000098e0000098e0000098e0000098e0000098e0000098e0000098e0000
098e0000098e0000098e0000098e0000098e0000098e0000098e0000098e
0000098e0000098e0000098e0000098e0000098e0000098e0000098e0000
098e0000098e0000098e0000098e0000098e0000098e0000098e0000098e
0000098e0000098e0000098e0000098e0000098e0000098e0000098e0000
098e0000098e0000098e0000098e0000098e0000098e0000098e0000098e
0000098e0000098e0000098e0000098e0000098e0000098e0000098e0000
098e0000098e0000098e0000098e0000098e0000098e0000098e0000098e
0000098e0000098e0000098e0000098e00000aec00000aec00000aec0000
0aec00000aec00000aec00000aec00000aec00000aec00000aec00000aec
00000aec00000aec00000c1e00000d3600000d3600000d3600000d360000
0d3600000d3600000d3600000d3600000d3600000d3600000e6400000e64
00000e6400000e6400000fa600000fa600000fa600000fa600000fa60000
0fa600000fa600000fa600000fa600000fa6000010ac000010ac000010ac
000010ac000010ac000010ac000010ac000010ac000010ac000010ac0000
10ac000010ac000010ac000010ac000010ac000010ac000010ac000010ac
000010ac000010ac000010ac000010ac000010ac000010ac000010ac0000
10ac000010ac000010ac000010ac000010ac000010ac000010ac000010ac
000010ac000010ac000010ac000010ac000010ac000010ac000010ac0000
128600001286000012860000128600001286000012860000128600001286
00001286000012860000138e0000138e0000138e00001480000014800000
148000001480000014800000148000001480000014800000148000001480
0000148000001480000014800000148000001480000015b4000015b40000
15b40000163a0000163a0000163a0000163a0000163a0000163a000017fc
0000191e0000191e0000191e0000191e0000191e0000191e0000191e0000
1a3a00001a3a00001a3a00001a3a00001a3a00001a3a00001a3a00001a3a
00001a3a00001a3a00001a3a00001a3a00001b6800001b6800001b680000
1c5a00001c5a00001c5a00001c5a00001de600001de600001de600001de6
00001de600001de600001de600001de600001de600001de600001ede0000
1ede00001ede00001ede00001ede00001ede00001ede00001ede00001ede
00001ede00001ede00001ede00001ede00001ede00001ede00001ede0000
1ede00001ede00001ede00001ede00001ede00001ede00001ede00001ede
00001ede00001ede00001ede00001ffe00001ffe00001ffe00001ffe0000
1ffe00001ffe00001ffe00001ffe00001ffe00001ffe00001ffe0000216c
0000216c0000216c0000216c0000216c0000216c0000216c000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
223600002236000022360000223600002236000022360000223600002236
000022360000223600002236000022360000223600002236000022360000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
228600002286000022860000228600002286000022860000228600002286
000022860000228600002286000022860000228600002286000022860000
22860000228600002286000100000f270120001000c3000700020010002f
0065000011902410000400010000000e00ae000000030000000000640000
0000000300000007007600640001000000000000003200da000100000000
0003000e010c0001000000000004000e011a0001000000000006000e0128
0001000000000007003b0136000300010409000000640171000300010409
0001001c01d50003000104090002000e01f10003000104090003001c01ff
0003000104090004001c021b0003000104090006001c0237000300010409
00070076025300a9002000320030003100340020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e00430061006c0069006200720069
00200069007300200061002000740072006100640065006d00610072006b
0020006f006600200074006800650020004d006900630072006f0073006f
00660074002000670072006f007500700020006f006600200063006f006d
00700061006e006900650073002ea92032303134204d6963726f736f6674
20436f72706f726174696f6e2e20416c6c20526967687473205265736572
7665642e4541474e4d4f2b43616c696272694541474e4d4f2b43616c6962
72694541474e4d4f2b43616c6962726943616c6962726920697320612074
726164656d61726b206f6620746865204d6963726f736f66742067726f75
70206f6620636f6d70616e6965732e00a900200032003000310034002000
4d006900630072006f0073006f0066007400200043006f00720070006f00
72006100740069006f006e002e00200041006c006c002000520069006700
6800740073002000520065007300650072007600650064002e0045004100
47004e004d004f002b00430061006c006900620072006900520065006700
75006c00610072004500410047004e004d004f002b00430061006c006900
6200720069004500410047004e004d004f002b00430061006c0069006200
720069004500410047004e004d004f002b00430061006c00690062007200
6900430061006c0069006200720069002000690073002000610020007400
72006100640065006d00610072006b0020006f0066002000740068006500
20004d006900630072006f0073006f00660074002000670072006f007500
700020006f006600200063006f006d00700061006e006900650073002e00
b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[8839 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 606 17 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>UJRAAA+Calibri AddT42Char 
2 2446 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>UJRAAA+Calibri AddT42Char 
2 3102 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>UJRAAA+Calibri AddT42Char 
2 3382 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>UJRAAA+Calibri AddT42Char 
2 3684 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>UJRAAA+Calibri AddT42Char 
2 5248 364 <00010099fffa037c057100340095400c3f3601293101314012014d31b8ff
d0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0b30b014d
31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8fff6b30c01
4d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c014d0016
220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f10f12b2b
2b2b32e02b2b2b2b2b31305d5d25140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>UJRAAA+Calibri AddT42Char 
2 6140 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>UJRAAA+Calibri AddT42Char 
2 7016 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>UJRAAA+Calibri AddT42Char 
2 7258 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>UJRAAA+Calibri AddT42Char 
2 8190 448 <00010022fffa037b03bc002c00e3b90023fff840170b0c014c1f080b0c01
4c251f011e080b0c014c251e0116b8fff0b30b014d15b8fff0b30b014d14
b8ffe8b30b014d13b8ffe8b30b014d12b8ffe8b30b014d11b8fff040370b
014d37110126110127100128050122280b014d3d220124220121280b014d
3f210124210120280b014d3d2001242001270f0176210121b8ffd0400911
1548212013014d21b8ffe8400910014d21200f014d21b8ffe8b30c014d21
b8fff0400c0b014d212849210b1a490b4c003f3f12393f012f2b2b2b2b2b
002b5d31305d5d5d2b5d5d2b5d5d2b015d5d5d5d2b2b2b2b2b2b5d2b5d2b
2b01140e0207010e0323222e0227012e0235343e0233321e021713173713
3e0333321e02037b01020302fecd040d1a281e1e28190e04fece04050108
131f171d23130904fe0403fb020a13211b171e1107039f04090a0c07fca9
0b0e080304080e0a03570c120903080c070203080c09fd1a0c0c02e6090c
080302080b00>UJRAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>UJRAAA+Calibri AddT42Char 
UJRAAA+Calibri /CharStrings get begin
/B 17 def
/a 258 def
/c 272 def
/d 282 def
/e 286 def
/k 364 def
/n 374 def
/r 396 def
/s 400 def
/v 448 def
end
UJRAAA+Calibri /Encoding get
dup 66 /B put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 107 /k put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 118 /v put
pop
end
%ADOEndSubsetFont
/CNQIZX+Calibri /UJRAAA+Calibri findfont ct_VMDictPut/CNQIZX+Calibri*1 [66{/.notdef}rp /B 30{/.notdef}rp /a /.notdef /c /d /e 5{/.notdef}rp /k 2{/.notdef}rp /n 3{/.notdef}rp /r /s 2{/.notdef}rp /v 137{/.notdef}rp]CNQIZX+Calibri nfCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf161.421 145.947 mo(Backend)[-9.51697 -8.37811 -7.39703 -7.44781 -8.71094 -9.1839 0 ]ysh%ADOBeginSubsetFont: CFIBAA+Calibri-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (CFIBAA+Calibri)%%Title: (CFIBAA+Calibri Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /CFIBAA+Calibri def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-503 -307 1240 1026} def/FontInfo 4 dict dup begin/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3879 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C692334252531335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244BC77AFB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5D8A99AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0693AEA3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F5302816818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98D9F308DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6FECDBA0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269E0981B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F3688A380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997B52F6BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7BA3BA965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C032449885D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D5A11AF573B17CF9F38> |3 <001C60D8A8C9B888C146> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /CFIBAA+Calibri-Identity-H /Identity-H 0 [/CFIBAA+Calibri] ct_ComposeFont pop end end
%ADOEndSubsetFont
/CNQIZY+Calibri /CFIBAA+Calibri-Identity-H findfont ct_VMDictPutCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf161.421 86.1265 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf161.421 81.9866 mo(server)[-6.83466 -8.70923 -6.30719 -7.74548 -8.70923 0 ]ysh244.581 392.666 mo
160.641 392.666 li
160.641 257.486 li
244.581 257.486 li
cp
160.641 392.666 mo
cp
244.161 391.826 mo
243.741 392.246 li
243.741 257.966 li
244.161 258.386 li
161.121 258.386 li
161.541 257.966 li
161.541 392.246 li
161.121 391.826 li
.75021 .679683 .670222 .90164 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UJRAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CNQIZX+Calibri gcheck setglobal} if
2 1784 87 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>CNQIZX+Calibri AddT42Char 
2 5006 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>CNQIZX+Calibri AddT42Char 
2 6714 393 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>CNQIZX+Calibri AddT42Char 
2 7654 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>CNQIZX+Calibri AddT42Char 
CNQIZX+Calibri /CharStrings get begin
/P 87 def
/i 349 def
/p 393 def
/t 410 def
end
CNQIZX+Calibri /Encoding get
dup 80 /P put
dup 105 /i put
dup 112 /p put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CNQIZX+Calibri*1 [66{/.notdef}rp /B 13{/.notdef}rp /P 16{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i /.notdef /k 2{/.notdef}rp /n /.notdef /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]CNQIZX+Calibri nfCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf180.681 365.847 mo(Patient)[-8.7074 -8.22046 -5.88159 -4.01215 -8.70746 -8.99292 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf180.681 315.447 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf180.681 311.186 mo(app)[-8.38339 -9.18912 0 ]ysh225.381 578.366 mo
165.081 578.366 li
165.081 448.226 li
225.381 448.226 li
cp
165.081 578.366 mo
cp
224.961 577.526 mo
224.481 577.946 li
224.481 448.646 li
224.961 449.126 li
165.501 449.126 li
165.981 448.646 li
165.981 577.946 li
165.501 577.526 li
.75021 .679683 .670222 .90164 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UJRAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CNQIZX+Calibri gcheck setglobal} if
2 2026 94 <00010047ffed03630521004900e7b90041ffe8b40f10014c41b8fff0b30d
014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d41b8022c
402b32401314014c324011014d243224320c1b180f10014c1b100d014d1b
1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d00b8ffc0
b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb0127003700
0a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c3711371116
3cb8010cb5411b05295316b80129b10556003fed3f123939ed1139392f2f
2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b2be12b2b
2b2b2b313001140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0603634377a15d41
6f573b170b04080c080e3350714a385d43243252696e6852333b6991542b
574d3c1306040203060b070b2f445d3a3650341a32536a6e6a5333016b5b
8e633216202218251f161d12072228231e375033374e3b31333e54714f51
7f562d0f191f130b111813121c13091c231d1d304225364e3c32333d5371
>CNQIZX+Calibri AddT42Char 
2 4268 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>CNQIZX+Calibri AddT42Char 
2 5556 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>CNQIZX+Calibri AddT42Char 
CNQIZX+Calibri /CharStrings get begin
/S 94 def
/g 336 def
/l 367 def
end
CNQIZX+Calibri /Encoding get
dup 83 /S put
dup 103 /g put
dup 108 /l put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CNQIZX+Calibri*1 [66{/.notdef}rp /B 13{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i /.notdef /k /l /.notdef /n /.notdef /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]CNQIZX+Calibri nfCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf190.581 570.507 mo(Saliva)[-8.04169 -8.39215 -4.01215 -4.01215 -7.68597 0 ]ysh%ADOBeginSubsetFont: CFIBAA+Calibri-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/CFIBAA+Calibri 1 GetGlyphDirectory882 <001C60D8A8C9B83844CBABF75256C23589A050D2F18EC6AAEA2DCAA879D629F0698E85A7558DC3794B984219238EC694626573D368F005AA7EB3DEDB55CE7021DF056336AEE3D77182F0055C3CB6954365C7523BFC42E70B7DCDE95A> |!endend end
%ADOEndSubsetFont
CNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf190.581 529.946 mo(\003r)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf190.581 524.606 mo(screening)[-6.86621 -7.42679 -5.94629 -8.74075 -8.74072 -9.21368 -4.02789 -9.21368 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf190.581 456.206 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf211.581 536.306 mo(device)[-9.1734 -8.70044 -7.89441 -3.98761 -7.38651 0 ]ysh195.261 251.906 mo
217.941 172.526 li
219.201 172.886 li
196.521 252.266 li
cp
214.101 172.346 mo
220.761 165.086 li
222.561 174.746 li
.75021 .679683 .670222 .90164 cmyk
f
231.321 168.266 mo
208.641 247.706 li
207.381 247.346 li
230.061 167.906 li
cp
212.481 247.886 mo
205.821 255.086 li
204.021 245.426 li
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UJRAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CNQIZX+Calibri gcheck setglobal} if
2 322 4 <00020023fffa047e051400220026009db90024ffe8b40c10014c23b8ffe8
b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8fff0401a0b
10014c25100b10014c0d100b10014c0c100b10014c40280125b8fff0402c
0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02af23bf23
cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d1117391112
3939113310ed3211333130012b5d2b2b2b2b2b2b002b2b25161606062322
2e02270321030e03232226263637013e0333321e02170723032104750801
10251f1f251309046ffde66a030a13231c1d250f010801b2040d19271e20
2a1a0e047b01df01c23d161b0e0403070c09013bfec9090d0904050e1b16
04b20b0e080303080f0b8dfd7b00>CNQIZX+Calibri AddT42Char 
2 4742 346 <00010099fffa03a0057100320079b43f34012a13b8ffe8b30b014d13b8ff
f0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f840171e0b
0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a00400c01
4d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239012f2f2b
e12b2b2b2b10e12b2b2b2b3931305d25140e0223222e023511342e022322
060711140e0223222e023511343e0233321e021511363633321e021503a0
0812201819201208182e49303e7c44081220191820130707132018192012
084790495a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08
0404080b080538080c080404080c08fde54b493d66896100>CNQIZX+Calibri AddT42Char 
2 5690 373 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>CNQIZX+Calibri AddT42Char 
2 6430 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>CNQIZX+Calibri AddT42Char 
CNQIZX+Calibri /CharStrings get begin
/A 4 def
/h 346 def
/m 373 def
/o 381 def
end
CNQIZX+Calibri /Encoding get
dup 65 /A put
dup 104 /h put
dup 109 /m put
dup 111 /o put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CNQIZX+Calibri*1 [65{/.notdef}rp /A /B 13{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /.notdef /v 137{/.notdef}rp]CNQIZX+Calibri nfCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf180.141 236.427 mo(Behavioral)[-9.5275 -8.7215 -9.19434 -8.09961 -7.91547 -4.00861 -9.22943 -5.76581 -8.38861 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf180.141 161.546 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf201.141 214.706 mo(data)[-9.17334 -8.22046 -5.6416 0 ]ysh251.301 256.585 mo(Achievements)[-10.1475 -7.41455 -9.20139 -4.01566 -8.72849 -7.74548 -8.72852 -14.0019 -8.72852 -9.05243 -5.87286 0 ]ysh200.061 444.266 mo
213.741 399.626 li
215.001 400.046 li
201.321 444.686 li
cp
209.901 399.386 mo
216.681 392.306 li
218.301 401.966 li
.75021 .679683 .670222 .90164 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UJRAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CNQIZX+Calibri gcheck setglobal} if
2 7902 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>CNQIZX+Calibri AddT42Char 
CNQIZX+Calibri /CharStrings get begin
/u 437 def
end
CNQIZX+Calibri /Encoding get
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CNQIZX+Calibri*1 [65{/.notdef}rp /A /B 13{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]CNQIZX+Calibri nfCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf244.521 464.907 mo(Screening)[-8.03293 -7.40225 -5.88672 -8.71622 -8.71622 -9.18915 -4.00336 -9.18915 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf244.521 395.547 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf265.521 450.448 mo(result)[-5.88669 -8.70746 -6.8382 -9.17334 -4.01215 0 ]ysh115.461 331.286 mo
146.361 331.286 li
146.361 332.606 li
115.461 332.606 li
cp
145.461 327.566 mo
154.221 331.946 li
145.461 336.326 li
.75021 .679683 .670222 .90164 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
CNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf78.8015 521.067 mo(Saliva)[-8.04169 -8.39212 -4.01215 -4.01215 -7.68597 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf78.8015 480.506 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf78.8015 476.366 mo(sample)[-6.84341 -8.38516 -13.9914 -9.19089 -4.00513 0 ]ysh213.981 147.026 mo
170.841 147.026 li
170.841 36.7464 li
213.981 36.7464 li
cp
170.841 147.026 mo
cp
213.501 146.126 mo
213.081 146.546 li
213.081 37.2274 li
213.501 37.6464 li
171.261 37.6464 li
171.681 37.2274 li
171.681 146.546 li
171.261 146.126 li
.75021 .679683 .670222 .90164 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UJRAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CNQIZX+Calibri gcheck setglobal} if
2 1438 68 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d15>CNQIZX+Calibri AddT42Char 
CNQIZX+Calibri /CharStrings get begin
/M 68 def
end
CNQIZX+Calibri /Encoding get
dup 77 /M put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CNQIZX+Calibri*1 [65{/.notdef}rp /A /B 10{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]CNQIZX+Calibri nfCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf187.761 131.907 mo(Monitoring)[-14.9725 -9.22589 -9.19086 -4.00519 -5.69934 -9.2312 -6.10742 -4.00513 -9.19092 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf187.761 51.9876 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf208.761 120.328 mo(services)[-6.85571 -8.73022 -6.30719 -7.92596 -4.0174 -7.41626 -8.73029 0 ]ysh238.101 385.946 mo
194.961 385.946 li
194.961 265.766 li
238.101 265.766 li
cp
194.961 385.946 mo
cp
237.681 385.046 mo
237.261 385.526 li
237.261 266.186 li
237.681 266.606 li
195.441 266.606 li
195.861 266.186 li
195.861 385.526 li
195.441 385.046 li
.75021 .679683 .670222 .90164 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UJRAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CNQIZX+Calibri gcheck setglobal} if
2 970 18 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e>CNQIZX+Calibri AddT42Char 
CNQIZX+Calibri /CharStrings get begin
/C 18 def
end
CNQIZX+Calibri /Encoding get
dup 67 /C put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CNQIZX+Calibri*1 [65{/.notdef}rp /A /B /C 9{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]CNQIZX+Calibri nfCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf222.441 381.927 mo(Camera)[-9.33649 -8.39041 -13.9966 -8.72324 -5.76581 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf222.441 327.328 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf222.441 323.247 mo(sensors)[-6.83994 -8.71445 -9.18738 -6.83994 -9.22241 -5.82712 0 ]ysh261.561 146.006 mo
218.421 146.006 li
218.421 38.2463 li
261.561 38.2463 li
cp
218.421 146.006 mo
cp
261.081 145.107 mo
260.661 145.586 li
260.661 38.6664 li
261.081 39.1464 li
218.841 39.1464 li
219.261 38.6664 li
219.261 145.586 li
218.841 145.107 li
.75021 .679683 .670222 .90164 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UJRAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CNQIZX+Calibri gcheck setglobal} if
2 1220 24 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>CNQIZX+Calibri AddT42Char 
2 2796 271 <00020099ffed03d50571002a003d0085b53f3f010a2136b8fff6b30c014d
36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36b801f840
1b152b120c014d2b200d014d2b180b014d2b1810014d2b100f014d2bb802
0a400900150a363521040530b80105b6264a1b46104c39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b323931305d01
140e0223222e022715140e0223222e023511343e0233321e0215113e0333
321e0207342e0223220e020711161633323e0203d53363905d2b49464627
08121b15141c12060713201819201208284b484828628b5728ae15345640
203e404527447c433e58371901e775bb844611263a296e080c070404070c
080538080c080404080c08fde5293823104e83b0754582643d122a4232fe
9953573c637b>CNQIZX+Calibri AddT42Char 
CNQIZX+Calibri /CharStrings get begin
/D 24 def
/b 271 def
end
CNQIZX+Calibri /Encoding get
dup 68 /D put
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CNQIZX+Calibri*1 [65{/.notdef}rp /A /B /C /D 8{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]CNQIZX+Calibri nfCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf245.841 125.247 mo(Database)[-10.7749 -8.22046 -5.64154 -8.40094 -9.19788 -8.39215 -6.8504 0 ]ysh44.9615 328.226 mo
44.9615 322.466 li
44.4815 322.466 li
44.4815 328.226 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[5.76 0 0 .48 -55.273 720.328 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 1 
/M[12 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~S#3'[VP^;rYctF&~>
<~O.;`1S=H.KW2QPP~>
<~BPhU'D/F99G'81L~>
<~,rIP;2)RKl:JXq>~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
45.4415 330.626 mo
45.4415 320.546 li
44.9615 320.546 li
44.9615 330.626 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[10.08 0 0 .48 -57.673 719.848 ]ct
snap_to_device
<<
/T 1
/W 21 
/H 1 
/M[21 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Q'@N+[aisWbK%oRe'lOda/YK.Q2~>
<~L4k5BZ.7FRahl9Dd*TkW_PE!\L&~>
<~BQ.p3Cj'lBG_(?uJqAZ*JTGLPCB~>
<~+!`*f7>-&9I#XMlVP^)ONC4mb+T~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
45.9215 331.106 mo
45.9215 320.066 li
45.4415 320.066 li
45.4415 331.106 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[11.04 0 0 .48 -58.153 719.368 ]ct
snap_to_device
<<
/T 1
/W 23 
/H 1 
/M[23 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~M6ah:e(!!pb/_KAa3;cLbK%uM`3kI~>
<~GGhmgd*^=[]!f#W]>DG"^q7e-^TD_~>
<~B7PSdJqSlDR@Bb7QBIDqPa7)ZIsPT~>
<~'OQ0RVQR;Idam("c,IZCaN^r^Jm/l~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
46.4015 332.066 mo
46.4015 319.106 li
45.9215 319.106 li
45.9215 332.066 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[12.96 0 0 .48 -59.113 718.888 ]ct
snap_to_device
<<
/T 1
/W 27 
/H 1 
/M[27 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~NN'S1_o0L5a2Q$9`5KU4`5KU4`5Kg>a/+[~>
<~I[ROS[C!<O]!\rQ['[3I['d<M[(!oi_O#N~>
<~?A+?)SXuF?Q^s\=St;OFSt2FBSstk"M1TO~>
<~'2t:>eCrX)d+I")g=k97g=Y'0g=F-BW(S!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
46.8815 333.026 mo
46.8815 318.146 li
46.4015 318.146 li
46.4015 333.026 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[14.88 0 0 .48 -60.0731 718.408 ]ct
snap_to_device
<<
/T 1
/W 31 
/H 1 
/M[31 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Tr?#T_nj.(^q[Y!^VIY#^qdb$^qdb%_8!b![\AZ~>
<~QCu+6[Bm-CZ*CR=Z*L[@ZEgdAZEgd@Z*LaEY*F8~>
<~BlAigSY;gRUSO]]UnXTXU8"BVU8"BXUnXKIOFq?~>
<~.m']@e_K$<hVd>Mi8*5Fh;-oCh;-oFi7u_hO@^;~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.3615 333.506 mo
47.3615 317.666 li
46.8815 317.666 li
46.8815 333.506 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[15.84 0 0 .48 -60.553 717.928 ]ct
snap_to_device
<<
/T 1
/W 33 
/H 1 
/M[33 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Qc.7q`5TO,^:h4n]tM+n^:q=q^:q=q^;%Fs]t:tcOT~>
<~M8@KT\%8iLYHG"0Xf\b0YHP.5YHP.5YHP.5YHY=6Jc~>
<~??h$`R[BkGVl?_tX/i4sVP^5fVP^5fVl6PkV4jE?Er~>
<~)KD@de]Zh-ioK1]jQ,@[iSibSiSibQioB(Wf?(a`,Q~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
47.8415 333.986 mo
47.8415 317.186 li
47.3615 317.186 li
47.3615 333.986 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[16.8 0 0 .48 -61.0331 717.448 ]ct
snap_to_device
<<
/T 1
/W 35 
/H 1 
/M[35 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Qe0s4a2c$2^:h4n]tM+l]Y(ni]Y(ni]Y2%n^:q:o^q>d~>
<~M:U7i[_&rPYH=q-X/i;&XK8M)XK8M)XKAV,Xf\_.[BtM~>
<~??_$hS!KV@VlQl"XK8M)XK8M)XK8M)XK/D&X/i;#SVV=~>
<~)N1iIf$)S#ioK1[io8tWio8tWio8tWiT0+^jlPR_b_@A~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.3215 334.946 mo
48.3215 316.706 li
47.8415 316.706 li
47.8415 334.946 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[18.24 0 0 .48 -61.993 716.968 ]ct
snap_to_device
<<
/T 1
/W 38 
/H 1 
/M[38 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Q^>e?b/hQ>^V@Iq]tM+m]tD"j]Y(ni]Y(tm]tM+m^:qG%a-6~>
<~M2B6k]">AVZE^R7XfJM'X/rD(XK8M)XK8P+Xf\_-Xf\t?^4Q~>
<~?=%`;R?sJ;U84chX/rD(XK8M)XK8M)XK8J'X/i;%X/hk\O_k~>
<~)B*M4da$M#gYh/RjPo1Yio8tWio8tWio9(]jQ,C_jlP+=\fq~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
48.8015 335.426 mo
48.8015 316.226 li
48.3215 316.226 li
48.3215 335.426 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[19.2 0 0 .48 -62.4731 716.488 ]ct
snap_to_device
<<
/T 1
/W 40 
/H 1 
/M[40 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~QcR7f`Pf^3^VIRs]tM+m]tM(k]Y(ni]Y(nk]t:ng]=Yep`66,c~>
<~M8[?C\$iZO['6a:Xf\_-X0&J)XK8M)XK8M*XfSS(X/rM2[)K_5~>
<~?AF<'S"-(AT;JNcX/i;%XK/G(XK8M)XK8M(X/rD(XK8:lSrJeJ~>
<~)Pj1Wf%8X-dc'3HjQ,C_ioK+Yio8tWio8tZjP\nNhVd>Ig:=F4~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
49.2815 335.906 mo
49.2815 315.746 li
48.8015 315.746 li
48.8015 335.906 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[20.16 0 0 .48 -62.953 716.008 ]ct
snap_to_device
<<
/T 1
/W 42 
/H 1 
/M[42 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~RE!+\^qmk$^VIOs]tM+m]tM+m]tM+m]tM+m]tM(k]Y(qm`6?6C`0L~>
<~M8$C*[B[!AZ*:F8Y-+q1Xf\_.Y-+q1Y-+q1Y-+q1Y-+q4\&>hq]S6~>
<~FHE&aStr0VUo'udWMukrX/i;#WMukrWMukrWMuhpW2Q\kRZNnpNbn~>
<~/@a*TcJ[X0gYpcDjQ,C_jQ,C^j5]1[j5]1[j5T"Shr*JMd(n#4Xs3~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
49.7615 336.386 mo
49.7615 315.266 li
49.2815 315.266 li
49.2815 336.386 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[21.12 0 0 .48 -63.433 715.528 ]ct
snap_to_device
<<
/T 1
/W 44 
/H 1 
/M[44 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~R)m4[^:q7j^:q=q^:q=r^V@Ou^V7Fr^:q=q^:h4o^:h4n^W=C8`5fNV~>
<~M7pL&Xf\\)Xf\_-YHP.7Z*CR=Z*1@7YHP.5YHP.5YHP.5ZG!ZY[(`o%~>
<~FHr2nX/i>(X/i;%Vl-GgUnjf^Uo(#dVP^5fVP^5fVP^5fTp;17SrnhG~>
<~/BPiljlPLVjlPUcio8tUi8EPOhr3PQiSibSiSE>HhVI#CfZDdig:E+c~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
50.2415 336.866 mo
50.2415 314.786 li
49.7615 314.786 li
49.7615 336.866 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[22.08 0 0 .48 -63.9131 715.048 ]ct
snap_to_device
<<
/T 1
/W 46 
/H 1 
/M[46 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~LV_$I^:q+d^:Lqe^:_1m^V7Lt^V7Cp^:q=r^qd_"^V@Ot^;.e3`5]j@a-Z~>
<~GIbGmXf\S'Xfe_,Xg#"5Z*LX?Z*1=5YHP.7ZEgdAZEga?ZF.Nj^:_2!^kr~>
<~@#L2DX/iD)X/W/"X/;elUna][Uo(,jVP^5dU8"?TU8"EWTq.C,Pa.DkJ5H~>
<~&=pPnjlP4Ojl>+Qjl,4Xi83>Ii8N_ViSibQh;-`:g=k61dETYDa2c!)L(O~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
50.7215 337.346 mo
50.7215 314.306 li
50.2415 314.306 li
50.2415 337.346 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[23.04 0 0 .48 -64.393 714.568 ]ct
snap_to_device
<<
/T 1
/W 48 
/H 1 
/M[48 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~LVUgD^:h4l]=bbf]">Pc]=bbh]=YP]\$rr[]YD:u^qme!]=GPn_mm+ldbrT?~>
<~GIY5hZ*1@6YHY79Z*CR=Yct=7YHFn*WiN;*ZF.0M[^NWO['I'XaLSUfb1k6o~>
<~@#L;GUSk#iVl$>eUnjf^VP^8hVlHr(YH4\$U7RmGS=H.CTVA'?NgZH&M0*<+~>
<~&=UDmfAkoPio/kSi8EPOiSieVioJqOgtgfBg"+[)f%&:"daQOZ^r*dt[Y.Nh~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
51.6815 337.826 mo
51.6815 313.346 li
50.7215 313.346 li
50.7215 337.826 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[24.48 0 0 .96 -64.873 713.608 ]ct
snap_to_device
<<
/T 1
/W 51 
/H 2 
/M[51 0 0 -2 0 2 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~J?m,0_8!Xq]Y(ni]"5Ja]",D`]"5J^\$ro[]=bnp_o0F*]=>8\_S`dd^!>]oiJihc`5TR.^Uq+i]=YYc
]",A^\[f8]\[f;a^;%Ft^VRb'_SEmt[C!?[a0i7``R</dYcn~>
<~DlUFSZ*CO;Yd(I<Z*CR=Z*:F8Y-+q-WiE2*Yd1[G\[o>Z[Bm$EbKI8nYf,AJfn"^9^U^VSZ*1@8YctC;
Z*:I:Yct@9Yct:5YHbC=ZaI3L\$`QHW2Hr?aKhbBZcL/5T:Z~>
<~>^DF+Unac_V5'f\Unjf^Uo()hWMul#YHOt%UnXHMR@'G7T:r*PMN"1%QA''ZD,*iALR=m4Uo1,fVP^/b
Uo(#dVP^5fVP^;jVPKoZTq7jGS"61FX/hhGLRk*)KPY47>$:~>
<~$<O=ei7QuGi8<GLi8EPOi8WeWj5]1Uh;-rBgY(-+dEp7fcHa\TZb"&`Xe'2rD$p_#S'9gIhr<YSiSi_Q
i8W_SiSrkVio8nShV-W7f@/3pc-=DPa2>W^Wk5<qI9fNQ,U<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
53.1215 338.306 mo
53.1215 312.866 li
51.6815 312.866 li
51.6815 338.306 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[25.44 0 0 1.44 -65.3531 712.168 ]ct
snap_to_device
<<
/T 1
/W 53 
/H 3 
/M[53 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~JA97E^V@Or]Xk_c]",A^\[f8]\[f8_^VRb&_84"*^VIRt]!erN\&6.p[(*locF_TUEM(:i_S<n$]=YYd
\\#D_\[f8]\[f5[]#Mn6aMl-9_na!u]",;Y[CO&cZa@6W`5f75d]T4_`59:)^Uq+h]=GPa\[f8]\[f8\
\@T]&aN2?>_o':(]=PP^[^EZ\]sG)U^Vn1"daG8~>
<~Dn*`lZE^U;Yck:8Z*:I:Yct@9YHP.7ZF%!G[C*EN['d6HYcO^uXM2HNUnY!+_lq5*AWjp?ZEg^<YHP+4
Xfnk/Xf\_-Xf\_-Z+7T]]t1ec]!o#MYHG".WiWV2Tpqm]\A,/ibbC9;\?`EEYHP.4YH>"1Xf\_-Xf\_-
Xg,FN]Y1nf\[o8VYck43X/`8/Y+_>]Y.26Kbfld~>
<~>_%a*U84`bVPpAhUo(#dVP^5fVP^5dU7\'LSXl=AT:MUGTqn]fSVDocRZMo,=]0Bb.<1*1U8"N`W2Q\o
Wi2qtWiE)!WiE)!UmRF5Q'[i*R%'\@TV%gHS!JnfP*(3-:I.$H>Z5WsRA-FQW2QYoW2cerWiE)!WiE)!
Whc#IQBdf'R@'J8TqJ$LSXYq%M3=!MBhq#U>[12~>
<~$@B)6gtq)MiT&nVi8W_SiSi_Qhr!>HgXt-.daHOidEKhU`P]?sZ'C`LP'UP)2C*Hh!&C.jhV-rKj5]1Z
iSrhTiSi_PhVHuAg!IpdaiVZHa2l?C`4WLZUn<WsH#?hQ,o7"T592MNc/.15j5]1[io/nUiSibRhqm2E
gY'rsbfRuKaiDKDaMba!XJDJJJ9c$:67!EW5<g.~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
54.0815 338.786 mo
54.0815 312.386 li
53.1215 312.386 li
53.1215 338.786 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[26.4 0 0 .96 -65.833 711.208 ]ct
snap_to_device
<<
/T 1
/W 55 
/H 2 
/M[55 0 0 -2 0 2 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Kt,+>_8*gu\[f8]\[f8]\[f8]\[],X^<+aIc,[lB^V.:m]",A_\@]D_YHY=:ZF,OZSCq8=_Sj=+^qRIo
]Y(nh]Y(kg]=Y_g]=YYgb0ePZ`5KF)]Xk_f]tV4r]sFl?W1oQATS6uiXe5~>
<~Fg8K`[BQj:Xf\_-Xf\_-Xf\_-Xf\_-Z+nB!`P0't[^*3DYcb48YHb%!R$aG<WNLuERb:o']X4uNYck42
XK8M(XK8M)XK/M+Xf\_2_TBa5\$rZJYH=t2Za@0NZ(-o:P*(T_To3]%XIo~>
<~?@806SYi?aWiE)!WiE)!WiE)!WiE)!U6L_"O-5ZkR%0Y8R@'.rMhd+?JpD',0I?uH+Cl7'JtA^1VPgAo
XK8M*XK8M)XK8A!Vl-GdOc5<\Q'I`'R?s/!Lk0kmG'J4M@RhaR"TSN&0Mh~>
<~%V3uBdc'6AiSibSiSibSi8EMLh:pW8e&]>?^VIY#^:q7kZDX1QL442M:dm2[#6Y#-!EK1IL>(M9iSr\Q
io8tViSi_Qi8<DHg=Op'_RmCh]"5AUYbdtUKQLj0=\(V/,7X_S!!!!!#8[~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
54.5615 338.786 mo
54.5615 311.906 li
54.0815 311.906 li
54.0815 338.786 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[26.88 0 0 .48 -65.833 710.728 ]ct
snap_to_device
<<
/T 1
/W 56 
/H 1 
/M[56 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~XieSu_7dIp]Y(ni]=bbf]=Y_g]tM(k^<+XA`4s(#]Y(kj^VR_$_7m"OWM5JuI?WN(ChMHc~>
<~VST^JZ*1:3XK8M)X/rD(XK8S-YHP.6ZG+2i\$E<DYHP+8[CNl[]sa>lP*(95HB[B/EGXPt~>
<~GESJfUnt#jXK8M)XfSV*XK8A!VPU)`TTbG!Q'dr)QBdJdJTl$F?!prC<_>+[#7<?h!!?gO~>
<~:;b]6i7QfGio8tWiSi_Qi8EPMg=Oj&cG@0*]!\rJW2,H/H"L&G3'&<,)@urM!!!]5!!$@+~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
55.5215 339.266 mo
55.5215 311.906 li
54.5615 311.906 li
54.5615 339.266 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[27.36 0 0 .96 -66.313 709.768 ]ct
snap_to_device
<<
/T 1
/W 57 
/H 2 
/M[57 0 0 -2 0 2 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~N5`rX_S<h!]=GJ_]=YYc]=YYe]=u"n]tM4s^:h.j]",D`\%08h['$[-RZ2Q/J$e%aVl)2`GG`L&_ns1%
]tCth]=Y\d]=Y_i^;.P%_o':&\$WNJZEgjG[_9>RStMjNI!oC(PddH3M7C&gAuY~>
<~I)*S*ZE^U8XK&;#X/i;%Xf\_0Yd:[BZa7$FZ*:C6XfSY/Y-PRNYcFmnNdttTG-B`VWMr##D4SVXZa-j=
XfSS(X/i;%Xf\e4ZF76R]"55OW26AeUnjrhXgY^8R[g(AI<o:"Lp!7\J@`<eAu5~>
<~@t^#:U84]fXKJ_/XK/D&Vl-DeURn'JSXc.:S!o_3P`q)XG%tVl8j5?l/L_h`.o'\]4?NUIBlo,rTVA6]
X/rD(XK/D&Vl->`TU_L:Q'@])St(t'NJE(3E,AoS2Dm*2!sAZ9;2'm;COgpR/8"~>
<~'pHPhhVR8Ri8*5Fh;$`;g"Fm%cH4)E_nj("]!SK;SWo"L<CB20)@m;]!s&B%!?GK8%1N:s%6p`5gtpiG
jPetPhV?l>g"4a#cH=5E^V%4bWgSN]F(f#e8k_,Y#6tA5!!!!!&9D(_)gZf1!&X~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
56.9615 339.746 mo
56.9615 311.426 li
55.5215 311.426 li
55.5215 339.746 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[28.32 0 0 1.44 -66.7931 708.328 ]ct
snap_to_device
<<
/T 1
/W 59 
/H 3 
/M[59 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~R(pnb_n`su]=beh]tM+l^;.P#_8X@5`Q,p*['d<N\$rr\XfnXlQ'-K#>=N&*X-QE]249kl--&ZO_T0U4
^V.4h]"Pek^:qCu_8X@5aiDH?`PB!j[^EHJY,eUrQ]R,K=@l(eWm%2L('P-VE,_=AOc,jQ`PfX.]XYJ^
]=Yko^qmt,`lZ9Aa2c*5^:Le[XJi(mTV$g_F(7m8D3(uqGW-'>',)*#*0ce8Oo~>
<~LUb=5Za-d;XK8J'XK8M)Y-P@?[(*TY]=tkTU8+K^W2cr(USXQFNf/!f@T$pEWe351,E\+E/^6hO]XkPX
ZEL=/WiW;)Y-,(:[(*TY^qIFm^9sr7VPg8eU7n9INJ<"$;b'GhYLfaR"onW'<E5P`O+ib7\$rcNYH"S%
X/iP4Za@3M]YD1p_8*^o[]QO-TUqaDR@/DDCKa.n?%TSbG;07$!!!!+$Ak$lM#~>
<~Ck.S7TVA<^XK8J'Wi;tsV4jQQS<oP&Nera[R?WedKR7cV=].jQ0e==F!!!11UVMC8A^8SN$?.A4K9r+$
U8=omY,SCtVPTrXS=#S'Mi!1AItW]?K6_?PA6;Yo4?#&A&dSO=3,ab7?sRbb\@BU<:L.moS"#tBUoUW"
W2QA]Ssu"0O,JjLJ9uNbG'J1E?;=6`3&Vs&+s@dA5$`GaI:$E/R[9(YG1M@3@f~>
<~,^[;Sgtg`Ai8NMJh;$`:e'QC^a25NqXJ2JLMhHCjBj4D),p!^(!s/H&!!!!TX^hD3!0NBt!+u9gLsXc/
gXt05hV6f;f$hmda2>NrWh>W7J:VugAQ1r]0HqAB"p=u-!!!!!$Z9ee!!!!!&e_8G&/?mnf%/F)eC3"'
eC;dfaMYX"Yc+:_Lj3]G?<U2f-l*R-#6k/.!!!!!!>K-I)?9a;!!!!!!-q$9)u~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
57.4415 339.746 mo
57.4415 310.946 li
56.9615 310.946 li
56.9615 339.746 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[28.8 0 0 .48 -66.7931 707.848 ]ct
snap_to_device
<<
/T 1
/W 60 
/H 1 
/M[60 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~WlrB$`4rsn[C<f]^VR_&`5BR7aMl*6^:Lk[ZE^I&T9+MEEF2:0Fe>e4HpnMO%h&pc&d8GFUSl"&~>
<~TuOUQ\?iE=Vl?f#Za@'G]",Gd_7mUn\?rE8W2ZP[R>ZE4DHo\!A;QY:E'4a8!<<*"!!!!oVPq:$~>
<~G);WSR\6IWYHFXqSXPt1NJr[JJU_rdDJO#r>YmjI2BieD%LWOX8:-c1Rs.\:L6SRAPuh%DV/UZ,~>
<~8$:@gcd^Fhd+-:]`PB*iVOs3?Mh#_N:e*l+.io9,"onW'!!!!!!]>%V,ldoF!!!!!!!!!&SO.5p~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
65.1215 340.226 mo
65.1215 310.946 li
57.4415 310.946 li
57.4415 340.226 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[29.28 0 0 7.68 -67.273 700.168 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 61 
/H 16 
/M[61 0 0 -16 0 16 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 61 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
%"57UXglF(h8d=D]>OWk4j;-na2c*4]s=uMXJMAIMLTeb?VjR>P-(=AHp\_[$P*^Y%hK3Z#7ka4N(\5o
XKK1[f[dI(QB\A\aiV$k[MZEZZaZs8Xf\IjP`U00BO=V9Di:ZbL1)J'!!s9]]<bIPT!>Gd*/oQ)R]jB=
ToXn]M26n=IX#sO?Wp>t4YeK-#6au*2&K#7X3nqWJU2m*Mi!7@Eb\cSURmr]'!97)cb?]k`6-0>]<7s*
Q'$uTEai0H0.J+\$j?_.!!Ea7Liam6!"C6GK)oGZUo1`Eg!e!V?G*qfa2Z0BbJqK7]!\lGX.tr4D-^+A
?#l=Ec-s\!CbcG)$4d[Y%hT?a%h/dG(P%BF=f/4'_UmM^[\9%PW40[_[C3?HXfJD#USOHDK5kF-<*F1(
\]rXENa=%8oDfLMR&j[nQ`mZYJqB5UZ+I`DNe@ppLk^Y6HZO%8>Z43S-5-X`!&jom1.bSdCMQg?<,@#=
N/`aOJTGU23C8=_D#o@'d)2rh`Q6?K`jqt5OcP<JDdZ=-3%#a["TeH""UZG9?mZ*J!#@J/"CR(BKm7]h
KSPSNP+J88SY)LITcKesS!oM"KnG2ES>):*M1pP-A4dI;"pbqU#R:kQr=L[n$O@"PCIhj&TV\`m_8Naa
X/`_F`5AFIVPg>fUS=-=N/EU`Vl[(tTU:df?9o)#!!*<-p&H':*G\'Jp[RJ6dA<qU]t:nCNeiFPOb\@+
C1(4A928&L:01k<Q`dR1e()C@JpDU*W2cDRS=>n2MM$J(FD>$qRLtXLTp:P+[]d!BYb78=KQ1j;;F3/e
*tf(k#RqV"3.lp4GA0G[!q$$u+ot/P?!CZJFF8b!O-#n2SIM?jWN<>1[CEf[]=PDT:9CIDF_46&-lE?p
"V2:U"UPkP&.]9]%Li^Z"U7Rb7ri$KGD;W[VP0][[_B`!Y->=E^;.\,aNMfK_nERcMgfJ<3%GjS!!*90
!rr<)q#DB;!"hdbNQAlLYFpN,X08h7P`:EPR?rtjJU;KWrGDgXDJX-6LNbmrAS>gmBRH#<SsZ7VR$a2%
LOjqsLJU^/OT@$H'-8SW6$n3BQB@2`L7"<hM1'AT>[C`E?<U2q6R3ia!U9Y2!WY,T)$pil*??Uc5YG!T
<`jHdFEM\IF`_M=CLpX<1a`J8#mL85#mU\@#m^_<":5G7#q?2c"pY>>9iXVg.NpN,5!VG%8l]51CM\'4
F`qtPFEM>2?W9KL*u#5"%dF$$%7X"Ks5`&+qtg0Wrt5%je%rDZTVJ!BU9:T([&0.J&WDd0KR\&W>$>?F
E,'$eZiLU2!"&c4%MKWq1,:^F2uY]<-R9ZD#3,[r!sLba*"*5d%1Nd](`4#%%LX6S)upoV)&O)"$4%"M
&d8RQ&J#<U#RUnE"ptbB#6tV8#V?8c"pGVB92S8h/gDu%1,(1),UOoe,pXBI*$$(@)]BS.$jHb6!<W`C
'+t]YqZ$X#$2+?[#67.^k5XZ(mI'0"jQ>FM_n!%T]"5;QWLoTCOc>6TMijEuQCb.`\%9&LU8XucWMPVq
K77iS=]\o7@r6oiWj)R8a8cGH""ctV"U>&,!=Au:%hfWl('Y$M$2k,J%MKTr)&O,&'FY3P#6tVI)&Ekl
#RUtK#6tJ4"9el.#6Y&q#s2+*4YeuS1,C]b0E*^>1E.5P)As>*&JGch%h&^H!XT#-!!<6+"9JH$!!3'!
%06V8"9JZ*$:-`9s8)Tbs"Nj*kiCXUf$`.%gtprEgXsrq^:Cb\[^a&YV3-RgM1T\R9fjC<.m730;j)_5
%fcUP!!`N)01HQY$3gD0!s8Z0#6"c-&JGlX(BYKk&ek3V&JPod#S%[g&eZ,t$jmFP#R:b:$2k&<!sAl4
9K6-l4>Ar\3]o)<.ju\j,pX`^-7:,e,U"6E&e><R"9S],!<`]9!s8c0p](d)!sSr4"98]-8N5u8pA+Uc
2#[=Do_%nOp@e1LmHEWbg"4d*f%AZr`6-QV`l#d)UR.=1JU`2l@So63+tPoT@RH]9!Y=r(e,T[S!&["F
"p4Z%"9JZ."U4i+rr`6'"U,)7#6kD2#Q4i*"ono+#m1A8"9SQ&(]jgB!^fCaC,7h!2EO8f3Ar]L0InY$
-RB?L+<;@<)&Eu#%h/pT"U5)3!qH<m"9S`)!"/im56(ZLrV?Bfr:g3a1ALYDrp]=BlfdEfgtC9.d*9\R
`OiObYc4@fQ]I)^Lkg_=Kl'mX.0g%e*_&duQ^.^[lN#cA"T\W]6jO.r!!WH)!WrN+!W<'""9&E@"U,)7
"U5AE$k*LO$k3CG#RUkE$46t@!s/B$+p%lL"%GghD`Bg74?c%q4?,,M.jZDl/1W+q,9\-G()%;j$4I:L
$OR1G#6b54p&G3r"pG,1rW#2N63$uUs8;flqtg'\p@S"Sqt'@ImH`rri7QT/ccjJN`50*t[]up3U6:Oq
M26qCLMp?b.gQ@j+A#:%S=0Nhi;i'A'*/+n9b@s@"TSN*"pY;7!WrN+!r`<#"9J`1#5n`'"p+r4#6"cc
"pG/7"pbM@#6b55!<WB);G^M92Dd-I2)[?K0J4k),pOfd,pFKR)]BP1(D@Gn%hB9b&.K!R#6P/3!<Mur
$ipP:"U+r2!_u5bs8Mlp2#dIOqu?]lq"XUWoC2,1jPJS?dEftP^q[Om[^<<>UnXBHP`h&XCg'.F)^-b3
:en'j!u0>enc07*"#Ede$3^P4!<WK1#7(P=#6"]&!s/T1#lY,>$4."D#6kD;#6tM?#n$Y<3sZ0%%L`^P
#R:J<!s2b-<HgAU0fCmJ1bg[<0/,"0.Ocbl+s.jH*?5t7(DIMs&eP]c%13@F"U,#2!rW*,!!*0/$4$qB
#6n:(pAY-lrVnMHq>'dYo^V>9kMtFQe^Vm^_8*aq\$iWHXJhthS!fOuFC7W_+!r^E<):'.!ZK;`qu?m0
"Xm:_#Q=o>$jd4I$3p\6!!`c8#6tG<#6k#1!X8i9rWrQ1rWiE+qudN9$O[7I#R1D9!s)n)<.d71.j-Gl
,pt)o0JbL9.Oceo,pOWV*?,h3'bh;m%h9!U$OR4>!sA`/!WiK"!!33&#6nL%ec516rql^OrqlTjr;6?d
p@Ib>kMY1Nf@A?td*g=fbK.T:]!/0.S!B%oLk9ha=?eu994;(%`2!DYa8c>X!ZG#Q$3^V:"qCqH#mLG4
qZHTrrWW-&!X/c4qZR',"pP50"9&EO!bskhLHI"8-n-ht,UF]a-RC#`+sA'L)]BS3(`!bs%L`^M"pG,2
!UTjl$"Z!6s7H!`rr;ut1]@%?q"OOUp$qG5j5/PCe^Mmibfn2Ma2Gg+[]lX$R?<G`Kn+Ge?r/g?3C-eJ
;p1=(-cc8t*WQOJ*XWA_#o+!^$jZq:!<E8s"9J`1"TAQ*"pb,3r<<-&rWN<,#lY,2#RC;4-4k;X2haFG
/LW&'-R^Dn/M8Y+)]BV3(D[c$*#TP+&.JsQ!X&T,rW**$!s8Vq!#,r[/B.Yhq>^Els8W)qp[R_Bo(;PW
nE]2mg&BMIeC2psf%%aS]sk8HU7Ia=P`q8lOH5*EG&1Mk@:aM!E;,k&.*)Ap/cYrS,8(^u#o3FO#S%1G
!<EW=$OZk>rWrW5#n$Y<#87a`&Io9[%K-S5#lY&/%/g\c%L`[Q#9S@S08DqM1Fah0-n-Z"2)m`]-6sl_
,pFNX+<DO@()%8j%1W:HrXB)>$4-tB"U"u&!!=0a/\:o\!WN&rrt,/)q"X[_r;$!RkiC[WgY:F+g=k<9
e'6(S^::JMUnOEPSXc:BO,/=0BP2*uIX?\HTE$L`!!,CdJ,~>

%%EndBinary
grestore
np
63.6815 345.506 mo
82.4015 345.506 li
82.4015 305.666 li
63.6815 305.666 li
cp
/0 /CSA get_res setcolorspace
gsave
<<
/PatternType 1
/PaintType 1
/TilingType 1
/BBox [63.6815 305.666 82.4015 345.506 ]
/XStep 18.72 
/YStep 39.84 
/PaintProc{ begin
/0 /CSA get_res setcolorspace
gsave
[0 -1 -1 0 765.29 272.953 ]ct
[0 -18.72 39.84 0 -72.553 701.608 ]ct
snap_to_device
<<
/T 1
/W 40 
/H 84 
/M[40 0 0 -84 0 84 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~J0?%33$]7K#D>EP:q1$o*=415@IZ;s7P,716V>a:KO-GB.nEWZ'SF+nmuP=2-"S($]\Zse@8[fh\I`(#
$r%DA7*5dC0GTdHAk<PG.i"#g<3qhc"Euqp)b\+@k^GN7&.$:EiMN-/8Y+V7_Kd!04rtBZjO9*qirq+K
LNb^h5piKVL.<X)W5t2r-('_F1UR/AF1I;S2?UP/\4@e]d\kQFk!EZ_Al`#LOR0\@cjaB\Wrc"u?l,*V
X&`^2@XKU=MiBlp:'a<6'oiM-q0Ztmd30$*1n)Xq@NcK2.#$*VmW:3%%*QAZmKa"!!C`a2Tr39%i$D:6
2b@7<.N&]8`[*Z^d!%^HcRL$2L'S+i!Pq")88O+O%0@rJ8t.0L"t9X>cu:-7,G?#<N<@9&5S"")/5%+9
5S+'N_!iBH!+6'T,/>CB`&\BZd&%5+Jd@)\NMA2M5`oSc(d8QEaWV)1E9oe#`+)'_'1EL4=VjO>P\D(,
&_$1GJfoj\"%3,+#SW1ci8bl5,!^l$LB7a?1(PTPb!D--M'>1tPA)Fs!FT"@!mZ<U$jD2I+:'T[_Q<Ys
$%]U:-jnttp/;\/;&2_97"IQmPNX,-#([H7$3PiEfJ,C;6-.J?OCSp&/<,8F`]fT`$%bm8;6^sB<X#lW
8l%\p%L.Pni"cC?6*T!"%tocn/r?@^RWKPSq2Rn'UM0"-g'3OK"O;NboF$8$8.Gg8+jb<hO(7[J2A/G%
E,;"tiB08aA,2U<RBh&KquO1;2!e.K3$8J2!oW!2&]7`S?'o1`-rr[QJS0\&BHRgI56,'t?3%.D3XZ"n
cit?s,nZGKPXR#Z8<f)_(/<lngTN)%PGIk5!?h.pCHk(ORS9*gq9Wf=Ua6pR'1?OJToh<R%K\^%c#"n\
+G^X4!^N#!%1_JKNc(DcBqeQ>P^+QO<"\3X!s%qfp?VfT`&4oPJIoss)5jaTGFD"3Ea4a6Kd)*,i(Q!g
JA>-]m+Sq?NW99Y_,te##B@Co)TK%DlFP%UpC4lYTG=BoJ1fHKJ08OL9pk*hcuYZ=1!FbZSS>V^JFM*f
!q8t)-dQ+@Vud!VUiBLMS*'OfP9%\>N-*2"1\\8,^h04)J?S*r4,(So/m"Q4U!ReLB,-P>8cFMZjoKp[
>M2oI+<CcGUcCV[)Fi$sDC+OpiEbp?^_sNU*L=hJet=u4Jm<%!iO]-1psjp_<UdKHYah,&Khfe\.fkaY
,fT8o)8e^Q%)JbF`fUB)J2-.L2CenIWk;d-Q)"C&$3^L`Ql)S,BT/(:0ZIW`)36)s3MbgF>!lgmJ-Z.*
5TCI@TXYj!-tS@BQn`'#`Ha*h'>$/-Fs15o!"%j2M(rg+L.KB'!ti[>(=o$"6V;2e:]LIuX:3$,See*"
D%31Xh:oSS??)\]`h3a)^a*cVn]!T0=RR:S'I5nXliOn#lCOL?"TVp;(BC[K*(&jU'dGhRN\P#k`JaJ0
+=IFSVe4*pE!2>S3!BAF`!sL!,7\/+@_YdQ5p';%!E(X76Dfjud\%3R!)N`J^o.UU(_?hCPUR(KS2_ce
Zp,/m?72BMdSnL-!T7,R"OKC7JD)"L6Xk'FLVjiJMs14>:2<2S3!L,U#RUR)#(iM.&]C@1T0p.1.<f7S
TVRgF;Gq%VM'rd!^a'$@TMp_m'*?6"R>7t7.S?Zf5pobE!FQ07"CT@e_f3m@K90l,b"PK")B*f",s<iU
X!GJ!<i.]o8VKG'.Rp)mN'`>-e'WY*g[]Z08:`7iBd`s,TH"E81gCIJAgi?ETbJ58:aG^Mlr(-0V=;#g
aZ-^0!MFfPl82BenO+O95_Z5^49[$CrCg&g!fI\k5m8tA,")]r&u%KYLs[qa`5N=bO^a][Wo6WU<2tjA
F?9a>nf:*mMGsWO79NJ&@&ge<:<7qiV-k;o&I_hL@H9S+E9J7Z5u8%7imn?fGjX].8?iM0r(aI'!!&Zp
%mf,8L_.9B"&N_BCo*CU`f?T=R_52!)UI2h%2ONIAe&7&2@"ch*s4K8&L3V0%TI\<J04lUN)#ak)`p_o
huNo<9JZg5^`*A0E=jnWE5BUTd=<-W]MroC9UR5V0*iC&!MD&tTX#MhaJ0`-S9'V#!FT0:$(CTPn\d*l
>_&1TKu#<$Ktr'OKXf5H6bHt_^nr(@5]96h:AqG$/c^Ds)$0fK)2Q+:3<rC4'qsP/KTM?4#k8!]'Z:%%
J-P@V:]UP=:^R<?[N:/7lPh&[=pTY[&d#%_#qZa`j=8nXE]-IER4BUpm%KZLVH1kXCG$jI"+Gb^;#o1&
2m)$))$?HW%AOV+KE.k]!h`Ktij1rYbhX4HFMe2g4!K3:IN*oYM@X-'.gGM4+pBs%Y5ssILN-7j`Ci\8
GpiZC^a9)t(a9:fbo6sd2B)]'Etq%VBairi*!/Z6$R.J4^qp>*QeT,r?iojG_"K-Dk^j:QO>-toclWG$
WDoRa0nqBbI8@*M3rfE]>km"Q!8'XM6=;MZ+Q='O^:FRN;3_8\N"SHB8-YeAH3gr\S(OfG!J&B@Ks98c
"_fq)6*)VkTVrI>J7o?7-mAeEHk1e\A`?"A_#Pc.",kN'#lp0L#@Z8["/p+pTen!Ii2.3HO@0:<a;b?.
>SAF!%fllb-3`>0a#N"10Pt?'Kn.;]!\ckI61?ab@!WK;kWK.rn=G^qL(M4@9aRKr'Qm5C5oK`l)aWC-
"V@OAK".Qd^t]i\rZ2Eb^M+>A&po7M?ebFV#O<U^8dD$9'>mYI'&f'3K`K=7K(,T*6BHePIbY=P@mD*p
&2&_]=tg.W\.D+p+pb]R'T&-s)e'4+LOg9a_iSdEr(&=G%nnM]F$L^S+<lO_]FD^P4=_P`[<AjGM?b!"
&&FJU"+ZC=5tEa=IgdoniWMe@d,Pm-\.jS%5^,$j<;>>j228AX1BZ9$j^?.[rQqb?a;A^3!ha3K5aSc7
8)PM@^PQVibmpH)l6(YB<c(iGXM9l%$u3i\s5/bX+9~>
/LZWDecode filter
<~J/dEC3$]7K#D>EP:q1$o*=3@s@IZ;s7P,716Uc!(`*P5-'T0kB=G^I5-XOjP!h!KJ7]f^`a7D%`WXUL4
MGC2b:in_u&(!]8BI&C3?XP3I5RLm!8P]sr+@TbDX[7I]NduW[&-rY-T2^aR!j[oJ&d=#??iZ9Z.4gcN
98!nbeeqF@*Q2=c)!ipV$3l,LiPlRO">3sI[o#gG``>Ng"9CeS1iP;p$ACj"L32C1`=7bB!h9sW@k]>9
J:T.Ggke4bLn]Gc\L4jX_$D;!U#>I90GO:c;h"11CCQ/Q@I[J'k%PkJ7cSKq,+9J]&PftP<t)fMh5paC
g0em4=;[.A,a&a0geiZK.=kq@$bBaiMTb9b.1=,q!$E*k'o7FfA0O0Fk_TJ!O,N'!JdeUKqupYNF<(A>
qY10ni/gPCK]3!!-OIWQGnYspF3+\S6O:jB_XPc.%`@fF7hWcQ8d>)?J7p26Kd#[&3=(.c+:a$3E"iG+
JI#QnKV@%M-4,7a)$\-",1Z_oJ1q02%0P+[*XUdb*"7K$!'V8-_PhZ/#_EV]3JnDF!W[c>O9u[/"0htp
%3`N)+GIX>F=<.o@"dbKiQ0D:N=etq!s)2Z"p]_]393(1"9A-9"C`Mo<KsW,=ptK6&JnH0EDQuDJIm&S
!WiDlHoR6uQs:Yh@d)B6&`Wk;%g0Ws$"K'Z;Ruq/OQ*fQ_>o+*3tHs_S/)?>=Qh+;@V_hZ$o\I03rgBK
mKWcS"j@#Ji&E,4%\n"J3/U%iQm(4C-s@d$JeA?lYCIH$!<@Y3)Q$D?!"oEdJIm>^%O@`=6]*%kOI?A>
DDW-%J0MI`!;IlM4+KR(!"&ec!%KCUK?5TF(Bg,F-jcV]@M.c(*W?(4J05Gf!J!oN"9AL5N!Y(YLjhDq
KOKU:(o6t(hZa,<X<$J=huu5n&mDpPJO"+9$%bF@E%qg^WFfS+je63^'LRDa\Vo,*[]\fO!#>_<?p'YY
Bcs/*'F*RDfL)#Q!JFGgjge2\EWiZS=+D$7KE-RRDL;]j?uRG!n4]KK,)jF%4C/hXd=>U?V2nk`TUHu(
8V',L"9sFm+;+p1J:B`j!e@9p'+?+J$tGT7ku^t$7CSdk+FmQ0!,-mj$VQ'CTI%ATTVsIMJmde/$46ls
rb%O.+YZS(V2*i.+Fm9&!9%=!$j$Ida;,$^gF+NU5d1n(J:IlWT\LXnd&@^gCe]eL9`r?h"9F$,!BhPD
X3r[.8&.4n!H9XqJA;g$!/(a^JA`L^d%(bX-q+FS7gm9R"9H:t"%+a`!^K+`!C/BF!C/CE5hHnT^o.rt
n6C>DG`*0.(deS=)$:-e%fu(n^bE5_!e>5)!^Kp2JZpm5_&t61!3@CL0]F2X&<.9rA4T2;+V[1d#_l_Y
-%S<.!l0$s!ao-H!Q_n\_0?n$^q;@UEBG=28;Rr<#"Ak2#mOQpH[Dk3$q&r2#1>aT"lR<1JT+L)!q9n=
Dlc!hj*`/fJ-hA].S50t.hEuA)j=0?:J(p^.4$ZmNW:6<JA;p(J?h@h!+_]'!dk;JclWJ.Ua#oEbTTA&
Q<[(AJ[ChE"9>L8!ruWa(a(Y35mSM6TWf)]:co9+a@60F'TiQth&FET;MR!n#GuGo"9>6("%f:#9OM*2
JD_(H,"OCXEgn7`9W.u":^U!;*X8PK(B_Hl%g!kALVW*u!t^P<M,:4hMJ.L862Z=+2,FKBQk5cbn.EMm
=:2l0++sWU%>=g8%M'[='m/eBO@_&,@.aPR5_of!cqF^T#V-(/V=B-Da;fk+.04u.+c0VF<Q&;K0L.Wt
!SS@r5mS>1J<;5m+Bf,g&XikgE&n5CBF7,=lOkHcTRdc]=CV=W"$h)E;0+Q%!Dk'GTO\];0\dYcG`3;e
gcL3tpLD+o"B^1K@KJ5C#"j:?"Mg*3K"tIrC03Aj^uRJWT`u=ZE)d:SX=fT,/-T^k-Ng#\'AFWt$3;7s
XOS^D"MemeK8="EJN,:dYdP@"29?-T\tV!29fR\p.&*B)&V>U'B7WT3#@O>ZL9SH-6J,m$@:],)!X;T=
_%?iLL*?ZqEX?U0/$o;\*eQ.g++kt<#shfN>[X-8Du`<LKL?7^^e\SD3%5!gL`"J@V@:9P/I14l0o'/>
%Y>N^$O<aV"&(fd#UQl=+K19OK/Id$:bN#\bS:1eE"<#3F:H&7*.u$p%fqbI#=2E4"]>VC!9KfV3$tJR
0O,&Q\1Ylg`#F?6"sO-,,m0ff$A(j"%LI\?+Hn&eK()qN#m`-%T\LFe]T`kVQnAaJ1c>E6!!'g-,n4:a
8B.UX5qMLJ"sCi"Jriq>_0%F:5e%M\:hgD)E'FlLg`ZZj&-N"F9bW,+:PGI(V8>M$aZte%!ruX7JS(M"
TYqNH;J2[j0RO-k5RW3@i%"u@Ij@8\YZ:f3QU*5F#$-*gK)f2U!D7u'@;J4L&BH4%aF"@\bQ>#7(;e->
SHQp])1p&nQU,4h"mDI/LVWm6`NYd@iD^OTYWVi6!Al.!%r#lTX:'3kg=r*DE,I8L\[P&n+IVR5"9<r]
[tRKY5eJ7LUYI"c+pA&+fKt7Q"pY-3VuWNtM?^p(MSY^'#6;7I!ha?=!C/XMTlAlo^q:+An1FtI9K<<]
Q4LLh.RulGN#A9r%"Wpc#Ct;8">I\6KA_+diNO=&J6EjZGb>]NJ//-P4;3DZ;%t8h%g+X($iq2##JfLu
L1'?c'\H1d:m4]Y5kl7K?l1:WGVSp=a2RRT%n,@6*eb0N+%,6PdbqJ5]:^>KJI#KdDUh=/?i\GSYAhIL
J/JH.U`G+J@LAiW4&u>8!`Iqc!MF6G!gfth;nVHB5d.0i5\l]PJ3sb)5W8h\>S>$_lN@BnYCVd%#?7`N
/!G2e&473K6Hb,nrk'QT0U=9/Qrbeg&-7;h8eD)[%KKlkNrY1o%*0Q&%&)m9"YKW`4t-Rn@RLmA0H^A3
-trsgS*'KXkhScOg'NG]Ih6[U-c/t:PG$\l"mj//_e92rh#Lj<+J?mVD:TjtKG]5W!oS$3TdgR<IK=@D
$:c:\6>ZDt1'[eI#_98g+E@ZO7'j[&Of9<KMcLN7PQB]W"iS+TkU$9Pbm%S".R;hri/SPfj9]41!rrZ/
jdIo6Ws6Hu&:nL)TO@S.Ch%';#/K(!:&GQR,R7^".=_I&d'*Z"S023i2dkJTCQ&;;b6qg%`FCqDJHlW-
#7Q1k#%6A!6Td0ofH@t51XP:pn8'3i~>
/LZWDecode filter
<~J/dEC3$]7K#D>EP:q1$o*=2^6@IZ;s7P,716UEM9"C<kl!sCqFciAT3-Q:%a!,5hm7R/(%UXH(lYXA[,
&Hb:;3"BRXJHJ32@1]q<!!%R8TLr36JH>lR!Mf0=+:/ha9-ohlYZM/m#1b=j#V-cdLpTN!+^cu($31Xf
luko=)U2s&-XemePXH?D&HdS"3$m;(Li'&08Q[B-\eYaoKZ"LRr(@h/AjHtt'+(iAJ)X[H>p_8^&C^l8
?iW_#&ekofKJeVInd((?TNH"hNeJt#dY@pnJYcl["p"](iYu]?RK\9eO[qmG=[8W^]=89W&C<BZP#?l3
cknPD=KMUsL\(?c@^/iZ'1sSBpUE%.J3Yh-:dbWk^M=MTrB5(7hY=g'WKq>7&(C:T^X*&&!IuR@pc]4b
0hb:TAMH_NPi]HY<XHp+/uuc<RP9:UKF=q^P9d4n8.nVt:,7d&,0(!BBH[XJ&4GJ:;%f[u7Sf1Xl%45g
#Peo7/3l`A!&(>HhFE^hBcoqZA=5,MPpGTp@Mm//5\c<F_CPrp+Lj$2,42<=JeJ:'+@ZrrBd?B<-*^KT
RV"R7D]?amTJ_9T3#JKd^f;?X+G@im4->2A-r61!$#X,h"i4tMR7I(O2n!Lh"QuG2\Lp:5KV:@uPQe=<
?'khAL0k^]aln5>K1L7LXAb8f8<P5);H/rN!B=$njf*]DR0B"#>o<kBl=?"Z3./8f2Wtf_OsDJg=dLE\
Q<'<*nW7(C7X:S?(aaOL@$?2p2&/PiGr6(5-+R&TQDME8?^V*ANb4]VPlb_Ck><]Dh[?.]l]fopBNGqF
iHeaq`\EKb)CC<<Bpj^,mXLXV4sGRm71i-r(<*gn=-ocbG[Hjc3L>hr`hAW*(ao.W5)%.tWe(pr),OT&
QPk<^(WI&MAJqA=W,%j!Bo6/fVtk3XU<h7GM]d^6:/u"^iG)SaL*;(V)0m[4CE"V*SnAq]Jc9qS?osS]
K-8+6<##RNH^^9Id>h]RGWD@0)WnT=Cmnsu]Po\10H:&n@1Yg:9#Y4@=-r%EL0g4d;3k[Z#)T!eRjQ7g
D&Xh\b]'olqVD?r^oXX3Q;$P#?PiuUR?-p9WO?Z5`o4@JSVKMdJ!_j%"Q[_E`BCYt-4tuG)9,gLC[RE1
_onWAM9'n5k<NMl+GJKl>Ss=eQspo0JY6VD#0F)-LA9XG@t\e2Z.q@[BqPk&^k&rAH8:4OcPY[bC(45c
o#C1[*.sW!%KXd8#<:g%!mi8=dKVGG35KjW8_#g5TJZr>QQ2cbFH1@\3QFt`*@?;X#JbqDP-cWk6S]E"
Z*+PoLu=#,ef2MoG!FsP5=I*ar<u`r2$RI5FsB[r%Iq4nLIgYMUSr4Q!Uu9Xps0BN!%ruPPa.]DXVrEa
rB.?b2Fe>;*2B`]%airHLN*56`dh]VOLU"`#TAgjBS&;XQH7(`XrE"4CCR5b3JV;8*Ws&u&*1qs?XVh*
@W4Yi;%?2)8HTn6@I^lT7Q8?VfGe=^EP3ON465>u+(P4o%`/-'`)ruL_>$"m$&f8u+OqC*;*k`tr>o9Q
jrEEWG7Nk&4,;Je+/@+eNKFtrK$[[.kCE%qOfC:Z#iQajDG(I*\i<2FkT+^':_+0-5KE,C=+Q/c"sCho
8J*-hP,rL1+iHB1nD,)ESg?n[X?9"Oo:JDFH("aN(4u$<#Co2QdEk'C,adC-dn.`CZ.(c=<:h6,e9_^'
mQX4grH_tt9SL8g!6O^[Va.245T/K@#>BE,:uln_+m;)p_"f&3fR49Mph0lIHj:p%$Iqs&5q"GJ*Fl0o
9d/R[a(XuaeVnneU%qVWnGeILS/jl3"[^7'\/kaNFcSiU6jLt.++s,i&!?WN#8mI\iP?p/@K\`I;!]5]
/9['4mQLlKpE)cbR#fYm5:+tV2kni>f&5F47tkFo<>^*a<6\?>B_[p8kWQ+r4^uHnpE&A=H&khn53jed
8YbQt[F+t-!b7_+f$J`o>/i_faSV<9K"[5=p-)!/TFRW#Q&n(=C5:WNYL[%Aeku'(a4ptCifFZcLB-NW
+TifEhJHCMpKC)S:Tro4kSaKe'ah_[Wi8bcO=QTCa7ZsAk(0[rRsesE!,3Xu!ULRG$"!*AR)!e$IO8To
BEWT"!<ApY&RZH@L\7"LKCZC<$SFVTji\b)`!iB5&;:B:+i&<B'!s2?MGe=C`RqtWiY7l8n@804=SPi"
,ta&PM,>C_rk;f\s'Os9ru*%C"5qTY!^IGb^S/=fgoO)$nPk\`!=ZepYSmQC8.u'i-0p)s:Rf0a9?G_R
-]a%[5K/;n#,"'[JHJqWJ5?:Ii)l*A!%">SQ?(*bjEHW;ROH!c*<WG=!s'nZ:PqCE-\)2j'J1&;l`$Nt
,"OJ"E!?@DRY`6H#R/\/OFZqg2+aRU=_ghf$e'nE/`gI@'nQ`MUI%]+]$rZiJ1qC_O9mE5m&Us8,EE*C
9q+Mt_lgi^E/s`s@NYlU<H8:W#3`_T:)noRNM!'^Bd!O##"?VWQafKC$ogZAMh&$$"cs!(Vf_Es'#9E\
aLDQXTK18J^'k4gGW,ic/URR_*!FE/D^$=3UHO$R`(5\$"!B:r`B:S*20]rD@!=,@nt#hH=:5ALjYmt7
S&@iO$T.q:)Zu'GUq)$]!W^l=!mZ0$3QVR-h#F&>?A_!5~>
/LZWDecode filter
<~J-@&l3$]7K#D>EP:q1$o*=2^6@IZ;s7P,716XoSqbUtgd#=q/.fL1/k!K5&BdBL940e.`C_*BGk^/YpS
8g^lXlrY8iPedE"TEI$$25*k,P$0uZP<'&iJ1t*=&-)nB!\2\;3!:!T)cT.s)^S0,7fq$[Og#t6`Wrfg
_6hlP<a6BL#,a^?*Ra7.SV6Gs!A4/=G+.?Ape3REcUSM-CO"T>*&Kk]@qg/p3!`\i/-`F[>X]V6//Ad"
=4j_aaZIZ(Kr(H.;bMQO%RW3mNZ1_X'\[95gb9"+2]79nH[IMHH;P="/R6LRW2+)0;>?O*+OItFm<(Fb
U'N9ISC)ie@q(LNX'E^A@NmRhVcj/d9tjJ4;%.9*!&)7\dQJ,&>U2MuZaS86@[#+4^L102i@saOdK0X\
MNI?a6(!<7_f2s1(P[JT+H&O&*(^f1Yrh"ZJA;.L)1p1ep5=Vrd`EK1YtHnj5[XR&+b9+S)Z)+:,aBT.
_/_`R09Tf.!emSYq"$ocisZ1sBS\JLY&Ugd!!:!hD@lm;]C@=!TicOT9egJ(!/D^R-S320BG_Vbm=_jX
#XL8a4KlP.HRqtB,3TO@e%EWkJ\h!k7)dA(<o'V!<;rGAZ>r.\dHkNb+Ap@(7KE^MC*E`/YU(cl!21g&
*(Vo]2-AFPX@$'ccbPnS1G.]I<JH'tUt/XI;LBLBU8UEd-k]LG9nNK!6kZ`+*1-m:&4?16!5Sph"br:Z
#>0N_:`bOGG5Dib!We3J'I"Z*gMJ'@8.l@5@%DoJ+uRosHRibmgjt#jdZ!itkhMg3V?hu)dmpBhaa(FA
L]Hf%37J%Oj$3SHFk:>[3!*!!`_>$gJ9&f=ASG@O!<?8['ECC$[WS.68-f~>
/LZWDecode filter
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
end}
>> matrix makepattern grestore setpattern
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[0 -18.72 39.84 0 -72.553 701.608 ]ct
<<
/T 1
/W 40 
/H 84 
/M[40 0 0 -84 0 84 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
mf*:-rr3#u#QF`(p]pfu!T44^rrIWTrr48E#QOi'!!iQ(qu@!%s7cR!i;`9H#N.i)!!hEmJ,fi4!rr<+
i;N]W#N5R]!=.Q^!!*>_rVus(i;N]W#N5R]!=.Q^!!*>_rVus(i;N]X#N,Ra!!!8^rVus(i;N]W#N5R]
!=.Q^!!*>_rVus(i;N]W#N5R]!=.Q^!!*>_rVus(i;N]W#N5R]!=.Q^!!*>_rVus(i;N]W#N5R]!=.Q^
!!*>_rVus(i;N]W#N5R]!=.Q^!!*>_rVus(i;N]W#N5R]!=.Q^!!*>_rVus(i;N]W#N5R]!=.Q^!!*>_
rVus(i;N]W#N5R]!=.Q^!!*>_rVus(i;N]W#N5R]!=.Q^!!*>_rVus(i;N]W#N5R]!=.Q^!!*>_rVus(
i;N^*#N,X`!!hEm!!!8^5C`_=iW%g9#QOhn!!iQ(p](R!s82j%s8W&u#QFo+rr<<'rrKn?rr3#g#QF`(
r!33#!/L.FJ,~>

%%EndBinary
grestore
np
85.7615 344.546 mo
85.7615 307.106 li
80.9615 307.106 li
80.9615 344.546 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[37.44 0 0 4.8 -71.593 679.528 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 78 
/H 10 
/M[78 0 0 -10 0 10 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 78 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 78 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 78 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 78 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
IV/,*S81N&J<e?HG%sWYK9jidLk95?:N<2XkaZanOJ9A&\'40s\YmKi]#;q?cctMDilI[,Ej!%-gWm'O
CMSmAhsKC1J5^R"YORi,^,SP3(d(f#P$0q-*[s?TP%R0K0.J8,>(WG8,%O_bIXcF!\u^6oQ(!PlSXGt3
0s/BhH:Abn>B6R<OCKFG$7&i7V3bRE%4l=)[RU<C$Sie-&KMu]-5$gh$60F)*XN5Q!!3B>'^G`'"UGVF
!!!&q!!NED0f^m$rW!*8%QFIh"o83!&,H8-"98Gu!!!&R!!3?7#5\Bi%fgk:?qr=!.OSl.B.bbf3CI8B
HUpS%9L(pV\FA4OTVA6`]Zf'_aKN"j_n=+<cdV".jP$hkCNu5Ce(MF1MKs]A[FFGCd$]8pD2jqCTfB4l
!WW30$SZ?J!!``9%OkC:$kXO('b)KuY)Z[kAS#e+NM)u&E-d\1MO:!'T<t2mQsME_+\,b-V0Z/n)AtA1
I@l!V/g2Q-9VYMd*;]^;">'lU!!*N1q>^O#)>+"'!!*6)o`,.&(b.Hi"oSE(""slZ"8Vut!Up'h!nmVU
!t,2-!"9,5S(:(^*[DU4<.[ko'HAYU2dLuT5<;7k01K00^uO"4P,"khiT8+_WNWM+Z+n)lcM58q_j5Fc
M1^]!aJ,)hLkhIm[*>XuH%BsPL<-H(UC7,&#mpY`;'Z,F'Fb?n4td'C&deaP&iO0^KLeX:?$N0HKkb@H
GB8%aL51u9It)Z1-6Y6*6$n;#<C]5&-TOFoH<)RL2^p+:ITm%+!!E0"!spF_"8i-"&.SI9!t6+o%.!rs
"9AK&"8Dj!"pYb`$Msf*)[ZQKk5YPc!!(dS!!2or;#pZgYrOHh-l*Ui:Hp3Q/M'(b?"$)d7PR"f:L@k?
kK0WmYKu:\[&C4?ZEq?e`6@&pUQq+#I!h<1I#s\TP*qT(US4E]R#IAgJT$+9XC?9O!rrH4#RVb()$LK`
%1aC"*X;u`"q_(K%1u=*I9]]_N2W"[AT39JHAdf@P,bTh9Lh#k.RQ!M9i+5E4uPAc5t4X;4%VUp.5t41
#SR1?"p4i*!s\Z'!s/H&"8Dis"r6J)r;Zg*q#CR%#m^hE!rDru#7BMl!!1II'p51M-Qj*2&k"lI0H1rU
0i2+Z3'0TY2+fW/A6WrWilS7Ik16o9XL5^N^WamCf&s5jC1VdGFc(p%B5!$^OHY]aOagt^NKSsOH$G:M
=D%d;!!<9/,97a8#RLeC*$Q@(#87Oe!>>hB%oSgF=G3K2Am8edI<U4%NJa43DF#]o.l/V;4#J9/2Ea,b
2E!WL+"0A^763Ud/3?o<%fc_6rW!!&!!W3!%0?M0!<<6&!s&B%%3u&B!!!,d!!!5`!!!,p!8RWONik_i
&.]Eb:Lm?N%20m,:PNmH1I3WE3,O\'9OZ!/aQVs)R%1:a['[Na_p-`[JT,!uF+.bBL5')CL5gtMQ]RVe
?uM9kJqA>bLp0p%%K6>3#mDhB.gZ2E!selH7PXrF%g<(@+YXc6#Bd:tW3(,6;J'feEd`OkO-u8#1)piM
/flK)4W>4r3\rl_3C5D9-V$Qb3ADg>>QYcB"p=i)!XonWqZ$X6&GlG3$lK3P!#$%4!!!&q!:g*i#N>^`
!n.,lPcd.k)&",):6/<l'cSD=5Ep+A1H6m40j:*):K=.\jY,lKY*P`b[_p#%_91lt[VohuCiX`6DK^eZ
H&7-.OHYQ`Mg0T,Ko15/DO@h4DZTh;":P;U=sX"G5o*]c!!Wu?"9TH-.KBHG]:c$Y>=D:pBR+lOHA8Mt
F##6q+X8E\.kj+7-SmA85X.7n4t\]Y4[:e^-:M5@$3188"9AK&!@e<VrW!$&!"T/-!!jPM!WW3>#n7%+
!!!,d!!!8`!!36&!U]sO!(FB*4?#>B-PfFQ;&qMH/2LS>H9Fbc6W?E\Y*!!r@\WAD\tksrZFdla[]RC.
duA9YMN)k*GC4"UPamVUNKKZoPbY=Rrf\=JP^BL@H$B;h#m(bD,&\Y*((g`V07,to)&OAE3YNN50a.h%
<3_Bp;GC/$DKBf6@sY5@8MVbZ4X_d41aY:M7PcAS5t41/;I*3m84YL)/QQ3h%KHM9rW!$$3<TE]!!+8K
r;Zs$!!"DUr;Zj2"n2Kn"p4r*!!3E9!qcQm!!*-+p](9rq>^Kro)Jake,V#$c\usK78IfUX,2R62c5'm
b+>/9@npQdN6&B2F)/8P^nI$nVmEkC[_Bh3dd*rLG^6X:O+DM%IYkJLR$WGULldq6bIXa9R@K>6hlL^]
6RO-$1/Cbg;GT+c,",n)?sYTE-94R`F&c$Z-#0Q!9LMr]@VBRmG(bscALfc$A:-Qq/i,IN@rO_!2DR3U
7;RQo?q*jc5uO%M$6C-1*tSu+-9`k/&HE+H-4qpP,mO\U$QC!F+;=_S!"SZ%!!<*!!t6Xg#lO`*)'T=f
qu?d&&-_q2"!7RE!r;ls"o83!"o/,u"oJ?#!Ug!g!r;ls!W<#k!-/)?=6SM5:-2a5S\CV[BL,gXX5("a
Ddbn-NkWH?]oUG3^nR-YVP:E3XLH"&lFLP?L:,X_\uK^]L:Gpqc`h8.C6c*Pjk[S!Ck\_?qjA_<SPU4B
5@J2^AR7VG.SY&cF`9Ds)^nU-DHC1%J\Gtq6V9[D:L\?NCNlJXF<E#$DN]om==GO\Clk'7==5RA6XPYI
S8^G;4&hH\63&T55o0hH/2^!W3#_o2/0$`"/d_g`!$XH_+WLIm*VBC4!W2p"+u(MfrW!'31,^Njr;Zs&
'-J.tr;[*B1&q:\*<H3@"TSN(&-;n1!!3Z3!rN$!"U"]'!!DZi!WiN+qu?d&#m0r'!<N<"!!300!.Y~>

%%EndBinary
grestore
np
86.2415 344.066 mo
86.2415 307.106 li
85.7614 307.106 li
85.7614 344.066 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[36.96 0 0 .48 -71.113 679.048 ]ct
snap_to_device
<<
/T 1
/W 77 
/H 1 
/M[77 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BATjm(,n0SWC8a?5<M;EWIRE7;-$O`A?po(eF:.uJsr9qS$96)c->P!PZD@R\BrR2UMjCi\Cp5nR:^2K
PIB*)bJ8L>HHGp7BE~>
<~4K`iZ!"T>ZAe>+a%hB=)ANC;>)BTk++_!AOMm[Rc6<dl!<b?&TJ:OVI4Tu]_Ar)4Y=!SA4BToWR9-GQ+
6=PkGH#"lF/U>4)-3~>
<~&NV<B!rr<$,ldoF!!!!/1_Tim"U>#-!!iQ)!!WE'!!!!!!!!!!!s9AR!!!!!)(-aH#QOi)(+_Tq#64`(
!!*Q=!!!!!!!!]L!!~>
<~!"T)1!!!!!!<<*"!!!!!!WW3#!!!!!!!!!!!!!!!!!!!!!!!!!!!!'#!!!!!!!33%!!!!!!!Nr9!!!!!
!!!!"!!!!!!!!$#!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
86.7215 343.586 mo
86.7215 307.586 li
86.2415 307.586 li
86.2415 343.586 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[36 0 0 .48 -70.6331 678.568 ]ct
snap_to_device
<<
/T 1
/W 75 
/H 1 
/M[75 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BA':K*$e@%7irW`)(/"-D*]^(.ksCsR#f5PZ%\BsI$p"sUSu5pjkHPJLK&24S%Ni`CM[s?[_IWII"6a.
LnhtfL6d=Yi7`A~>
<~4Jlcp!!!ls(B=F8!!*m#,lmuG!!!*?7R27%A3Ng]6X`o->$?6ET8lPb0*WOG9Q2X:,9S9eBQ?6l0f(UL
2bnHj1-@*VSt@b~>
<~&PO>J"U+l/!!30&!!!!5!<<-$!<<*"!!!!$!!!!!!!!!!!!!!6'cR>W!rr<$$QB'G!!!!!(E`\X!!!!!
!!!!!!!!!!&/P<~>
<~!#tt=!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"!<E0#!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!<E0~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
87.2015 343.106 mo
87.2015 308.066 li
86.7215 308.066 li
86.7215 343.106 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[35.04 0 0 .48 -70.153 678.088 ]ct
snap_to_device
<<
/T 1
/W 73 
/H 1 
/M[73 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~3VLg$1dt#,,TS-R-qI$A91VTE77CORea/oiKnb\TOcZ]M_Va,&UMaCEF^]3ZR"&X^Is-^4JqJ-(GB\@f
RYm8uNMtOfCB~>
<~*5-t4!!sMc%1j3_$Q'Hp!>#eV$O%PEN3H)J6:=[S>#K$GH'sbU9,nNT,8DG!9fF:A/L`_K2E**N/M/Y9
7QNh)1J<e)-i~>
<~"$@+p"onW*!!!3'!!!!!!!!!!!!!!!#RUP3!!!!!!!!!!!"0MV"TSN&"98E3"onW'!!!!$!!!!!!!!!!
!!!!!!!!Z[!!~>
<~!##>4!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!&!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
87.6815 342.626 mo
87.6815 308.546 li
87.2014 308.546 li
87.2014 342.626 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[34.08 0 0 .48 -69.673 677.608 ]ct
snap_to_device
<<
/T 1
/W 71 
/H 1 
/M[71 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~5M4A=?tNjh'+u-6;dj!&5!D1o9pk(uTQl3NMN4'oS#X0eg44]YB4l!d?"[/>G%PDpD0TArJ8]XTG)VE3
A93j.jlpO~>
<~"HA'r+"oMX"U5/A,9e',!s8],$;.4_:bk1'7S[)q>%;WVP:nR#(DRi$'-7i*0I7n\,qTrQ2(:+//O)BU
)Cn!?S#e"~>
<~!#-7M!!Ei5!!!!!!!!!!!!!!!!!!oG!!!!!!!!!!!!!!)%KHJ/!!!$"!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!'Is.~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!'#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!=&T~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
88.1615 342.146 mo
88.1615 309.026 li
87.6815 309.026 li
87.6815 342.146 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[33.12 0 0 .48 -69.1931 677.128 ]ct
snap_to_device
<<
/T 1
/W 69 
/H 1 
/M[69 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~=K_,MUhM1u.4HW9L2&h:5ql*>l,/*eIXH[%P*M5lZ.7a%=]nm@<EW!sC0"8IATMF'EbKZMK8"DhGC,C-
S?),/G5~>
<~+CMXN?7Q!U"U5,P9eQPM!rrdAXEHTH2E!Ta9iFtaB9A`Z&J5Wr%M8mW+VbV;,V'ud.3U2u1cd0=0/>mX
:0FWO.0~>
<~!>n3c)#sa?!!!!!&HDe2!!N?.,R+5K!!!!!!!!!!!!*K.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!"2c!!~>
<~!!!lG!!!!!!!!!!!!!!!!!!!!"98E%!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!*%!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
88.6415 341.186 mo
88.6415 309.506 li
88.1615 309.506 li
88.1615 341.186 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[31.68 0 0 .48 -68.2331 676.648 ]ct
snap_to_device
<<
/T 1
/W 66 
/H 1 
/M[66 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BY!]G6V0Kt0NG&r7RKOtdak%,AT<!:I#a8ES\=.:K3aFpP@%*`>"r@[JS/b*Bk(\JVJ10qEcQS\W4pa-
Y[.~>
<~1j?KJ!"&u3![V_N'E\G$Mj$sa+=o6"2ap2&;K\q&4;gCL72l^K((V?H3$p!o,9It&;]mM<.4Hr4?$2?h
C`r~>
<~&iW,u!!!!!!!"5H!!!!!)]/PT!!!!!!!!!!!!!K9!!!!!#64`(!!!!$!!!!!!!!!!!!!!!!!!!!!tZS!
*<6~>
<~!!F,=!!!!!!!!$"!!!!!!<<*"!!!!!!!!!!!!!$"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'%
!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
89.1215 340.226 mo
89.1215 310.466 li
88.6414 310.466 li
88.6414 340.226 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[29.76 0 0 .48 -67.273 676.168 ]ct
snap_to_device
<<
/T 1
/W 62 
/H 1 
/M[62 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~JbS?BI:@`$_OmdTdduF\?tt.;E.s[GLQK13eWNU:]Y'tF@;BU]B;;quIWp'RF1ob[S:$-KR@r$r`.n~>
<~6+`q31F,(kM.:4\OLh)Q*%*U!.m6Hq4$d\]N^a3tEcP5(+=JTV,["nN1GCI0.Vj8l75$V[8lLq]L.V~>
<~(d08U!!!!-+:JYo(*XOp!!!!!!!!!!!!!!3&-)\1)B'.e!!!!!!"g+O!!!!!!!Nc2!!!!!!!"-'2B2~>
<~!#,S:!!!!!!<<*"!!NB'!!!!!!!!!!!!!!"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'4"on~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
89.6015 339.746 mo
89.6015 311.426 li
89.1215 311.426 li
89.1215 339.746 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[28.32 0 0 .48 -66.7931 675.688 ]ct
snap_to_device
<<
/T 1
/W 59 
/H 1 
/M[59 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0Ta)p[B6$uaT(PjRTs'1C2%R2L5:bhf&4b`>CX&t_R6(n>Zlic`8/=k<aM*5g"NutB:51Aj1K[~>
<~##'5tD.QXOK$g[$8Il:Y.46W%4Zto/MO/]7)`MS]I;iC[+s'*_I[bUJ)'):pO,ma4&k5?SVKkH~>
<~!#d4&#64`(!$2LU!!!!!!!!!!!!!!!"U>)/!!!o]+s.U.!!!6D-8?VG!!!$3'*nR<!!!!3,U<m~>
<~!!!$#!!!!!!!E<'!!!!!!!!!!!!!!!!!!!!!!!!"!<<*"!!!!!!=/]+!!!!!!!!!!!!!!!!s&B~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
90.0815 338.306 mo
90.0815 312.386 li
89.6015 312.386 li
89.6015 338.306 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[25.92 0 0 .48 -65.3531 675.208 ]ct
snap_to_device
<<
/T 1
/W 54 
/H 1 
/M[54 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~D4o,Cg"">bDI-CM?X-uWF*<).dH8K76<p4oU8#!'LIFgm[(*rNL1">6S!C&%`QmT,_.N~>
<~3+%NQQ^*:>'FG$Y)]9kO0.etRJY$aB!$#-_?XIbs8eMn1Df9l'3?K4q8O6:+E."=OFY<~>
<~";h1@!!!!!!!!!!!!!!!!!!!!#n$_5!!!NM',)N5"onW,)B9n5!<<*"!!!!!!!!<3$ip~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"!!!!!!!!$"!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
90.5615 336.866 mo
90.5615 313.346 li
90.0815 313.346 li
90.0815 336.866 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[23.52 0 0 .48 -63.9131 674.728 ]ct
snap_to_device
<<
/T 1
/W 49 
/H 1 
/M[49 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~D4S)KaN1caRZ)H-DgIemk/;d`AR&/.;-R72<`<"#?<_2Z=EeP>QaXu\lLMAn@f~>
<~3*Ka0I!fL+9ggil0JuFMUiA!i#7q@N&Kr;A*?#e8+WDmV&M,>"9PJs,WjQRg-3~>
<~"9JQ'!!!!!!!!!!!!!!$#ljr*!!!!!!!!!!!!!!!!!!!!!!!!#"V;7X+"7m(!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!sS`*!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
91.0415 334.946 mo
91.0415 314.786 li
90.5615 314.786 li
90.5615 334.946 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[20.16 0 0 .48 -61.993 674.248 ]ct
snap_to_device
<<
/T 1
/W 42 
/H 1 
/M[42 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~G'9RQ_YE?C`67*-gTc]iM0jZ)N0KQsU8=*CUp.SVeC_..S=uI5F`.~>
<~2)S<2J]P-]K8HJ:S7Oo>4>AZQ5=e==;ccL`<*sTlM3Mdc<`rHo/Lp~>
<~!!!!!"qC_8!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!=9/C&e>Td!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
91.5215 332.546 mo
91.5215 318.626 li
91.0415 318.626 li
91.0415 332.546 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[13.92 0 0 .48 -59.593 673.768 ]ct
snap_to_device
<<
/T 1
/W 29 
/H 1 
/M[29 0 0 -1 0 1 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~Bq(usS"6mo[^2H5@q0"YBP<!LJqAlGTU(n0=T~>
<~/m)[r=B'6WDJ;ig+<VpT-n%2?4?Pu(;bKbV-i~>
<~!!!!!!!`K6%KHJ/!!!!!!!!!!!!!!!!rr<$!r~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
154.221 320.366 mo
123.321 320.366 li
123.321 321.686 li
154.221 321.686 li
cp
124.221 316.646 mo
115.461 321.026 li
124.221 325.406 li
.75021 .679683 .670222 .90164 cmyk
f
6.74147 411.566 mo
34.3415 411.566 li
34.3415 230.426 li
6.74147 230.426 li
cp
.0806592 .0636606 .0646372 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
CNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf26.3015 405.267 mo(Drug)[-10.7714 -6.11096 -9.1944 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf26.3015 370.947 mo(\003r)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf26.3015 365.607 mo(addictive)[-8.38513 -9.19089 -9.19089 -4.00516 -7.40402 -5.8623 -4.00513 -7.74551 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf26.3015 301.107 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf26.3015 296.846 mo(patients)[-9.18564 -8.22046 -5.85703 -3.99991 -8.71271 -8.99292 -5.94113 0 ]yshgsave
89.9015 117.626 mo
38.9015 117.626 li
38.9015 66.6263 li
89.9015 66.6263 li
cp
eclp
37.7615 112.226 mo
71.6015 112.226 li
71.6015 72.6264 li
37.7615 72.6264 li
cp
/0 /CSA get_res setcolorspace
gsave
<<
/PatternType 1
/PaintType 1
/TilingType 1
/BBox [37.7615 72.6264 71.6015 112.226 ]
/XStep 33.84 
/YStep 39.6 
/PaintProc{ begin
/0 /CSA get_res setcolorspace
gsave
[0 -1 -1 0 765.29 272.953 ]ct
[0 -33.84 39.6 0 160.727 727.528 ]ct
snap_to_device
<<
/T 1
/W 48 
/H 56 
/M[48 0 0 -56 0 56 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~J0?%33$]7K#D>EP:q1$o*=mrkJh]6D<XoNB7,q-XiY!pR"ic-KfVg&/(^5P'5hRDP9FI4[jc\8<Qk_<>
b3"f4:acu9R*MUK\a9<8182R9!/\*)Ka^YX=&h;UR7*d'dcn+V<%2`a9[mgB>.TQ$Z@d_DnnL%&B*VYm
lkM#hlE+!kXF^HY-*#W`SC_Wp)liJp@p&n"pTT@N$#H_q_:^Mc%cpYqY&9/oU*,RR`T6De]S->'Pfgg[
2_<\AE4T:,9el]RIT;U;K?Eb%(a`[hb!E7s--!')@13H;PM*t,0t5r'a5&qI(slqIJNH+f/noH+>ckET
.I?pT5N[$<\M/:gDDW5lb!gou,ffX6_%-d0f#;H0Wp2(dXY9&tJAm(I8.G]OJ/AIl$IFU1r=9?i_HW>E
W@IKgE9oWT1sUaf"i7E^"VZDW,J=L$`M$nMJa-H0)1_3#J<b]DF;5!G^`#B@+D$+3ig0hM>Zo/M0G(Vl
dVPEU/P9K2kI32$8caGTa8mF)A\=!I(,H8+"3L-cTc1TSGT6s?d3K\692aIHbsN+#OB<7ZH!MeJZfhcE
bmF5221dW'"r,?2)Q+?B"cW%9!MD:Gm=:DeTdWN-r72+'jEYpYPE\ZBf1XSt@TXAaEEFX;FJUKPdgBYD
225]05$O>'eT;6t9ndOhbU%O<<gA<m)-8n"KeVCBY?2hhf#rn`?eU51#1lDBXajO(2,LJd`6`p>-Hul[
efe3S`N*cRDCk.\cUDhW#!634:N9:`?-EP-pIT$,huLn)3^om5BN\XfF^'1m=2eTgVDD<a7b6Y>6pa,7
[-__[oTe`^;R1Hg#!I&ZGQEJ"\HY@0\C?QnM\MG;=&8E77`g4'0FNg!"j([,`Pn('"j+<E[q/%:PA<%u
dI)7`aG$cR1lX:<Mdt)d&t%,K^i#VH"+(;3m[#qO1c#QgB!!j].C@V;jPUk(\UoVnqRDj6]U-%MZAu?s
3T,YM!X#+ZEp<naZSf&OjhWO^m@$\p^kgu?/0kM<!.ZJ!FlS.Ym&bGY>ED+K/dH=CPF7R[6U+l.#]9L2
KG-c%Vo?:H^r6@qBZ#0#0@cO=KTf=B%UCd-d:>_.@o16%!XW'NoBVDD'Lqs@3lXgFrp']<HATO9L3k4"
c1@1"Vmm8>/L&oaXls]M;PEJ-SaWO+1i<-h5KX=?hrF\Z"Ve`dL]g#fN!=gn)"bQK(BP@_%Y<[XO234k
5sSjAJP]U'Os3C$#WWiW&<)p:&-~>
/LZWDecode filter
<~J/dEC3$]7K#D>EP:q1$o*=mrkJWVpN<XoE=`8a^.iP$uP"@ds)fVfVr(^'o:5cH"u9F."Xjc\88*c3Tq
b3"f=[,,:RS\jQ_H,RjX$3GckZs!Se(p@(AC.X)165N4icfJ!"4[g5aWDr/^"\PX%"9JV)1Rd)B:L1/'
/1W3H7`q\JN8U"[<;P9(K.E5=$BiEl@D!%f,;A>'h^6(b-5ce?*E]CE=B7Gph*kS1/W@&(4Aa[KN=P"L
i*[rA#AM7FQ0S$R7:*3#/(NCF_8K_7i!]fN+f:WG3$V"F5S+J7?*KN/WXBia[9JtSNJFEODff/8i:+`r
:,s/"kOX[jKgIa$g]2ro(+S_"Z`JcpMZn^;=7fJk"ci@ai<DTXDB&o_=B6(>!VhHp#9nO@-_Q)?b3H3"
@6./u0Aob>`"2b;(;O@7D%hLD:_!O,:Nuj``W@\A$^IQ.<`TrGR3i[Q;#!j#8-(D@'Ep/R=RZLqW+m7U
O]5I"7E?]3g.(0q:q)/+pe2;nP3d`D"],J2d0?;[4Vbr>H9MJ)AKaV@'r=m2;\Z&VTcd!Z'_OTlP5%oi
^`eMC)2>uC&LY^3FP9V.&]%FH:5'QT;,8>@64d&r#Xp@:;DZW#LB,R1!!"d3"O4r_A?8[n70,YLKRjjj
%th[e4qE;\h"r:LO$$)U#5&fn;[r,aE)i/,0h5:Z"R&Gh"70\\%PaXG5S2,%+BIF1TtgprQ%_M#6WfGl
<`PCG.7R-tjS:hdepu[;H%U::ED=oUE*O4aO>p"YgdNV=JV%PSAlhu$73k]n`:5`GK>?m:%"eQ)Ve]KL
&5diZnka9ChuuD=lT3*+"WL]I<SU?5@`BZ%K-7BOQiga`miVcdk[-Ydq$ooX+Do&63L#eS5#2<LGV0@*
^q_W5"1GF&S7c!_8Y6&fa<dLg1Q@Pq?'fE&%>,e;Q^Q^\cD_FhJ0=5uPlr+a<#*lIPBBcINldXj2k=fE
aI)!Z@*Keo0k(UpKc3tZe#>qlKG]^s^>?B<q@j*7ebC)82&r9@0L^7k`_,>I9G<(@e`[K]pV`!734(mX
c_,%P&^g-$@+eZT3/^Ybo)-CV'*Iho?*.mj"*Y[RK1OHCel9V,>Z4Sb9g@7'J7KP>h3s:SZYdnQ%EJ+C
/PTRdm/l7c4uT\]4TU-C=dEs%)Sm'8`:I8\dfb\E_72K1-QF'R+FXFN5S#""bZQ#H67YKLK*D=c'Vk_(
OHM"A5XpPI"ZSXMJXOhdKG6h1O^;ZBYcop7Tcp43!.]WXoH_3\jrEDfAI(h`;FV]3Pn@1E`&M`GJ[cR<
jlU'p0rm19gt7^]q\.rI@1u0K)kGC_C5_^D+`Tb@`RqgM8sE6Yjd`]D\%Y5(pmE;q,elfhN^8Q@D(2a&
K+p).>@XION7#p5O@]*e,O#Al;?B+F11""?"GItOI)!as/kr*_NZa"2Oi\dW7c^qE-):Y~>
/LZWDecode filter
<~J/dEC3$]7K#D>EP:q1$o*=mrkJT3Z.<XoB<7,q-XiP$uO"3,n3fVfVr(^#A$5a`le9F$qWjc\88'FG&3
8nE'7Cr1*NR84uil,:Sc6A0miPA2Z6<=V3k'D4D\3=:Iod]&H<4<['j51F>4>.PG*RY01lFD?5M^L4$C
e+IIHSMX:q5qQ%4ABkUR:0[-g4/k35GUa'>B)/knM?jN!6;VdpGr\gGk&W!E$=N!i-BiDf6A\>L/&m-+
!5OW(-'Nr='?U3AGANo+D32\f3@'b[-0P[3;K4[V"d"AQi=0Hj?[kg^G1i,Er16tYOU-V<0ctbX-Lgf+
EJKn'2Ck'75gNgn$e*lY'=N"&(lC^)OM=1-#nOQ7#u(Dq.12e_IN8X/d#o^^J_6_&MC9Ua0Y1fR2GH*H
0Sgj-&EnK`6_XR4+[>H%TI:.5GYAVM5d2L=!PirB)2Soh.*FebaXg'jJe3GS#GL43*XAD:3['<@!1r/,
0jIp!J^8,aJiZ<a3)#NHbd8Q!iS\l"LGK3W08G]EKH`L[#bEN$O^q`7!J"/1"X%j55#)bfYqeucjLE2N
#=6FK)c2*iDB&mIfQnZ3!]1`A$A,3@-dD\q/-&G@bA@V#'BF=/LLIu9)MV[nA/YZGY]2>DDt&u;$*YOP
8cc_e02*K`S?bjbAAp_P#/R6K(taD!92u4*i.3](@UPo[MRB*I>G,r:ZqNtXR3kN2@A%'H"i4kU(Bsnr
BH)]u<(-0]@Z;Q@&B-(d;%OM;"KBPp`I(8j7$/TIL*:eF'nnqM=)m$3Y]DRU&l],W'fV7C:'-f].;G'N
]m*56UnK#oO+E*l'nmer;hG7ILh%FS@JGHC#pOVk.YkNnk"ZXoa]*hkADHZJP2s&5ILPrV<"jr$+A[Un
f._(_6io'%R+_;<-(JUM_Z;=?`3lsCL=mD?'81oJ8ecuJBP@V70'Jj=L:O`>$1<>8ZqWmYi@[`cUn0si
lsV6*'Er\,c_q*fOH[0-,T\3phSXba4\qR+-lLr/<lPdV!Dlr9j`aE8QtBBXh?O/<Lse,DXL'WDc_FdZ
UL:W%<C;O^1V=t>ig"0*Jc(>\WP[#iGts-[+CfCG<tJ[UL7u<s*sb`2Pg\!.3#U[+/Z*qZO$h97)[9`A
^))25,u[2:YNpQ^M?25_-io^D/qRF5p3]SqA)+l2'ehBI8sSUmOE@d[#Xh\TJL<UR3<R(U"udpONJ#j^
Y[8lZH;GS'VJqJ,_H9N$:X-]X1X$750Ui_bH!M_\]VnmukQ_ERL*,?6UYmnYHuK?6J`qIdLcMb!D\1(t
e;t2?9$'WH0I$^NP';L;<f0aF*>oD4"<tVm+T_@&$3R5E?"ff?8JM`NOGOX&==9(u+9`a[QtqYC#nP/1
bSa<u-j7VR&4-XfKVW<#N+%]'B/Je5T]73>+_)24J0gsG#\m#kOH(S=6jUmd-,a4kO^TfJPd8k=Mt%7?
!\fCuP+#3>5mW^oE43oP%V)>GTp<P-U.ZA:.Z<A\QK00TQe?OJjm9RFj;<s%.>C,["NHhi'Tj"gQ9iUI
c^I8/J:I~>
/LZWDecode filter
<~J-@&l3$]7K#D>EP:q1$o*=mrkJ.Xc"<Y#k&73^-hb[rdLNlRpb)%9tE&<b/2nC^L8<st>6V=9n3aqcmC
0rIsI.=@(DQq_!]q9[i84.]6Gl.#'+C&ipfk`f5p,'l_L;\QKPI6nFK=OcMm7Oo7:40?RjQ.S.BB!Gi#
(ec7Xrp7F/0c/o4'm>97[k-15-1^GH\Ql8fl]p;/rD/&MQqR,+h.j@,K-FajI"VZOO[/E["le?MY>qUB
=k`'E>QKEX!>oCZ`EK0%*]9D2L`q,Q<[lN%;QfIM"M8MN8lYXu.$Wb%i+UVTl"6tpF&E:N?Uk"C7dX1_
,g&[oKgMFofa&5`HF6eQ'<-(o)$#1MqX<B:6HrJ+'-r,?5W9pWoDf%a;.s,;bmP(bPm$^B6B?bdju.`C
dC08pKZc^$($.O>7Z_-,i])p*bV]kD-QHB2TPQo#<((7FpBqG4"2,/[EGSu!QS='!6]\"@l8QNKj>tYl
cFH>;P!hkE4ca*S%MM3\K0o;Jja4<6OX(eK5="IJ"pff,bP_0"KLldWbc+2??5JZT`_DVLJK["u8/dHQ
'sAK7#6E<58qP?Ba_FnB73EGl:rqo1pJFA9<sqn_Op])^NA@:^dj];CaVX'f&BgA[dlQ*ge*7@:(lPAB
?EhE%H=*$>>iLEkcJm!W/nQ8_SJK(MD@-F&K%.4P5lI4Zg&k>3M*7/<5%=tDc*T(#G*9LifnadZ/YVm<
Au?t73Y_PK82](Dg_2R'KO.`Nh,dq7MUd+1%1W,[e5uVAJRF>'!W~>
/LZWDecode filter
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
end}
>> matrix makepattern grestore setpattern
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[0 -33.84 39.6 0 160.727 727.528 ]ct
<<
/T 1
/W 48 
/H 56 
/M[48 0 0 -56 0 56 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
lMgk)rVlot#Q=Z'r!33#!W33$rrMm"rVlof#Q=Z'n-Apl!T44]rtOArs6p'h^^'l>!'e7(rVup'^^'f:
!!7ZUq#(0n#Pe5t!=/,m!!*>_r;Zj'i;EWV#N5O\!=-F=!!*>?r;Zj'_#466#Jg9<!=-F=!!*>?r;Zj'
_#466#Jg9<!=-F=!!*>?r;Zj'_#466#N5O\!=.Q]!!*>or;Zj'q#(0n#Pe5t!=/Q$!!*?(rW!IZ#QK;S
#J^TE^]6U7#QO](+90+]rVloV#Q=Z'i!95\!Up?mrrMTorVlon#Q=Z'r!33#!W33$rrN*(r;QbPr;Qc;
n,In~>

%%EndBinary
grestore
np
88.1615 110.787 mo
88.1615 74.0673 li
69.4415 74.0673 li
69.4415 110.787 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[0 -1 -1 0 765.29 272.953 ]ct
[36.72 0 0 18.72 162.166 677.128 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 51 
/H 26 
/M[51 0 0 -26 0 26 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
!!`0-r=B)7"&reAr;Zq2^:n:Z!!EfU73)L/&GQ_9"U+Q-!"/]1"98Eh;$[%""&l>(<;ce"#8]60!<*6(
$MY#/"8<*%$N:bC$O]@$')_e1<!')"<W)n#&g0+U$iUh?$ht#."7H3i!W2p"!T2c8l2UempC@69rXo>B
(c=N5r;ZqZ]tKL*!!EpE<>>`;&c`O=%fm(FpC%$/rWr]1%OEeSr;ZqDXK6^G!!EX*6OX"p#lk>-%.so,
')iUK',rPW0DtkQG,hQer;Zs7;FMH7rY5DHpBg'a"!6:S+oD<?!Up*_&c*+A>"Snr!!A4p^5r6n!s;Cf
.f0kQ&bZV/$3EaZ!r`0%Gce)nrW!$%5VjDW$Mb)%$i1V?90*+Q!!@ABW-8.?!s(bH-i4\R$g@Wn*o#El
l2^Mj!DjU0'E_9B!!!-%OM/>jrW!!X5[""!!>eH('(ub857[Pu!C9N\!!@PLXaU0K!\,opr!NN84SK<Y
$NWI0q\B2u:At4qH)IQcrW!!M1.qH[!>dus$iUOu!!=M!fI#k`ob%?J5V3fO'b)*R?3pV!]Y'[5!&[;I
rY5MO/3Y$H'(l_:'epd?rX8i@3D9ba!/%ASKE)!$3(3`S!tHA,'_W%0$Nh,"-lN"#%3%<$"os4QW.P'M
.QBrt(BYO&0G='ekl:fAe^ZSG!;uoh',ME66Qm3\-<El6TWkYr5#asB(`"8Z-l;Lho*lKJ+#=W@%2hVs
4,ff(O>0'Z3=ZK70HUhf%0d@c2]rqS,7m=+4GT>mO"s*[4rP7\2BED$%I!ip7"^+kl2^>g!>c[R(]jqB
=oCGa5\h,6(]bNipD!N>nI>R1&H3.@"@PcY/cd\.r=8i=iXPu")ZCQT"@YiZ/cme1&,mCH)%Z9Jm/Zn]
!!;Kep([`]6p+pf55c?*$31(<M+"KH!"/WAneLj0"X,]U:JWYB%g`C>!3C9!S,`Nmr"&Q6q[iH3"X,cW
;,K7M)$pTL!2X`nRK*<mr#,&9o)Sdkq#CN@)?>6O!;I<9.Behi7sn]=;]H/a)]A\V]=W)Z"99A;)tOj?
&JZF[H#koW9ft`T&J5QS!3E8.56:frm1K+)'d&rhE]%K*4@L5-)&E8QV57N`!WX&6)>Xp@&GH/-LERN8
$hs]'b/snP!;I?:[mjOa<N%B,9Nh?7#64q>]=1]^!;RW,(\eRJW&@."7?niA49.nN&dJC=X/i-b)?BRG
lOaH"1eB;dO<lSC9)]_6!!B$mTgKb!qAK>OoF^iu!5&10!+,F#!m&HdnGr@bq&0bkZ7]*g/;9W991:'H
*WR_i\cQbX!;df<+#`a0q%F8[U*;p&+`E)K3AhTd'*'0SWrcI!!;dE1'Ir_gq%3lQSK^Bu+DlfP#!Xpe
*#nr%rhKU":B:83!?EZ^&bl>1P5kR`!#.Nj!<0k9"6om_)\=JS[5S^1+KUu*+'3+t*tpg:\H8:/'DijO
5PuJq)u:6[+=O*:$O[c>JiXT8<"p#V0`J'RLJ89U'EBo['`&FR+=Ep6%1F&;ImP/F<ui:k0`IgKK23!S
*<7tg')2G,Z2FY'E&%=l!!<*!rkAFol2^Z"&5l(6ZC[VgJ<>^35<h=S+?f_8!H_cI+94=j)u:9\6TPaQ
M27U8H?'`R0J4(T0`J*R?qpM6!%Ig\pD*N<&3r8dTSJ8gBQnM<2(pj.*AIJd!F\e$*<7__'DDJ2Sj5J^
%3c\d!<0P0#3l3b*X@aN8I5qC))VkhP9V5b;(3YN\[f(D+T*A`,:N+(q@s`lB06A*&/$C@Hl3`#5ogap
WiDm[)>k9O)'/#X'm3tG"UY_P-[^1]*EGBM*AF.ZS3Iqi*<@6'r>##@q>^O>$2X]*/1(>s!rW*#[^MUg
!;[cPOIqu2Bj,OoP_:q>-s]k7<4&`2Bi=jR!&X3fqA0?`O,8`q8R;m0I;C>M*(`RL6_p2D<C-R"!?!<U
(]"j]G(Y6q<(:1tH>=rO,>1H[6_9E3<^H[*!?Wc\(&@n:,!e+J!WWB+-P?1T".X-,!qlWe!;[iR8@5_1
\!_)MDEf:.,V3+m:f'i)ZsEVU!'BZnqA9r,WN*&'KiqP^0GlD\+@nUZ5<E)G8c9P-/asVR('QUbR$jIn
%pE.@0,?8a,t^9a5s&AB9Doq40^okR!!Jj\U9ufV"8;cr".AESq&pGDXJ2/?D2ge(+XAH_-87]gYdLl'
r[%Xo,lJnY+o)rh3h;@dFBNfD(`4/2)B'hTT:`!X0E)jj*#e;`q&'l-PD=X/>')J:)&aY@+=B%7R@p3/
rZD4b)XnX>!!7+21BJHs*V]U:JV0kul2^Q(",=%cK`!+q.fLgo[/MHQ.ISPV)?Y#UVJlAN!$D.ZrMBH4
!$;(Wko'Y>QBc7`)?Cp(rZM03rZD4b+R^6C!!<pjLD'=]rLrKVp*KJ[!'gH3"-p:%QMr<54RON_)uq\l
*<UbfVLe^e!&*a[m2>sZrZMAjS=Fs*+TO4p)Y+g2!!=^ASLj%+m3`8j2_$;3['YH8.Q&[C-heYU*=Er=
*?B'pV/@:o-m.jtm2HER.O$'RS=FC>+tF]%)sI>)'Ub@%q>g$clRE-//hX<2/hTNX.dJ/]2^'?8T-5@8
efOrN,9m>XQ6RV4llYEk!IB+W!9u*=6nbL<00nkT!%dCY"Z.EhQ6J-N+mL0R1aJ'@,Vn[.kl:bb>@$In
l7E/n4_&"a0^C=U+pB5F;,Akjm3;QSl6$6S0MY@r,3pB8!<3)a!9u6@0L7NO5O're,QfeL-8O!p"#;5N
1$p7c,gHDR1BC!7kqhWPr[%Y)2<cIO-3#pg-.2el!7!FH-gW2?-I)UA~>

%%EndBinary
grestore
np
grestore
96.5015 99.2664 mo
130.881 99.2664 li
130.881 97.9464 li
96.5015 97.9464 li
cp
129.981 102.987 mo
138.741 98.6074 li
129.981 94.2274 li
.75021 .679683 .670222 .90164 cmyk
f
136.041 86.7274 mo
101.661 86.7274 li
101.661 88.0472 li
136.041 88.0472 li
cp
102.561 83.0063 mo
93.8015 87.3864 li
102.561 91.7664 li
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UJRAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CNQIZX+Calibri gcheck setglobal} if
2 4006 296 <00010025fffa02860578003c0064b2161000b8ffe0b40b014d001bb8fff0
b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b30b014d1b
b801f9b2302a25b8ffd040121011014c250aed36471a26ed3048204c1048
003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c4313001140e022322
2e0223220e02151533321e02151406232311140e0223222e023511232226
35343e02333335343e0233321e0402860405080607151e291b2534200ec9
080b0905120fc908132018182013087f101004080c087f23486d4a234224
0c0803050f13170e05090b091833513a6207111a132420fceb080b080404
080b0803152024131a11075d5e8756290d0f0c131b00>CNQIZX+Calibri AddT42Char 
2 8556 455 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>CNQIZX+Calibri AddT42Char 
CNQIZX+Calibri /CharStrings get begin
/f 296 def
/y 455 def
end
CNQIZX+Calibri /Encoding get
dup 102 /f put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CNQIZX+Calibri*1 [65{/.notdef}rp /A /B /C /D 8{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]CNQIZX+Calibri nfCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf129.801 424.107 mo(Momentary)[-14.9918 -9.24518 -14.0107 -8.73724 -8.99289 -5.64157 -8.40442 -6.12671 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf129.801 340.048 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf150.801 404.488 mo(feedback)[-4.91599 -8.70572 -8.70569 -9.17862 -9.17862 -8.37289 -7.39175 0 ]ysh130.821 307.947 mo(Data)[-10.7959 -8.22046 -5.64154 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf130.821 274.887 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf151.821 307.947 mo(summary)[-6.8627 -9.21014 -14.0107 -14.0107 -8.40442 -6.12671 0 ]ysh114.86 72.7468 mo(Statistical)[-8.03815 -5.6416 -8.22046 -5.88153 -4.00867 -6.71729 -5.86578 -4.00867 -7.40753 -8.38867 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf114.86 4.5274 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf135.86 72.7468 mo(data)[-9.17334 -8.22046 -5.6416 0 ]ysh123.38 189.987 mo(Monitoring)[-14.9742 -9.22766 -9.19269 -4.0069 -5.70111 -9.23468 -6.10919 -4.0069 -9.19263 0 ]ysh6.74147 190.946 mo
34.3415 190.946 li
34.3415 6.32635 li
6.74147 6.32635 li
cp
.0806592 .0636606 .0646372 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UJRAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CNQIZX+Calibri gcheck setglobal} if
2 8758 876 <00010001fee7030a05be00150008b11005002f2f3130170e0323222e0237
013e0333321e0207a8040d141d151921120406025d040d131e1519201204
05f10d0f0804070d130d067b0d0f0903070c140d>CNQIZX+Calibri AddT42Char 
CNQIZX+Calibri /CharStrings get begin
/slash 876 def
end
CNQIZX+Calibri /Encoding get
dup 47 /slash put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/CNQIZX+Calibri*1 [47{/.notdef}rp /slash 17{/.notdef}rp /A /B /C /D 8{/.notdef}rp /M 2{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]CNQIZX+Calibri nfCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf26.3015 184.647 mo(Psychiatrist)[-8.78101 -6.57361 -7.65979 -7.383 -9.1734 -4.01215 -8.22046 -5.9411 -6.12677 -4.07172 -6.71899 0 ]yshCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf26.3015 104.127 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf26.3015 99.9271 mo(/)shCNQIZY+Calibri [0 -17.52 -17.52 0 0 0 ]msf26.3015 93.1469 mo(\000\003)shCNQIZX+Calibri*1 [0 -17.52 -17.52 0 0 0 ]msf26.3015 89.1874 mo(researcher)[-5.88672 -8.70746 -6.83813 -8.70746 -8.40094 -5.94629 -7.383 -9.23291 -8.76703 0 ]yshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/CNQIZX+Calibri*1 uf/CNQIZX+Calibri uf/UJRAAA+Calibri uf/CNQIZY+Calibri-Identity-H uf/CNQIZY+Calibri /CIDFont urAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
